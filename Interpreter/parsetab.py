
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'inicioleftMASMENOSleftPORDIVIDIDOMODULOrightPOTENCIAleftGELELTGTEQrightUMINUSASIGNACION BOOL CADENA CARACTER CHAR COMENTARIO_MULTILINEA COMENTARIO_UNA_LINEA DECIMAL DECREMENTO DIVIDIDO ENTERO EQ FALSE FLOAT GE GT ID INCREMENTO INT LE LLAVE_DER LLAVE_IZQ LT MAS MENOS MODULO PARDER PARIZQ POR POTENCIA PRINTLN PTCOMA STRING TRUEinicio : expresion\n              | lista_expresiones\n              | comentario_una_linea\n              | comentario_multi_linealista_expresiones : lista_expresiones expresion PTCOMA\n                         | expresion PTCOMAexpresion : ENTEROexpresion : DECIMALexpresion : CARACTERexpresion : CADENAexpresion : IDexpresion : MENOS expresion %prec UMINUSexpresion : expresion MAS expresionexpresion : expresion MENOS expresionexpresion : expresion POR expresionexpresion : expresion DIVIDIDO expresionexpresion : expresion POTENCIA expresionexpresion : expresion MODULO expresionexpresion : ID ASIGNACION expresiontipo : INT\n            | FLOAT\n            | CHAR\n            | STRING\n            | BOOLexpresion : PRINTLN PARIZQ expresion PARDERexpresion : tipo ID ASIGNACION expresionexpresion : expresion GE expresion\n                 | expresion LE expresion\n                 | expresion LT expresion\n                 | expresion GT expresion\n                 | expresion EQ expresionexpresion : ID INCREMENTOexpresion : ID DECREMENTOcomentario_multi_linea : COMENTARIO_MULTILINEAcomentario_una_linea : COMENTARIO_UNA_LINEA'
    
_lr_action_items = {'ENTERO':([0,3,11,21,22,23,24,25,26,27,28,29,30,31,32,34,38,51,54,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,-6,6,6,-5,6,]),'DECIMAL':([0,3,11,21,22,23,24,25,26,27,28,29,30,31,32,34,38,51,54,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,-6,7,7,-5,7,]),'CARACTER':([0,3,11,21,22,23,24,25,26,27,28,29,30,31,32,34,38,51,54,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,-6,8,8,-5,8,]),'CADENA':([0,3,11,21,22,23,24,25,26,27,28,29,30,31,32,34,38,51,54,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,-6,9,9,-5,9,]),'ID':([0,3,11,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,38,51,54,],[10,10,10,39,-20,-21,-22,-23,-24,10,10,10,10,10,10,10,10,10,10,10,-6,10,10,-5,10,]),'MENOS':([0,2,3,6,7,8,9,10,11,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,],[11,22,11,-7,-8,-9,-10,-11,11,11,11,11,11,11,11,11,11,11,11,11,-6,22,11,-32,-33,-12,11,-13,-14,-15,-16,-17,-18,-27,-28,-29,-30,-31,-5,22,22,11,-25,22,]),'PRINTLN':([0,3,11,21,22,23,24,25,26,27,28,29,30,31,32,34,38,51,54,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,-6,12,12,-5,12,]),'COMENTARIO_UNA_LINEA':([0,],[14,]),'COMENTARIO_MULTILINEA':([0,],[15,]),'INT':([0,3,11,21,22,23,24,25,26,27,28,29,30,31,32,34,38,51,54,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,-6,16,16,-5,16,]),'FLOAT':([0,3,11,21,22,23,24,25,26,27,28,29,30,31,32,34,38,51,54,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,-6,17,17,-5,17,]),'CHAR':([0,3,11,21,22,23,24,25,26,27,28,29,30,31,32,34,38,51,54,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,-6,18,18,-5,18,]),'STRING':([0,3,11,21,22,23,24,25,26,27,28,29,30,31,32,34,38,51,54,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,-6,19,19,-5,19,]),'BOOL':([0,3,11,21,22,23,24,25,26,27,28,29,30,31,32,34,38,51,54,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,-6,20,20,-5,20,]),'$end':([1,2,3,4,5,6,7,8,9,10,14,15,32,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,55,56,],[0,-1,-2,-3,-4,-7,-8,-9,-10,-11,-35,-34,-6,-32,-33,-12,-13,-14,-15,-16,-17,-18,-27,-28,-29,-30,-31,-5,-19,-25,-26,]),'MAS':([2,6,7,8,9,10,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,52,53,55,56,],[21,-7,-8,-9,-10,-11,21,-32,-33,-12,-13,-14,-15,-16,-17,-18,-27,-28,-29,-30,-31,21,21,-25,21,]),'POR':([2,6,7,8,9,10,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,52,53,55,56,],[23,-7,-8,-9,-10,-11,23,-32,-33,-12,23,23,-15,-16,-17,-18,-27,-28,-29,-30,-31,23,23,-25,23,]),'DIVIDIDO':([2,6,7,8,9,10,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,52,53,55,56,],[24,-7,-8,-9,-10,-11,24,-32,-33,-12,24,24,-15,-16,-17,-18,-27,-28,-29,-30,-31,24,24,-25,24,]),'POTENCIA':([2,6,7,8,9,10,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,52,53,55,56,],[25,-7,-8,-9,-10,-11,25,-32,-33,-12,25,25,25,25,25,25,-27,-28,-29,-30,-31,25,25,-25,25,]),'MODULO':([2,6,7,8,9,10,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,52,53,55,56,],[26,-7,-8,-9,-10,-11,26,-32,-33,-12,26,26,-15,-16,-17,-18,-27,-28,-29,-30,-31,26,26,-25,26,]),'GE':([2,6,7,8,9,10,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,52,53,55,56,],[27,-7,-8,-9,-10,-11,27,-32,-33,-12,27,27,27,27,27,27,-27,-28,-29,-30,-31,27,27,-25,27,]),'LE':([2,6,7,8,9,10,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,52,53,55,56,],[28,-7,-8,-9,-10,-11,28,-32,-33,-12,28,28,28,28,28,28,-27,-28,-29,-30,-31,28,28,-25,28,]),'LT':([2,6,7,8,9,10,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,52,53,55,56,],[29,-7,-8,-9,-10,-11,29,-32,-33,-12,29,29,29,29,29,29,-27,-28,-29,-30,-31,29,29,-25,29,]),'GT':([2,6,7,8,9,10,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,52,53,55,56,],[30,-7,-8,-9,-10,-11,30,-32,-33,-12,30,30,30,30,30,30,-27,-28,-29,-30,-31,30,30,-25,30,]),'EQ':([2,6,7,8,9,10,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,52,53,55,56,],[31,-7,-8,-9,-10,-11,31,-32,-33,-12,31,31,31,31,31,31,-27,-28,-29,-30,-31,31,31,-25,31,]),'PTCOMA':([2,6,7,8,9,10,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,52,55,56,],[32,-7,-8,-9,-10,-11,51,-32,-33,-12,-13,-14,-15,-16,-17,-18,-27,-28,-29,-30,-31,-19,-25,-26,]),'PARDER':([6,7,8,9,10,35,36,37,40,41,42,43,44,45,46,47,48,49,50,52,53,55,56,],[-7,-8,-9,-10,-11,-32,-33,-12,-13,-14,-15,-16,-17,-18,-27,-28,-29,-30,-31,-19,55,-25,-26,]),'ASIGNACION':([10,39,],[34,54,]),'INCREMENTO':([10,],[35,]),'DECREMENTO':([10,],[36,]),'PARIZQ':([12,],[38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'expresion':([0,3,11,21,22,23,24,25,26,27,28,29,30,31,34,38,54,],[2,33,37,40,41,42,43,44,45,46,47,48,49,50,52,53,56,]),'lista_expresiones':([0,],[3,]),'comentario_una_linea':([0,],[4,]),'comentario_multi_linea':([0,],[5,]),'tipo':([0,3,11,21,22,23,24,25,26,27,28,29,30,31,34,38,54,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> expresion','inicio',1,'p_inicio','parser.py',18),
  ('inicio -> lista_expresiones','inicio',1,'p_inicio','parser.py',19),
  ('inicio -> comentario_una_linea','inicio',1,'p_inicio','parser.py',20),
  ('inicio -> comentario_multi_linea','inicio',1,'p_inicio','parser.py',21),
  ('lista_expresiones -> lista_expresiones expresion PTCOMA','lista_expresiones',3,'p_lista_expresiones','parser.py',25),
  ('lista_expresiones -> expresion PTCOMA','lista_expresiones',2,'p_lista_expresiones','parser.py',26),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','parser.py',36),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_decimal','parser.py',40),
  ('expresion -> CARACTER','expresion',1,'p_expresion_caracter','parser.py',45),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','parser.py',49),
  ('expresion -> ID','expresion',1,'p_expresion_id','parser.py',53),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_negativa','parser.py',58),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_suma','parser.py',62),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_resta','parser.py',66),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_multiplicacion','parser.py',70),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_division','parser.py',74),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_potencia','parser.py',78),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_modulo','parser.py',82),
  ('expresion -> ID ASIGNACION expresion','expresion',3,'p_asignacion','parser.py',86),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',90),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',91),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',92),
  ('tipo -> STRING','tipo',1,'p_tipo','parser.py',93),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',94),
  ('expresion -> PRINTLN PARIZQ expresion PARDER','expresion',4,'p_expresion_println','parser.py',98),
  ('expresion -> tipo ID ASIGNACION expresion','expresion',4,'p_declaracion_asignacion','parser.py',102),
  ('expresion -> expresion GE expresion','expresion',3,'p_expresion_comparacion','parser.py',115),
  ('expresion -> expresion LE expresion','expresion',3,'p_expresion_comparacion','parser.py',116),
  ('expresion -> expresion LT expresion','expresion',3,'p_expresion_comparacion','parser.py',117),
  ('expresion -> expresion GT expresion','expresion',3,'p_expresion_comparacion','parser.py',118),
  ('expresion -> expresion EQ expresion','expresion',3,'p_expresion_comparacion','parser.py',119),
  ('expresion -> ID INCREMENTO','expresion',2,'p_expresion_incremento','parser.py',133),
  ('expresion -> ID DECREMENTO','expresion',2,'p_expresion_decremento','parser.py',137),
  ('comentario_multi_linea -> COMENTARIO_MULTILINEA','comentario_multi_linea',1,'p_comentario_multi_linea','parser.py',141),
  ('comentario_una_linea -> COMENTARIO_UNA_LINEA','comentario_una_linea',1,'p_comentario_una_linea','parser.py',146),
]
