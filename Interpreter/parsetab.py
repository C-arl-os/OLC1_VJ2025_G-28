
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'inicioleftMASMENOSleftPORDIVIDIDOCOMENTARIO_MULTILINEA COMENTARIO_UNA_LINEA DIVIDIDO ENTERO FLOTANTE ID IGUAL INT MAS MENOS PARDER PARIZQ POR PTCOMAexpresion : INT ID IGUAL expresion PTCOMAexpresion : ENTEROexpresion : FLOTANTEexpresion : expresion MAS expresionexpresion : expresion MENOS expresionexpresion : expresion POR expresionexpresion : INT PARIZQ expresion PARDER PTCOMAinicio : expresion\n              | comentario_una_linea\n              | comentario_multi_lineaexpresion : expresion DIVIDIDO expresioncomentario_multi_linea : COMENTARIO_MULTILINEAcomentario_una_linea : COMENTARIO_UNA_LINEA'
    
_lr_action_items = {'INT':([0,10,11,12,13,15,20,],[5,5,5,5,5,5,5,]),'ENTERO':([0,10,11,12,13,15,20,],[6,6,6,6,6,6,6,]),'FLOTANTE':([0,10,11,12,13,15,20,],[7,7,7,7,7,7,7,]),'COMENTARIO_UNA_LINEA':([0,],[8,]),'COMENTARIO_MULTILINEA':([0,],[9,]),'$end':([1,2,3,4,6,7,8,9,16,17,18,19,24,25,],[0,-8,-9,-10,-2,-3,-13,-12,-4,-5,-6,-11,-1,-7,]),'MAS':([2,6,7,16,17,18,19,21,22,24,25,],[10,-2,-3,-4,-5,-6,-11,10,10,-1,-7,]),'MENOS':([2,6,7,16,17,18,19,21,22,24,25,],[11,-2,-3,-4,-5,-6,-11,11,11,-1,-7,]),'POR':([2,6,7,16,17,18,19,21,22,24,25,],[12,-2,-3,12,12,-6,-11,12,12,-1,-7,]),'DIVIDIDO':([2,6,7,16,17,18,19,21,22,24,25,],[13,-2,-3,13,13,-6,-11,13,13,-1,-7,]),'ID':([5,],[14,]),'PARIZQ':([5,],[15,]),'PARDER':([6,7,16,17,18,19,21,24,25,],[-2,-3,-4,-5,-6,-11,23,-1,-7,]),'PTCOMA':([6,7,16,17,18,19,22,23,24,25,],[-2,-3,-4,-5,-6,-11,24,25,-1,-7,]),'IGUAL':([14,],[20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'expresion':([0,10,11,12,13,15,20,],[2,16,17,18,19,21,22,]),'comentario_una_linea':([0,],[3,]),'comentario_multi_linea':([0,],[4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('expresion -> INT ID IGUAL expresion PTCOMA','expresion',5,'p_declaracion_asignacion','parser.py',20),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','parser.py',24),
  ('expresion -> FLOTANTE','expresion',1,'p_expresion_decimal','parser.py',28),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_suma','parser.py',32),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_resta','parser.py',36),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_multi','parser.py',40),
  ('expresion -> INT PARIZQ expresion PARDER PTCOMA','expresion',5,'p_asignacion','parser.py',44),
  ('inicio -> expresion','inicio',1,'p_inicio','parser.py',48),
  ('inicio -> comentario_una_linea','inicio',1,'p_inicio','parser.py',49),
  ('inicio -> comentario_multi_linea','inicio',1,'p_inicio','parser.py',50),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_div','parser.py',55),
  ('comentario_multi_linea -> COMENTARIO_MULTILINEA','comentario_multi_linea',1,'p_comentario_multi_linea','parser.py',59),
  ('comentario_una_linea -> COMENTARIO_UNA_LINEA','comentario_una_linea',1,'p_comentario_una_linea','parser.py',63),
]
