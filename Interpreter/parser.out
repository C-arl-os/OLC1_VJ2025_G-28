Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CORDER
    CORIZQ
    IGUAL
    MAYORQ
    PTC
    REVAL

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> lista_expresiones
Rule 2     inicio -> expresion
Rule 3     inicio -> comentario_una_linea
Rule 4     inicio -> comentario_multi_linea
Rule 5     lista_expresiones -> expresion PTCOMA
Rule 6     lista_expresiones -> expresion
Rule 7     lista_expresiones -> lista_expresiones expresion PTCOMA
Rule 8     lista_expresiones -> lista_expresiones expresion
Rule 9     expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
Rule 10    expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
Rule 11    expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
Rule 12    expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
Rule 13    expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
Rule 14    expresion -> ENTERO
Rule 15    expresion -> DECIMAL
Rule 16    expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
Rule 17    expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
Rule 18    expresion -> TRUE
Rule 19    expresion -> FALSE
Rule 20    expresion -> CARACTER
Rule 21    expresion -> CADENA
Rule 22    expresion -> ID
Rule 23    expresion -> MENOS expresion
Rule 24    expresion -> expresion MAS expresion
Rule 25    expresion -> expresion MENOS expresion
Rule 26    expresion -> expresion POR expresion
Rule 27    expresion -> expresion DIVIDIDO expresion
Rule 28    expresion -> expresion POTENCIA expresion
Rule 29    expresion -> expresion MODULO expresion
Rule 30    expresion -> tipo ID PTCOMA
Rule 31    expresion -> ID ASIGNACION expresion PTCOMA
Rule 32    tipo -> INT
Rule 33    tipo -> FLOAT
Rule 34    tipo -> CHAR
Rule 35    tipo -> STRING
Rule 36    tipo -> BOOL
Rule 37    expresion -> PRINTLN PARIZQ expresion PARDER
Rule 38    expresion -> tipo ID ASIGNACION expresion PTCOMA
Rule 39    expresion -> expresion OR_LOGICO expresion
Rule 40    expresion -> expresion AND_LOGICO expresion
Rule 41    expresion -> NOT_LOGICO expresion
Rule 42    expresion -> expresion XOR_LOGICO expresion
Rule 43    expresion -> BREAK PTCOMA
Rule 44    expresion -> CONTINUE PTCOMA
Rule 45    expresion -> expresion GE expresion
Rule 46    expresion -> expresion LE expresion
Rule 47    expresion -> expresion LT expresion
Rule 48    expresion -> expresion GT expresion
Rule 49    expresion -> expresion EQ expresion
Rule 50    expresion -> expresion NE expresion
Rule 51    expresion -> ID INCREMENTO
Rule 52    expresion -> ID DECREMENTO
Rule 53    comentario_multi_linea -> COMENTARIO_MULTILINEA
Rule 54    comentario_una_linea -> COMENTARIO_UNA_LINEA
Rule 55    expresion -> PARIZQ expresion PARDER
Rule 56    expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
Rule 57    lista_cases_opt -> lista_cases case_default
Rule 58    lista_cases_opt -> lista_cases
Rule 59    lista_cases -> lista_cases case
Rule 60    lista_cases -> case
Rule 61    case -> CASE expresion DOSPUNTOS lista_expresiones
Rule 62    case_default -> DEFAULT DOSPUNTOS lista_expresiones

Terminals, with rules where they appear

AND_LOGICO           : 40
ASIGNACION           : 16 17 31 38
BOOL                 : 36
BREAK                : 43
CADENA               : 21
CARACTER             : 20
CASE                 : 61
CHAR                 : 34
COMENTARIO_MULTILINEA : 53
COMENTARIO_UNA_LINEA : 54
CONTINUE             : 44
CORDER               : 
CORIZQ               : 
DECIMAL              : 15
DECREMENTO           : 52
DEFAULT              : 62
DIVIDIDO             : 27
DO                   : 10
DOSPUNTOS            : 61 62
ELSE                 : 12 13
ENTERO               : 14
EQ                   : 49
FALSE                : 19
FLOAT                : 33
FOR                  : 16 17
GE                   : 45
GT                   : 48
ID                   : 16 17 22 30 31 38 51 52
IF                   : 11 12 13
IGUAL                : 
INCREMENTO           : 51
INT                  : 32
LE                   : 46
LLAVE_DER            : 9 10 11 12 12 13 16 17 56
LLAVE_IZQ            : 9 10 11 12 12 13 16 17 56
LT                   : 47
MAS                  : 24
MAYORQ               : 
MENOS                : 23 25
MODULO               : 29
NE                   : 50
NOT_LOGICO           : 41
OR_LOGICO            : 39
PARDER               : 9 10 11 12 13 16 17 37 55 56
PARIZQ               : 9 10 11 12 13 16 17 37 55 56
POR                  : 26
POTENCIA             : 28
PRINTLN              : 37
PTC                  : 
PTCOMA               : 5 7 10 16 16 17 17 30 31 38 43 44
REVAL                : 
STRING               : 35
SWITCH               : 56
TRUE                 : 18
WHILE                : 9 10
XOR_LOGICO           : 42
error                : 

Nonterminals, with rules where they appear

case                 : 59 60
case_default         : 57
comentario_multi_linea : 4
comentario_una_linea : 3
expresion            : 2 5 6 7 8 9 10 11 12 13 13 16 16 16 17 17 17 23 24 24 25 25 26 26 27 27 28 28 29 29 31 37 38 39 39 40 40 41 42 42 45 45 46 46 47 47 48 48 49 49 50 50 55 56 61
inicio               : 0
lista_cases          : 57 58 59
lista_cases_opt      : 56
lista_expresiones    : 1 7 8 9 10 11 12 12 13 16 17 61 62
tipo                 : 16 30 38

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . lista_expresiones
    (2) inicio -> . expresion
    (3) inicio -> . comentario_una_linea
    (4) inicio -> . comentario_multi_linea
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (54) comentario_una_linea -> . COMENTARIO_UNA_LINEA
    (53) comentario_multi_linea -> . COMENTARIO_MULTILINEA
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    COMENTARIO_UNA_LINEA shift and go to state 25
    COMENTARIO_MULTILINEA shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    inicio                         shift and go to state 1
    lista_expresiones              shift and go to state 2
    expresion                      shift and go to state 3
    comentario_una_linea           shift and go to state 4
    comentario_multi_linea         shift and go to state 5
    tipo                           shift and go to state 13

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> lista_expresiones .
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    $end            reduce using rule 1 (inicio -> lista_expresiones .)
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 32
    tipo                           shift and go to state 13

state 3

    (2) inicio -> expresion .
    (5) lista_expresiones -> expresion . PTCOMA
    (6) lista_expresiones -> expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

  ! reduce/reduce conflict for $end resolved using rule 2 (inicio -> expresion .)
  ! shift/reduce conflict for MENOS resolved as shift
    $end            reduce using rule 2 (inicio -> expresion .)
    PTCOMA          shift and go to state 33
    WHILE           reduce using rule 6 (lista_expresiones -> expresion .)
    DO              reduce using rule 6 (lista_expresiones -> expresion .)
    IF              reduce using rule 6 (lista_expresiones -> expresion .)
    ENTERO          reduce using rule 6 (lista_expresiones -> expresion .)
    DECIMAL         reduce using rule 6 (lista_expresiones -> expresion .)
    FOR             reduce using rule 6 (lista_expresiones -> expresion .)
    TRUE            reduce using rule 6 (lista_expresiones -> expresion .)
    FALSE           reduce using rule 6 (lista_expresiones -> expresion .)
    CARACTER        reduce using rule 6 (lista_expresiones -> expresion .)
    CADENA          reduce using rule 6 (lista_expresiones -> expresion .)
    ID              reduce using rule 6 (lista_expresiones -> expresion .)
    PRINTLN         reduce using rule 6 (lista_expresiones -> expresion .)
    NOT_LOGICO      reduce using rule 6 (lista_expresiones -> expresion .)
    BREAK           reduce using rule 6 (lista_expresiones -> expresion .)
    CONTINUE        reduce using rule 6 (lista_expresiones -> expresion .)
    PARIZQ          reduce using rule 6 (lista_expresiones -> expresion .)
    SWITCH          reduce using rule 6 (lista_expresiones -> expresion .)
    INT             reduce using rule 6 (lista_expresiones -> expresion .)
    FLOAT           reduce using rule 6 (lista_expresiones -> expresion .)
    CHAR            reduce using rule 6 (lista_expresiones -> expresion .)
    STRING          reduce using rule 6 (lista_expresiones -> expresion .)
    BOOL            reduce using rule 6 (lista_expresiones -> expresion .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48

  ! MENOS           [ reduce using rule 6 (lista_expresiones -> expresion .) ]
  ! $end            [ reduce using rule 6 (lista_expresiones -> expresion .) ]


state 4

    (3) inicio -> comentario_una_linea .

    $end            reduce using rule 3 (inicio -> comentario_una_linea .)


state 5

    (4) inicio -> comentario_multi_linea .

    $end            reduce using rule 4 (inicio -> comentario_multi_linea .)


state 6

    (9) expresion -> WHILE . PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER

    PARIZQ          shift and go to state 49


state 7

    (55) expresion -> PARIZQ . expresion PARDER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 50
    tipo                           shift and go to state 13

state 8

    (10) expresion -> DO . LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA

    LLAVE_IZQ       shift and go to state 51


state 9

    (11) expresion -> IF . PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> IF . PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> IF . PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion

    PARIZQ          shift and go to state 52


state 10

    (14) expresion -> ENTERO .

    PTCOMA          reduce using rule 14 (expresion -> ENTERO .)
    MAS             reduce using rule 14 (expresion -> ENTERO .)
    MENOS           reduce using rule 14 (expresion -> ENTERO .)
    POR             reduce using rule 14 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 14 (expresion -> ENTERO .)
    POTENCIA        reduce using rule 14 (expresion -> ENTERO .)
    MODULO          reduce using rule 14 (expresion -> ENTERO .)
    OR_LOGICO       reduce using rule 14 (expresion -> ENTERO .)
    AND_LOGICO      reduce using rule 14 (expresion -> ENTERO .)
    XOR_LOGICO      reduce using rule 14 (expresion -> ENTERO .)
    GE              reduce using rule 14 (expresion -> ENTERO .)
    LE              reduce using rule 14 (expresion -> ENTERO .)
    LT              reduce using rule 14 (expresion -> ENTERO .)
    GT              reduce using rule 14 (expresion -> ENTERO .)
    EQ              reduce using rule 14 (expresion -> ENTERO .)
    NE              reduce using rule 14 (expresion -> ENTERO .)
    $end            reduce using rule 14 (expresion -> ENTERO .)
    WHILE           reduce using rule 14 (expresion -> ENTERO .)
    DO              reduce using rule 14 (expresion -> ENTERO .)
    IF              reduce using rule 14 (expresion -> ENTERO .)
    ENTERO          reduce using rule 14 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 14 (expresion -> ENTERO .)
    FOR             reduce using rule 14 (expresion -> ENTERO .)
    TRUE            reduce using rule 14 (expresion -> ENTERO .)
    FALSE           reduce using rule 14 (expresion -> ENTERO .)
    CARACTER        reduce using rule 14 (expresion -> ENTERO .)
    CADENA          reduce using rule 14 (expresion -> ENTERO .)
    ID              reduce using rule 14 (expresion -> ENTERO .)
    PRINTLN         reduce using rule 14 (expresion -> ENTERO .)
    NOT_LOGICO      reduce using rule 14 (expresion -> ENTERO .)
    BREAK           reduce using rule 14 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 14 (expresion -> ENTERO .)
    PARIZQ          reduce using rule 14 (expresion -> ENTERO .)
    SWITCH          reduce using rule 14 (expresion -> ENTERO .)
    INT             reduce using rule 14 (expresion -> ENTERO .)
    FLOAT           reduce using rule 14 (expresion -> ENTERO .)
    CHAR            reduce using rule 14 (expresion -> ENTERO .)
    STRING          reduce using rule 14 (expresion -> ENTERO .)
    BOOL            reduce using rule 14 (expresion -> ENTERO .)
    PARDER          reduce using rule 14 (expresion -> ENTERO .)
    LLAVE_DER       reduce using rule 14 (expresion -> ENTERO .)
    DOSPUNTOS       reduce using rule 14 (expresion -> ENTERO .)
    DEFAULT         reduce using rule 14 (expresion -> ENTERO .)
    CASE            reduce using rule 14 (expresion -> ENTERO .)


state 11

    (15) expresion -> DECIMAL .

    PTCOMA          reduce using rule 15 (expresion -> DECIMAL .)
    MAS             reduce using rule 15 (expresion -> DECIMAL .)
    MENOS           reduce using rule 15 (expresion -> DECIMAL .)
    POR             reduce using rule 15 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 15 (expresion -> DECIMAL .)
    POTENCIA        reduce using rule 15 (expresion -> DECIMAL .)
    MODULO          reduce using rule 15 (expresion -> DECIMAL .)
    OR_LOGICO       reduce using rule 15 (expresion -> DECIMAL .)
    AND_LOGICO      reduce using rule 15 (expresion -> DECIMAL .)
    XOR_LOGICO      reduce using rule 15 (expresion -> DECIMAL .)
    GE              reduce using rule 15 (expresion -> DECIMAL .)
    LE              reduce using rule 15 (expresion -> DECIMAL .)
    LT              reduce using rule 15 (expresion -> DECIMAL .)
    GT              reduce using rule 15 (expresion -> DECIMAL .)
    EQ              reduce using rule 15 (expresion -> DECIMAL .)
    NE              reduce using rule 15 (expresion -> DECIMAL .)
    $end            reduce using rule 15 (expresion -> DECIMAL .)
    WHILE           reduce using rule 15 (expresion -> DECIMAL .)
    DO              reduce using rule 15 (expresion -> DECIMAL .)
    IF              reduce using rule 15 (expresion -> DECIMAL .)
    ENTERO          reduce using rule 15 (expresion -> DECIMAL .)
    DECIMAL         reduce using rule 15 (expresion -> DECIMAL .)
    FOR             reduce using rule 15 (expresion -> DECIMAL .)
    TRUE            reduce using rule 15 (expresion -> DECIMAL .)
    FALSE           reduce using rule 15 (expresion -> DECIMAL .)
    CARACTER        reduce using rule 15 (expresion -> DECIMAL .)
    CADENA          reduce using rule 15 (expresion -> DECIMAL .)
    ID              reduce using rule 15 (expresion -> DECIMAL .)
    PRINTLN         reduce using rule 15 (expresion -> DECIMAL .)
    NOT_LOGICO      reduce using rule 15 (expresion -> DECIMAL .)
    BREAK           reduce using rule 15 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 15 (expresion -> DECIMAL .)
    PARIZQ          reduce using rule 15 (expresion -> DECIMAL .)
    SWITCH          reduce using rule 15 (expresion -> DECIMAL .)
    INT             reduce using rule 15 (expresion -> DECIMAL .)
    FLOAT           reduce using rule 15 (expresion -> DECIMAL .)
    CHAR            reduce using rule 15 (expresion -> DECIMAL .)
    STRING          reduce using rule 15 (expresion -> DECIMAL .)
    BOOL            reduce using rule 15 (expresion -> DECIMAL .)
    PARDER          reduce using rule 15 (expresion -> DECIMAL .)
    LLAVE_DER       reduce using rule 15 (expresion -> DECIMAL .)
    DOSPUNTOS       reduce using rule 15 (expresion -> DECIMAL .)
    DEFAULT         reduce using rule 15 (expresion -> DECIMAL .)
    CASE            reduce using rule 15 (expresion -> DECIMAL .)


state 12

    (16) expresion -> FOR . PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> FOR . PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER

    PARIZQ          shift and go to state 53


state 13

    (30) expresion -> tipo . ID PTCOMA
    (38) expresion -> tipo . ID ASIGNACION expresion PTCOMA

    ID              shift and go to state 54


state 14

    (22) expresion -> ID .
    (31) expresion -> ID . ASIGNACION expresion PTCOMA
    (51) expresion -> ID . INCREMENTO
    (52) expresion -> ID . DECREMENTO

    PTCOMA          reduce using rule 22 (expresion -> ID .)
    MAS             reduce using rule 22 (expresion -> ID .)
    MENOS           reduce using rule 22 (expresion -> ID .)
    POR             reduce using rule 22 (expresion -> ID .)
    DIVIDIDO        reduce using rule 22 (expresion -> ID .)
    POTENCIA        reduce using rule 22 (expresion -> ID .)
    MODULO          reduce using rule 22 (expresion -> ID .)
    OR_LOGICO       reduce using rule 22 (expresion -> ID .)
    AND_LOGICO      reduce using rule 22 (expresion -> ID .)
    XOR_LOGICO      reduce using rule 22 (expresion -> ID .)
    GE              reduce using rule 22 (expresion -> ID .)
    LE              reduce using rule 22 (expresion -> ID .)
    LT              reduce using rule 22 (expresion -> ID .)
    GT              reduce using rule 22 (expresion -> ID .)
    EQ              reduce using rule 22 (expresion -> ID .)
    NE              reduce using rule 22 (expresion -> ID .)
    $end            reduce using rule 22 (expresion -> ID .)
    WHILE           reduce using rule 22 (expresion -> ID .)
    DO              reduce using rule 22 (expresion -> ID .)
    IF              reduce using rule 22 (expresion -> ID .)
    ENTERO          reduce using rule 22 (expresion -> ID .)
    DECIMAL         reduce using rule 22 (expresion -> ID .)
    FOR             reduce using rule 22 (expresion -> ID .)
    TRUE            reduce using rule 22 (expresion -> ID .)
    FALSE           reduce using rule 22 (expresion -> ID .)
    CARACTER        reduce using rule 22 (expresion -> ID .)
    CADENA          reduce using rule 22 (expresion -> ID .)
    ID              reduce using rule 22 (expresion -> ID .)
    PRINTLN         reduce using rule 22 (expresion -> ID .)
    NOT_LOGICO      reduce using rule 22 (expresion -> ID .)
    BREAK           reduce using rule 22 (expresion -> ID .)
    CONTINUE        reduce using rule 22 (expresion -> ID .)
    PARIZQ          reduce using rule 22 (expresion -> ID .)
    SWITCH          reduce using rule 22 (expresion -> ID .)
    INT             reduce using rule 22 (expresion -> ID .)
    FLOAT           reduce using rule 22 (expresion -> ID .)
    CHAR            reduce using rule 22 (expresion -> ID .)
    STRING          reduce using rule 22 (expresion -> ID .)
    BOOL            reduce using rule 22 (expresion -> ID .)
    PARDER          reduce using rule 22 (expresion -> ID .)
    LLAVE_DER       reduce using rule 22 (expresion -> ID .)
    DOSPUNTOS       reduce using rule 22 (expresion -> ID .)
    DEFAULT         reduce using rule 22 (expresion -> ID .)
    CASE            reduce using rule 22 (expresion -> ID .)
    ASIGNACION      shift and go to state 55
    INCREMENTO      shift and go to state 56
    DECREMENTO      shift and go to state 57


state 15

    (18) expresion -> TRUE .

    PTCOMA          reduce using rule 18 (expresion -> TRUE .)
    MAS             reduce using rule 18 (expresion -> TRUE .)
    MENOS           reduce using rule 18 (expresion -> TRUE .)
    POR             reduce using rule 18 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 18 (expresion -> TRUE .)
    POTENCIA        reduce using rule 18 (expresion -> TRUE .)
    MODULO          reduce using rule 18 (expresion -> TRUE .)
    OR_LOGICO       reduce using rule 18 (expresion -> TRUE .)
    AND_LOGICO      reduce using rule 18 (expresion -> TRUE .)
    XOR_LOGICO      reduce using rule 18 (expresion -> TRUE .)
    GE              reduce using rule 18 (expresion -> TRUE .)
    LE              reduce using rule 18 (expresion -> TRUE .)
    LT              reduce using rule 18 (expresion -> TRUE .)
    GT              reduce using rule 18 (expresion -> TRUE .)
    EQ              reduce using rule 18 (expresion -> TRUE .)
    NE              reduce using rule 18 (expresion -> TRUE .)
    $end            reduce using rule 18 (expresion -> TRUE .)
    WHILE           reduce using rule 18 (expresion -> TRUE .)
    DO              reduce using rule 18 (expresion -> TRUE .)
    IF              reduce using rule 18 (expresion -> TRUE .)
    ENTERO          reduce using rule 18 (expresion -> TRUE .)
    DECIMAL         reduce using rule 18 (expresion -> TRUE .)
    FOR             reduce using rule 18 (expresion -> TRUE .)
    TRUE            reduce using rule 18 (expresion -> TRUE .)
    FALSE           reduce using rule 18 (expresion -> TRUE .)
    CARACTER        reduce using rule 18 (expresion -> TRUE .)
    CADENA          reduce using rule 18 (expresion -> TRUE .)
    ID              reduce using rule 18 (expresion -> TRUE .)
    PRINTLN         reduce using rule 18 (expresion -> TRUE .)
    NOT_LOGICO      reduce using rule 18 (expresion -> TRUE .)
    BREAK           reduce using rule 18 (expresion -> TRUE .)
    CONTINUE        reduce using rule 18 (expresion -> TRUE .)
    PARIZQ          reduce using rule 18 (expresion -> TRUE .)
    SWITCH          reduce using rule 18 (expresion -> TRUE .)
    INT             reduce using rule 18 (expresion -> TRUE .)
    FLOAT           reduce using rule 18 (expresion -> TRUE .)
    CHAR            reduce using rule 18 (expresion -> TRUE .)
    STRING          reduce using rule 18 (expresion -> TRUE .)
    BOOL            reduce using rule 18 (expresion -> TRUE .)
    PARDER          reduce using rule 18 (expresion -> TRUE .)
    LLAVE_DER       reduce using rule 18 (expresion -> TRUE .)
    DOSPUNTOS       reduce using rule 18 (expresion -> TRUE .)
    DEFAULT         reduce using rule 18 (expresion -> TRUE .)
    CASE            reduce using rule 18 (expresion -> TRUE .)


state 16

    (19) expresion -> FALSE .

    PTCOMA          reduce using rule 19 (expresion -> FALSE .)
    MAS             reduce using rule 19 (expresion -> FALSE .)
    MENOS           reduce using rule 19 (expresion -> FALSE .)
    POR             reduce using rule 19 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 19 (expresion -> FALSE .)
    POTENCIA        reduce using rule 19 (expresion -> FALSE .)
    MODULO          reduce using rule 19 (expresion -> FALSE .)
    OR_LOGICO       reduce using rule 19 (expresion -> FALSE .)
    AND_LOGICO      reduce using rule 19 (expresion -> FALSE .)
    XOR_LOGICO      reduce using rule 19 (expresion -> FALSE .)
    GE              reduce using rule 19 (expresion -> FALSE .)
    LE              reduce using rule 19 (expresion -> FALSE .)
    LT              reduce using rule 19 (expresion -> FALSE .)
    GT              reduce using rule 19 (expresion -> FALSE .)
    EQ              reduce using rule 19 (expresion -> FALSE .)
    NE              reduce using rule 19 (expresion -> FALSE .)
    $end            reduce using rule 19 (expresion -> FALSE .)
    WHILE           reduce using rule 19 (expresion -> FALSE .)
    DO              reduce using rule 19 (expresion -> FALSE .)
    IF              reduce using rule 19 (expresion -> FALSE .)
    ENTERO          reduce using rule 19 (expresion -> FALSE .)
    DECIMAL         reduce using rule 19 (expresion -> FALSE .)
    FOR             reduce using rule 19 (expresion -> FALSE .)
    TRUE            reduce using rule 19 (expresion -> FALSE .)
    FALSE           reduce using rule 19 (expresion -> FALSE .)
    CARACTER        reduce using rule 19 (expresion -> FALSE .)
    CADENA          reduce using rule 19 (expresion -> FALSE .)
    ID              reduce using rule 19 (expresion -> FALSE .)
    PRINTLN         reduce using rule 19 (expresion -> FALSE .)
    NOT_LOGICO      reduce using rule 19 (expresion -> FALSE .)
    BREAK           reduce using rule 19 (expresion -> FALSE .)
    CONTINUE        reduce using rule 19 (expresion -> FALSE .)
    PARIZQ          reduce using rule 19 (expresion -> FALSE .)
    SWITCH          reduce using rule 19 (expresion -> FALSE .)
    INT             reduce using rule 19 (expresion -> FALSE .)
    FLOAT           reduce using rule 19 (expresion -> FALSE .)
    CHAR            reduce using rule 19 (expresion -> FALSE .)
    STRING          reduce using rule 19 (expresion -> FALSE .)
    BOOL            reduce using rule 19 (expresion -> FALSE .)
    PARDER          reduce using rule 19 (expresion -> FALSE .)
    LLAVE_DER       reduce using rule 19 (expresion -> FALSE .)
    DOSPUNTOS       reduce using rule 19 (expresion -> FALSE .)
    DEFAULT         reduce using rule 19 (expresion -> FALSE .)
    CASE            reduce using rule 19 (expresion -> FALSE .)


state 17

    (20) expresion -> CARACTER .

    PTCOMA          reduce using rule 20 (expresion -> CARACTER .)
    MAS             reduce using rule 20 (expresion -> CARACTER .)
    MENOS           reduce using rule 20 (expresion -> CARACTER .)
    POR             reduce using rule 20 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 20 (expresion -> CARACTER .)
    POTENCIA        reduce using rule 20 (expresion -> CARACTER .)
    MODULO          reduce using rule 20 (expresion -> CARACTER .)
    OR_LOGICO       reduce using rule 20 (expresion -> CARACTER .)
    AND_LOGICO      reduce using rule 20 (expresion -> CARACTER .)
    XOR_LOGICO      reduce using rule 20 (expresion -> CARACTER .)
    GE              reduce using rule 20 (expresion -> CARACTER .)
    LE              reduce using rule 20 (expresion -> CARACTER .)
    LT              reduce using rule 20 (expresion -> CARACTER .)
    GT              reduce using rule 20 (expresion -> CARACTER .)
    EQ              reduce using rule 20 (expresion -> CARACTER .)
    NE              reduce using rule 20 (expresion -> CARACTER .)
    $end            reduce using rule 20 (expresion -> CARACTER .)
    WHILE           reduce using rule 20 (expresion -> CARACTER .)
    DO              reduce using rule 20 (expresion -> CARACTER .)
    IF              reduce using rule 20 (expresion -> CARACTER .)
    ENTERO          reduce using rule 20 (expresion -> CARACTER .)
    DECIMAL         reduce using rule 20 (expresion -> CARACTER .)
    FOR             reduce using rule 20 (expresion -> CARACTER .)
    TRUE            reduce using rule 20 (expresion -> CARACTER .)
    FALSE           reduce using rule 20 (expresion -> CARACTER .)
    CARACTER        reduce using rule 20 (expresion -> CARACTER .)
    CADENA          reduce using rule 20 (expresion -> CARACTER .)
    ID              reduce using rule 20 (expresion -> CARACTER .)
    PRINTLN         reduce using rule 20 (expresion -> CARACTER .)
    NOT_LOGICO      reduce using rule 20 (expresion -> CARACTER .)
    BREAK           reduce using rule 20 (expresion -> CARACTER .)
    CONTINUE        reduce using rule 20 (expresion -> CARACTER .)
    PARIZQ          reduce using rule 20 (expresion -> CARACTER .)
    SWITCH          reduce using rule 20 (expresion -> CARACTER .)
    INT             reduce using rule 20 (expresion -> CARACTER .)
    FLOAT           reduce using rule 20 (expresion -> CARACTER .)
    CHAR            reduce using rule 20 (expresion -> CARACTER .)
    STRING          reduce using rule 20 (expresion -> CARACTER .)
    BOOL            reduce using rule 20 (expresion -> CARACTER .)
    PARDER          reduce using rule 20 (expresion -> CARACTER .)
    LLAVE_DER       reduce using rule 20 (expresion -> CARACTER .)
    DOSPUNTOS       reduce using rule 20 (expresion -> CARACTER .)
    DEFAULT         reduce using rule 20 (expresion -> CARACTER .)
    CASE            reduce using rule 20 (expresion -> CARACTER .)


state 18

    (21) expresion -> CADENA .

    PTCOMA          reduce using rule 21 (expresion -> CADENA .)
    MAS             reduce using rule 21 (expresion -> CADENA .)
    MENOS           reduce using rule 21 (expresion -> CADENA .)
    POR             reduce using rule 21 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 21 (expresion -> CADENA .)
    POTENCIA        reduce using rule 21 (expresion -> CADENA .)
    MODULO          reduce using rule 21 (expresion -> CADENA .)
    OR_LOGICO       reduce using rule 21 (expresion -> CADENA .)
    AND_LOGICO      reduce using rule 21 (expresion -> CADENA .)
    XOR_LOGICO      reduce using rule 21 (expresion -> CADENA .)
    GE              reduce using rule 21 (expresion -> CADENA .)
    LE              reduce using rule 21 (expresion -> CADENA .)
    LT              reduce using rule 21 (expresion -> CADENA .)
    GT              reduce using rule 21 (expresion -> CADENA .)
    EQ              reduce using rule 21 (expresion -> CADENA .)
    NE              reduce using rule 21 (expresion -> CADENA .)
    $end            reduce using rule 21 (expresion -> CADENA .)
    WHILE           reduce using rule 21 (expresion -> CADENA .)
    DO              reduce using rule 21 (expresion -> CADENA .)
    IF              reduce using rule 21 (expresion -> CADENA .)
    ENTERO          reduce using rule 21 (expresion -> CADENA .)
    DECIMAL         reduce using rule 21 (expresion -> CADENA .)
    FOR             reduce using rule 21 (expresion -> CADENA .)
    TRUE            reduce using rule 21 (expresion -> CADENA .)
    FALSE           reduce using rule 21 (expresion -> CADENA .)
    CARACTER        reduce using rule 21 (expresion -> CADENA .)
    CADENA          reduce using rule 21 (expresion -> CADENA .)
    ID              reduce using rule 21 (expresion -> CADENA .)
    PRINTLN         reduce using rule 21 (expresion -> CADENA .)
    NOT_LOGICO      reduce using rule 21 (expresion -> CADENA .)
    BREAK           reduce using rule 21 (expresion -> CADENA .)
    CONTINUE        reduce using rule 21 (expresion -> CADENA .)
    PARIZQ          reduce using rule 21 (expresion -> CADENA .)
    SWITCH          reduce using rule 21 (expresion -> CADENA .)
    INT             reduce using rule 21 (expresion -> CADENA .)
    FLOAT           reduce using rule 21 (expresion -> CADENA .)
    CHAR            reduce using rule 21 (expresion -> CADENA .)
    STRING          reduce using rule 21 (expresion -> CADENA .)
    BOOL            reduce using rule 21 (expresion -> CADENA .)
    PARDER          reduce using rule 21 (expresion -> CADENA .)
    LLAVE_DER       reduce using rule 21 (expresion -> CADENA .)
    DOSPUNTOS       reduce using rule 21 (expresion -> CADENA .)
    DEFAULT         reduce using rule 21 (expresion -> CADENA .)
    CASE            reduce using rule 21 (expresion -> CADENA .)


state 19

    (23) expresion -> MENOS . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 58
    tipo                           shift and go to state 13

state 20

    (37) expresion -> PRINTLN . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 59


state 21

    (41) expresion -> NOT_LOGICO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 60
    tipo                           shift and go to state 13

state 22

    (43) expresion -> BREAK . PTCOMA

    PTCOMA          shift and go to state 61


state 23

    (44) expresion -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 62


state 24

    (56) expresion -> SWITCH . PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER

    PARIZQ          shift and go to state 63


state 25

    (54) comentario_una_linea -> COMENTARIO_UNA_LINEA .

    $end            reduce using rule 54 (comentario_una_linea -> COMENTARIO_UNA_LINEA .)


state 26

    (53) comentario_multi_linea -> COMENTARIO_MULTILINEA .

    $end            reduce using rule 53 (comentario_multi_linea -> COMENTARIO_MULTILINEA .)


state 27

    (32) tipo -> INT .

    ID              reduce using rule 32 (tipo -> INT .)


state 28

    (33) tipo -> FLOAT .

    ID              reduce using rule 33 (tipo -> FLOAT .)


state 29

    (34) tipo -> CHAR .

    ID              reduce using rule 34 (tipo -> CHAR .)


state 30

    (35) tipo -> STRING .

    ID              reduce using rule 35 (tipo -> STRING .)


state 31

    (36) tipo -> BOOL .

    ID              reduce using rule 36 (tipo -> BOOL .)


state 32

    (7) lista_expresiones -> lista_expresiones expresion . PTCOMA
    (8) lista_expresiones -> lista_expresiones expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

  ! shift/reduce conflict for MENOS resolved as shift
    PTCOMA          shift and go to state 64
    WHILE           reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    DO              reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    IF              reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    ENTERO          reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    DECIMAL         reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    FOR             reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    TRUE            reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    FALSE           reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    CARACTER        reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    CADENA          reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    ID              reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    PRINTLN         reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    NOT_LOGICO      reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    BREAK           reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    CONTINUE        reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    PARIZQ          reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    SWITCH          reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    INT             reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    FLOAT           reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    CHAR            reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    STRING          reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    BOOL            reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    $end            reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    LLAVE_DER       reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    DEFAULT         reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    CASE            reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48

  ! MENOS           [ reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .) ]


state 33

    (5) lista_expresiones -> expresion PTCOMA .

    WHILE           reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    DO              reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    IF              reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    ENTERO          reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    DECIMAL         reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    FOR             reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    TRUE            reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    FALSE           reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    CARACTER        reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    CADENA          reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    ID              reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    MENOS           reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    PRINTLN         reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    NOT_LOGICO      reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    BREAK           reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    CONTINUE        reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    PARIZQ          reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    SWITCH          reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    INT             reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    FLOAT           reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    CHAR            reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    STRING          reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    BOOL            reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    $end            reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    LLAVE_DER       reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    DEFAULT         reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    CASE            reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)


state 34

    (24) expresion -> expresion MAS . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 65
    tipo                           shift and go to state 13

state 35

    (25) expresion -> expresion MENOS . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 66
    tipo                           shift and go to state 13

state 36

    (26) expresion -> expresion POR . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 67
    tipo                           shift and go to state 13

state 37

    (27) expresion -> expresion DIVIDIDO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 68
    tipo                           shift and go to state 13

state 38

    (28) expresion -> expresion POTENCIA . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 69
    tipo                           shift and go to state 13

state 39

    (29) expresion -> expresion MODULO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 70
    tipo                           shift and go to state 13

state 40

    (39) expresion -> expresion OR_LOGICO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 71
    tipo                           shift and go to state 13

state 41

    (40) expresion -> expresion AND_LOGICO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 72
    tipo                           shift and go to state 13

state 42

    (42) expresion -> expresion XOR_LOGICO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 73
    tipo                           shift and go to state 13

state 43

    (45) expresion -> expresion GE . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 74
    tipo                           shift and go to state 13

state 44

    (46) expresion -> expresion LE . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 75
    tipo                           shift and go to state 13

state 45

    (47) expresion -> expresion LT . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 76
    tipo                           shift and go to state 13

state 46

    (48) expresion -> expresion GT . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 77
    tipo                           shift and go to state 13

state 47

    (49) expresion -> expresion EQ . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 78
    tipo                           shift and go to state 13

state 48

    (50) expresion -> expresion NE . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 79
    tipo                           shift and go to state 13

state 49

    (9) expresion -> WHILE PARIZQ . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 80
    tipo                           shift and go to state 13

state 50

    (55) expresion -> PARIZQ expresion . PARDER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PARDER          shift and go to state 81
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48


state 51

    (10) expresion -> DO LLAVE_IZQ . lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    lista_expresiones              shift and go to state 82
    expresion                      shift and go to state 83
    tipo                           shift and go to state 13

state 52

    (11) expresion -> IF PARIZQ . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> IF PARIZQ . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> IF PARIZQ . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 84
    tipo                           shift and go to state 13

state 53

    (16) expresion -> FOR PARIZQ . tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> FOR PARIZQ . ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    ID              shift and go to state 86
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    tipo                           shift and go to state 85

state 54

    (30) expresion -> tipo ID . PTCOMA
    (38) expresion -> tipo ID . ASIGNACION expresion PTCOMA

    PTCOMA          shift and go to state 87
    ASIGNACION      shift and go to state 88


state 55

    (31) expresion -> ID ASIGNACION . expresion PTCOMA
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 89
    tipo                           shift and go to state 13

state 56

    (51) expresion -> ID INCREMENTO .

    PTCOMA          reduce using rule 51 (expresion -> ID INCREMENTO .)
    MAS             reduce using rule 51 (expresion -> ID INCREMENTO .)
    MENOS           reduce using rule 51 (expresion -> ID INCREMENTO .)
    POR             reduce using rule 51 (expresion -> ID INCREMENTO .)
    DIVIDIDO        reduce using rule 51 (expresion -> ID INCREMENTO .)
    POTENCIA        reduce using rule 51 (expresion -> ID INCREMENTO .)
    MODULO          reduce using rule 51 (expresion -> ID INCREMENTO .)
    OR_LOGICO       reduce using rule 51 (expresion -> ID INCREMENTO .)
    AND_LOGICO      reduce using rule 51 (expresion -> ID INCREMENTO .)
    XOR_LOGICO      reduce using rule 51 (expresion -> ID INCREMENTO .)
    GE              reduce using rule 51 (expresion -> ID INCREMENTO .)
    LE              reduce using rule 51 (expresion -> ID INCREMENTO .)
    LT              reduce using rule 51 (expresion -> ID INCREMENTO .)
    GT              reduce using rule 51 (expresion -> ID INCREMENTO .)
    EQ              reduce using rule 51 (expresion -> ID INCREMENTO .)
    NE              reduce using rule 51 (expresion -> ID INCREMENTO .)
    $end            reduce using rule 51 (expresion -> ID INCREMENTO .)
    WHILE           reduce using rule 51 (expresion -> ID INCREMENTO .)
    DO              reduce using rule 51 (expresion -> ID INCREMENTO .)
    IF              reduce using rule 51 (expresion -> ID INCREMENTO .)
    ENTERO          reduce using rule 51 (expresion -> ID INCREMENTO .)
    DECIMAL         reduce using rule 51 (expresion -> ID INCREMENTO .)
    FOR             reduce using rule 51 (expresion -> ID INCREMENTO .)
    TRUE            reduce using rule 51 (expresion -> ID INCREMENTO .)
    FALSE           reduce using rule 51 (expresion -> ID INCREMENTO .)
    CARACTER        reduce using rule 51 (expresion -> ID INCREMENTO .)
    CADENA          reduce using rule 51 (expresion -> ID INCREMENTO .)
    ID              reduce using rule 51 (expresion -> ID INCREMENTO .)
    PRINTLN         reduce using rule 51 (expresion -> ID INCREMENTO .)
    NOT_LOGICO      reduce using rule 51 (expresion -> ID INCREMENTO .)
    BREAK           reduce using rule 51 (expresion -> ID INCREMENTO .)
    CONTINUE        reduce using rule 51 (expresion -> ID INCREMENTO .)
    PARIZQ          reduce using rule 51 (expresion -> ID INCREMENTO .)
    SWITCH          reduce using rule 51 (expresion -> ID INCREMENTO .)
    INT             reduce using rule 51 (expresion -> ID INCREMENTO .)
    FLOAT           reduce using rule 51 (expresion -> ID INCREMENTO .)
    CHAR            reduce using rule 51 (expresion -> ID INCREMENTO .)
    STRING          reduce using rule 51 (expresion -> ID INCREMENTO .)
    BOOL            reduce using rule 51 (expresion -> ID INCREMENTO .)
    PARDER          reduce using rule 51 (expresion -> ID INCREMENTO .)
    LLAVE_DER       reduce using rule 51 (expresion -> ID INCREMENTO .)
    DOSPUNTOS       reduce using rule 51 (expresion -> ID INCREMENTO .)
    DEFAULT         reduce using rule 51 (expresion -> ID INCREMENTO .)
    CASE            reduce using rule 51 (expresion -> ID INCREMENTO .)


state 57

    (52) expresion -> ID DECREMENTO .

    PTCOMA          reduce using rule 52 (expresion -> ID DECREMENTO .)
    MAS             reduce using rule 52 (expresion -> ID DECREMENTO .)
    MENOS           reduce using rule 52 (expresion -> ID DECREMENTO .)
    POR             reduce using rule 52 (expresion -> ID DECREMENTO .)
    DIVIDIDO        reduce using rule 52 (expresion -> ID DECREMENTO .)
    POTENCIA        reduce using rule 52 (expresion -> ID DECREMENTO .)
    MODULO          reduce using rule 52 (expresion -> ID DECREMENTO .)
    OR_LOGICO       reduce using rule 52 (expresion -> ID DECREMENTO .)
    AND_LOGICO      reduce using rule 52 (expresion -> ID DECREMENTO .)
    XOR_LOGICO      reduce using rule 52 (expresion -> ID DECREMENTO .)
    GE              reduce using rule 52 (expresion -> ID DECREMENTO .)
    LE              reduce using rule 52 (expresion -> ID DECREMENTO .)
    LT              reduce using rule 52 (expresion -> ID DECREMENTO .)
    GT              reduce using rule 52 (expresion -> ID DECREMENTO .)
    EQ              reduce using rule 52 (expresion -> ID DECREMENTO .)
    NE              reduce using rule 52 (expresion -> ID DECREMENTO .)
    $end            reduce using rule 52 (expresion -> ID DECREMENTO .)
    WHILE           reduce using rule 52 (expresion -> ID DECREMENTO .)
    DO              reduce using rule 52 (expresion -> ID DECREMENTO .)
    IF              reduce using rule 52 (expresion -> ID DECREMENTO .)
    ENTERO          reduce using rule 52 (expresion -> ID DECREMENTO .)
    DECIMAL         reduce using rule 52 (expresion -> ID DECREMENTO .)
    FOR             reduce using rule 52 (expresion -> ID DECREMENTO .)
    TRUE            reduce using rule 52 (expresion -> ID DECREMENTO .)
    FALSE           reduce using rule 52 (expresion -> ID DECREMENTO .)
    CARACTER        reduce using rule 52 (expresion -> ID DECREMENTO .)
    CADENA          reduce using rule 52 (expresion -> ID DECREMENTO .)
    ID              reduce using rule 52 (expresion -> ID DECREMENTO .)
    PRINTLN         reduce using rule 52 (expresion -> ID DECREMENTO .)
    NOT_LOGICO      reduce using rule 52 (expresion -> ID DECREMENTO .)
    BREAK           reduce using rule 52 (expresion -> ID DECREMENTO .)
    CONTINUE        reduce using rule 52 (expresion -> ID DECREMENTO .)
    PARIZQ          reduce using rule 52 (expresion -> ID DECREMENTO .)
    SWITCH          reduce using rule 52 (expresion -> ID DECREMENTO .)
    INT             reduce using rule 52 (expresion -> ID DECREMENTO .)
    FLOAT           reduce using rule 52 (expresion -> ID DECREMENTO .)
    CHAR            reduce using rule 52 (expresion -> ID DECREMENTO .)
    STRING          reduce using rule 52 (expresion -> ID DECREMENTO .)
    BOOL            reduce using rule 52 (expresion -> ID DECREMENTO .)
    PARDER          reduce using rule 52 (expresion -> ID DECREMENTO .)
    LLAVE_DER       reduce using rule 52 (expresion -> ID DECREMENTO .)
    DOSPUNTOS       reduce using rule 52 (expresion -> ID DECREMENTO .)
    DEFAULT         reduce using rule 52 (expresion -> ID DECREMENTO .)
    CASE            reduce using rule 52 (expresion -> ID DECREMENTO .)


state 58

    (23) expresion -> MENOS expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 23 (expresion -> MENOS expresion .)
    MAS             reduce using rule 23 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 23 (expresion -> MENOS expresion .)
    POR             reduce using rule 23 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 23 (expresion -> MENOS expresion .)
    POTENCIA        reduce using rule 23 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 23 (expresion -> MENOS expresion .)
    OR_LOGICO       reduce using rule 23 (expresion -> MENOS expresion .)
    AND_LOGICO      reduce using rule 23 (expresion -> MENOS expresion .)
    XOR_LOGICO      reduce using rule 23 (expresion -> MENOS expresion .)
    GE              reduce using rule 23 (expresion -> MENOS expresion .)
    LE              reduce using rule 23 (expresion -> MENOS expresion .)
    LT              reduce using rule 23 (expresion -> MENOS expresion .)
    GT              reduce using rule 23 (expresion -> MENOS expresion .)
    EQ              reduce using rule 23 (expresion -> MENOS expresion .)
    NE              reduce using rule 23 (expresion -> MENOS expresion .)
    $end            reduce using rule 23 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 23 (expresion -> MENOS expresion .)
    DO              reduce using rule 23 (expresion -> MENOS expresion .)
    IF              reduce using rule 23 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 23 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 23 (expresion -> MENOS expresion .)
    FOR             reduce using rule 23 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 23 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 23 (expresion -> MENOS expresion .)
    CARACTER        reduce using rule 23 (expresion -> MENOS expresion .)
    CADENA          reduce using rule 23 (expresion -> MENOS expresion .)
    ID              reduce using rule 23 (expresion -> MENOS expresion .)
    PRINTLN         reduce using rule 23 (expresion -> MENOS expresion .)
    NOT_LOGICO      reduce using rule 23 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 23 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 23 (expresion -> MENOS expresion .)
    PARIZQ          reduce using rule 23 (expresion -> MENOS expresion .)
    SWITCH          reduce using rule 23 (expresion -> MENOS expresion .)
    INT             reduce using rule 23 (expresion -> MENOS expresion .)
    FLOAT           reduce using rule 23 (expresion -> MENOS expresion .)
    CHAR            reduce using rule 23 (expresion -> MENOS expresion .)
    STRING          reduce using rule 23 (expresion -> MENOS expresion .)
    BOOL            reduce using rule 23 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 23 (expresion -> MENOS expresion .)
    LLAVE_DER       reduce using rule 23 (expresion -> MENOS expresion .)
    DOSPUNTOS       reduce using rule 23 (expresion -> MENOS expresion .)
    DEFAULT         reduce using rule 23 (expresion -> MENOS expresion .)
    CASE            reduce using rule 23 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 34 ]
  ! MENOS           [ shift and go to state 35 ]
  ! POR             [ shift and go to state 36 ]
  ! DIVIDIDO        [ shift and go to state 37 ]
  ! POTENCIA        [ shift and go to state 38 ]
  ! MODULO          [ shift and go to state 39 ]
  ! OR_LOGICO       [ shift and go to state 40 ]
  ! AND_LOGICO      [ shift and go to state 41 ]
  ! XOR_LOGICO      [ shift and go to state 42 ]
  ! GE              [ shift and go to state 43 ]
  ! LE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NE              [ shift and go to state 48 ]


state 59

    (37) expresion -> PRINTLN PARIZQ . expresion PARDER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 90
    tipo                           shift and go to state 13

state 60

    (41) expresion -> NOT_LOGICO expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    NE              reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    $end            reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    WHILE           reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    DO              reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    IF              reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    ENTERO          reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    DECIMAL         reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    FOR             reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    TRUE            reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    FALSE           reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    CARACTER        reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    CADENA          reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    ID              reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    PRINTLN         reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    NOT_LOGICO      reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    BREAK           reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    CONTINUE        reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    PARIZQ          reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    SWITCH          reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    INT             reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    FLOAT           reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    CHAR            reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    STRING          reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    BOOL            reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    PARDER          reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    LLAVE_DER       reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    DOSPUNTOS       reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    DEFAULT         reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    CASE            reduce using rule 41 (expresion -> NOT_LOGICO expresion .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47

  ! MAS             [ reduce using rule 41 (expresion -> NOT_LOGICO expresion .) ]
  ! MENOS           [ reduce using rule 41 (expresion -> NOT_LOGICO expresion .) ]
  ! POR             [ reduce using rule 41 (expresion -> NOT_LOGICO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 41 (expresion -> NOT_LOGICO expresion .) ]
  ! POTENCIA        [ reduce using rule 41 (expresion -> NOT_LOGICO expresion .) ]
  ! MODULO          [ reduce using rule 41 (expresion -> NOT_LOGICO expresion .) ]
  ! OR_LOGICO       [ reduce using rule 41 (expresion -> NOT_LOGICO expresion .) ]
  ! AND_LOGICO      [ reduce using rule 41 (expresion -> NOT_LOGICO expresion .) ]
  ! XOR_LOGICO      [ reduce using rule 41 (expresion -> NOT_LOGICO expresion .) ]
  ! GE              [ reduce using rule 41 (expresion -> NOT_LOGICO expresion .) ]
  ! LE              [ reduce using rule 41 (expresion -> NOT_LOGICO expresion .) ]
  ! LT              [ reduce using rule 41 (expresion -> NOT_LOGICO expresion .) ]
  ! GT              [ reduce using rule 41 (expresion -> NOT_LOGICO expresion .) ]
  ! EQ              [ reduce using rule 41 (expresion -> NOT_LOGICO expresion .) ]
  ! NE              [ shift and go to state 48 ]


state 61

    (43) expresion -> BREAK PTCOMA .

    PTCOMA          reduce using rule 43 (expresion -> BREAK PTCOMA .)
    MAS             reduce using rule 43 (expresion -> BREAK PTCOMA .)
    MENOS           reduce using rule 43 (expresion -> BREAK PTCOMA .)
    POR             reduce using rule 43 (expresion -> BREAK PTCOMA .)
    DIVIDIDO        reduce using rule 43 (expresion -> BREAK PTCOMA .)
    POTENCIA        reduce using rule 43 (expresion -> BREAK PTCOMA .)
    MODULO          reduce using rule 43 (expresion -> BREAK PTCOMA .)
    OR_LOGICO       reduce using rule 43 (expresion -> BREAK PTCOMA .)
    AND_LOGICO      reduce using rule 43 (expresion -> BREAK PTCOMA .)
    XOR_LOGICO      reduce using rule 43 (expresion -> BREAK PTCOMA .)
    GE              reduce using rule 43 (expresion -> BREAK PTCOMA .)
    LE              reduce using rule 43 (expresion -> BREAK PTCOMA .)
    LT              reduce using rule 43 (expresion -> BREAK PTCOMA .)
    GT              reduce using rule 43 (expresion -> BREAK PTCOMA .)
    EQ              reduce using rule 43 (expresion -> BREAK PTCOMA .)
    NE              reduce using rule 43 (expresion -> BREAK PTCOMA .)
    $end            reduce using rule 43 (expresion -> BREAK PTCOMA .)
    WHILE           reduce using rule 43 (expresion -> BREAK PTCOMA .)
    DO              reduce using rule 43 (expresion -> BREAK PTCOMA .)
    IF              reduce using rule 43 (expresion -> BREAK PTCOMA .)
    ENTERO          reduce using rule 43 (expresion -> BREAK PTCOMA .)
    DECIMAL         reduce using rule 43 (expresion -> BREAK PTCOMA .)
    FOR             reduce using rule 43 (expresion -> BREAK PTCOMA .)
    TRUE            reduce using rule 43 (expresion -> BREAK PTCOMA .)
    FALSE           reduce using rule 43 (expresion -> BREAK PTCOMA .)
    CARACTER        reduce using rule 43 (expresion -> BREAK PTCOMA .)
    CADENA          reduce using rule 43 (expresion -> BREAK PTCOMA .)
    ID              reduce using rule 43 (expresion -> BREAK PTCOMA .)
    PRINTLN         reduce using rule 43 (expresion -> BREAK PTCOMA .)
    NOT_LOGICO      reduce using rule 43 (expresion -> BREAK PTCOMA .)
    BREAK           reduce using rule 43 (expresion -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 43 (expresion -> BREAK PTCOMA .)
    PARIZQ          reduce using rule 43 (expresion -> BREAK PTCOMA .)
    SWITCH          reduce using rule 43 (expresion -> BREAK PTCOMA .)
    INT             reduce using rule 43 (expresion -> BREAK PTCOMA .)
    FLOAT           reduce using rule 43 (expresion -> BREAK PTCOMA .)
    CHAR            reduce using rule 43 (expresion -> BREAK PTCOMA .)
    STRING          reduce using rule 43 (expresion -> BREAK PTCOMA .)
    BOOL            reduce using rule 43 (expresion -> BREAK PTCOMA .)
    PARDER          reduce using rule 43 (expresion -> BREAK PTCOMA .)
    LLAVE_DER       reduce using rule 43 (expresion -> BREAK PTCOMA .)
    DOSPUNTOS       reduce using rule 43 (expresion -> BREAK PTCOMA .)
    DEFAULT         reduce using rule 43 (expresion -> BREAK PTCOMA .)
    CASE            reduce using rule 43 (expresion -> BREAK PTCOMA .)


state 62

    (44) expresion -> CONTINUE PTCOMA .

    PTCOMA          reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    MAS             reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    MENOS           reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    POR             reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    DIVIDIDO        reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    POTENCIA        reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    MODULO          reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    OR_LOGICO       reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    AND_LOGICO      reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    XOR_LOGICO      reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    GE              reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    LE              reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    LT              reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    GT              reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    EQ              reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    NE              reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    $end            reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    DO              reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    IF              reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    ENTERO          reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    DECIMAL         reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    FOR             reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    TRUE            reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    FALSE           reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    CARACTER        reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    CADENA          reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    ID              reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    PRINTLN         reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    NOT_LOGICO      reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    PARIZQ          reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    SWITCH          reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    INT             reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    FLOAT           reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    CHAR            reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    STRING          reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    BOOL            reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    PARDER          reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    LLAVE_DER       reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    DOSPUNTOS       reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    DEFAULT         reduce using rule 44 (expresion -> CONTINUE PTCOMA .)
    CASE            reduce using rule 44 (expresion -> CONTINUE PTCOMA .)


state 63

    (56) expresion -> SWITCH PARIZQ . expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 91
    tipo                           shift and go to state 13

state 64

    (7) lista_expresiones -> lista_expresiones expresion PTCOMA .

    WHILE           reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    DO              reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    IF              reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    ENTERO          reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    DECIMAL         reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    FOR             reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    TRUE            reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    FALSE           reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    CARACTER        reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    CADENA          reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    ID              reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    MENOS           reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    PRINTLN         reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    NOT_LOGICO      reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    BREAK           reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    CONTINUE        reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    PARIZQ          reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    SWITCH          reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    INT             reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    FLOAT           reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    CHAR            reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    STRING          reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    BOOL            reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    $end            reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    LLAVE_DER       reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    DEFAULT         reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    CASE            reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)


state 65

    (24) expresion -> expresion MAS expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 24 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 24 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 24 (expresion -> expresion MAS expresion .)
    OR_LOGICO       reduce using rule 24 (expresion -> expresion MAS expresion .)
    AND_LOGICO      reduce using rule 24 (expresion -> expresion MAS expresion .)
    XOR_LOGICO      reduce using rule 24 (expresion -> expresion MAS expresion .)
    GE              reduce using rule 24 (expresion -> expresion MAS expresion .)
    LE              reduce using rule 24 (expresion -> expresion MAS expresion .)
    LT              reduce using rule 24 (expresion -> expresion MAS expresion .)
    GT              reduce using rule 24 (expresion -> expresion MAS expresion .)
    EQ              reduce using rule 24 (expresion -> expresion MAS expresion .)
    NE              reduce using rule 24 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 24 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 24 (expresion -> expresion MAS expresion .)
    DO              reduce using rule 24 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 24 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 24 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 24 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 24 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 24 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 24 (expresion -> expresion MAS expresion .)
    CARACTER        reduce using rule 24 (expresion -> expresion MAS expresion .)
    CADENA          reduce using rule 24 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 24 (expresion -> expresion MAS expresion .)
    PRINTLN         reduce using rule 24 (expresion -> expresion MAS expresion .)
    NOT_LOGICO      reduce using rule 24 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 24 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 24 (expresion -> expresion MAS expresion .)
    PARIZQ          reduce using rule 24 (expresion -> expresion MAS expresion .)
    SWITCH          reduce using rule 24 (expresion -> expresion MAS expresion .)
    INT             reduce using rule 24 (expresion -> expresion MAS expresion .)
    FLOAT           reduce using rule 24 (expresion -> expresion MAS expresion .)
    CHAR            reduce using rule 24 (expresion -> expresion MAS expresion .)
    STRING          reduce using rule 24 (expresion -> expresion MAS expresion .)
    BOOL            reduce using rule 24 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 24 (expresion -> expresion MAS expresion .)
    LLAVE_DER       reduce using rule 24 (expresion -> expresion MAS expresion .)
    DOSPUNTOS       reduce using rule 24 (expresion -> expresion MAS expresion .)
    DEFAULT         reduce using rule 24 (expresion -> expresion MAS expresion .)
    CASE            reduce using rule 24 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39

  ! POR             [ reduce using rule 24 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 24 (expresion -> expresion MAS expresion .) ]
  ! POTENCIA        [ reduce using rule 24 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 24 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 34 ]
  ! MENOS           [ shift and go to state 35 ]
  ! OR_LOGICO       [ shift and go to state 40 ]
  ! AND_LOGICO      [ shift and go to state 41 ]
  ! XOR_LOGICO      [ shift and go to state 42 ]
  ! GE              [ shift and go to state 43 ]
  ! LE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NE              [ shift and go to state 48 ]


state 66

    (25) expresion -> expresion MENOS expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 25 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 25 (expresion -> expresion MENOS expresion .)
    OR_LOGICO       reduce using rule 25 (expresion -> expresion MENOS expresion .)
    AND_LOGICO      reduce using rule 25 (expresion -> expresion MENOS expresion .)
    XOR_LOGICO      reduce using rule 25 (expresion -> expresion MENOS expresion .)
    GE              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    LE              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    LT              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    GT              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    EQ              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    NE              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 25 (expresion -> expresion MENOS expresion .)
    DO              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 25 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 25 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 25 (expresion -> expresion MENOS expresion .)
    CARACTER        reduce using rule 25 (expresion -> expresion MENOS expresion .)
    CADENA          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    PRINTLN         reduce using rule 25 (expresion -> expresion MENOS expresion .)
    NOT_LOGICO      reduce using rule 25 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 25 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 25 (expresion -> expresion MENOS expresion .)
    PARIZQ          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    SWITCH          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    INT             reduce using rule 25 (expresion -> expresion MENOS expresion .)
    FLOAT           reduce using rule 25 (expresion -> expresion MENOS expresion .)
    CHAR            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    STRING          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    BOOL            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    LLAVE_DER       reduce using rule 25 (expresion -> expresion MENOS expresion .)
    DOSPUNTOS       reduce using rule 25 (expresion -> expresion MENOS expresion .)
    DEFAULT         reduce using rule 25 (expresion -> expresion MENOS expresion .)
    CASE            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39

  ! POR             [ reduce using rule 25 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 25 (expresion -> expresion MENOS expresion .) ]
  ! POTENCIA        [ reduce using rule 25 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 25 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 34 ]
  ! MENOS           [ shift and go to state 35 ]
  ! OR_LOGICO       [ shift and go to state 40 ]
  ! AND_LOGICO      [ shift and go to state 41 ]
  ! XOR_LOGICO      [ shift and go to state 42 ]
  ! GE              [ shift and go to state 43 ]
  ! LE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NE              [ shift and go to state 48 ]


state 67

    (26) expresion -> expresion POR expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 26 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 26 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 26 (expresion -> expresion POR expresion .)
    POR             reduce using rule 26 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 26 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 26 (expresion -> expresion POR expresion .)
    OR_LOGICO       reduce using rule 26 (expresion -> expresion POR expresion .)
    AND_LOGICO      reduce using rule 26 (expresion -> expresion POR expresion .)
    XOR_LOGICO      reduce using rule 26 (expresion -> expresion POR expresion .)
    GE              reduce using rule 26 (expresion -> expresion POR expresion .)
    LE              reduce using rule 26 (expresion -> expresion POR expresion .)
    LT              reduce using rule 26 (expresion -> expresion POR expresion .)
    GT              reduce using rule 26 (expresion -> expresion POR expresion .)
    EQ              reduce using rule 26 (expresion -> expresion POR expresion .)
    NE              reduce using rule 26 (expresion -> expresion POR expresion .)
    $end            reduce using rule 26 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 26 (expresion -> expresion POR expresion .)
    DO              reduce using rule 26 (expresion -> expresion POR expresion .)
    IF              reduce using rule 26 (expresion -> expresion POR expresion .)
    ENTERO          reduce using rule 26 (expresion -> expresion POR expresion .)
    DECIMAL         reduce using rule 26 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 26 (expresion -> expresion POR expresion .)
    TRUE            reduce using rule 26 (expresion -> expresion POR expresion .)
    FALSE           reduce using rule 26 (expresion -> expresion POR expresion .)
    CARACTER        reduce using rule 26 (expresion -> expresion POR expresion .)
    CADENA          reduce using rule 26 (expresion -> expresion POR expresion .)
    ID              reduce using rule 26 (expresion -> expresion POR expresion .)
    PRINTLN         reduce using rule 26 (expresion -> expresion POR expresion .)
    NOT_LOGICO      reduce using rule 26 (expresion -> expresion POR expresion .)
    BREAK           reduce using rule 26 (expresion -> expresion POR expresion .)
    CONTINUE        reduce using rule 26 (expresion -> expresion POR expresion .)
    PARIZQ          reduce using rule 26 (expresion -> expresion POR expresion .)
    SWITCH          reduce using rule 26 (expresion -> expresion POR expresion .)
    INT             reduce using rule 26 (expresion -> expresion POR expresion .)
    FLOAT           reduce using rule 26 (expresion -> expresion POR expresion .)
    CHAR            reduce using rule 26 (expresion -> expresion POR expresion .)
    STRING          reduce using rule 26 (expresion -> expresion POR expresion .)
    BOOL            reduce using rule 26 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 26 (expresion -> expresion POR expresion .)
    LLAVE_DER       reduce using rule 26 (expresion -> expresion POR expresion .)
    DOSPUNTOS       reduce using rule 26 (expresion -> expresion POR expresion .)
    DEFAULT         reduce using rule 26 (expresion -> expresion POR expresion .)
    CASE            reduce using rule 26 (expresion -> expresion POR expresion .)
    POTENCIA        shift and go to state 38

  ! POTENCIA        [ reduce using rule 26 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 34 ]
  ! MENOS           [ shift and go to state 35 ]
  ! POR             [ shift and go to state 36 ]
  ! DIVIDIDO        [ shift and go to state 37 ]
  ! MODULO          [ shift and go to state 39 ]
  ! OR_LOGICO       [ shift and go to state 40 ]
  ! AND_LOGICO      [ shift and go to state 41 ]
  ! XOR_LOGICO      [ shift and go to state 42 ]
  ! GE              [ shift and go to state 43 ]
  ! LE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NE              [ shift and go to state 48 ]


state 68

    (27) expresion -> expresion DIVIDIDO expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    OR_LOGICO       reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    AND_LOGICO      reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    XOR_LOGICO      reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    GE              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    LE              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    LT              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    GT              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    EQ              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    NE              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    $end            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    WHILE           reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    DO              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    IF              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    ENTERO          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    DECIMAL         reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    FOR             reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    TRUE            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    FALSE           reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    CARACTER        reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    CADENA          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    ID              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    PRINTLN         reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    NOT_LOGICO      reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    BREAK           reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    CONTINUE        reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    PARIZQ          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    SWITCH          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    INT             reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    FLOAT           reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    CHAR            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    STRING          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    BOOL            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    LLAVE_DER       reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    DOSPUNTOS       reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    DEFAULT         reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    CASE            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    POTENCIA        shift and go to state 38

  ! POTENCIA        [ reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAS             [ shift and go to state 34 ]
  ! MENOS           [ shift and go to state 35 ]
  ! POR             [ shift and go to state 36 ]
  ! DIVIDIDO        [ shift and go to state 37 ]
  ! MODULO          [ shift and go to state 39 ]
  ! OR_LOGICO       [ shift and go to state 40 ]
  ! AND_LOGICO      [ shift and go to state 41 ]
  ! XOR_LOGICO      [ shift and go to state 42 ]
  ! GE              [ shift and go to state 43 ]
  ! LE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NE              [ shift and go to state 48 ]


state 69

    (28) expresion -> expresion POTENCIA expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    MAS             reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    MENOS           reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    POR             reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    DIVIDIDO        reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    MODULO          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    OR_LOGICO       reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    AND_LOGICO      reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    XOR_LOGICO      reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    GE              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    LE              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    LT              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    GT              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    EQ              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    NE              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    $end            reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    WHILE           reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    DO              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    IF              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    ENTERO          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    DECIMAL         reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    FOR             reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    TRUE            reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    FALSE           reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    CARACTER        reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    CADENA          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    ID              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    PRINTLN         reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    NOT_LOGICO      reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    BREAK           reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    CONTINUE        reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    PARIZQ          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    SWITCH          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    INT             reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    FLOAT           reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    CHAR            reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    STRING          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    BOOL            reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    PARDER          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    LLAVE_DER       reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    DOSPUNTOS       reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    DEFAULT         reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    CASE            reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    POTENCIA        shift and go to state 38

  ! POTENCIA        [ reduce using rule 28 (expresion -> expresion POTENCIA expresion .) ]
  ! MAS             [ shift and go to state 34 ]
  ! MENOS           [ shift and go to state 35 ]
  ! POR             [ shift and go to state 36 ]
  ! DIVIDIDO        [ shift and go to state 37 ]
  ! MODULO          [ shift and go to state 39 ]
  ! OR_LOGICO       [ shift and go to state 40 ]
  ! AND_LOGICO      [ shift and go to state 41 ]
  ! XOR_LOGICO      [ shift and go to state 42 ]
  ! GE              [ shift and go to state 43 ]
  ! LE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NE              [ shift and go to state 48 ]


state 70

    (29) expresion -> expresion MODULO expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 29 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 29 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 29 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 29 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 29 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 29 (expresion -> expresion MODULO expresion .)
    OR_LOGICO       reduce using rule 29 (expresion -> expresion MODULO expresion .)
    AND_LOGICO      reduce using rule 29 (expresion -> expresion MODULO expresion .)
    XOR_LOGICO      reduce using rule 29 (expresion -> expresion MODULO expresion .)
    GE              reduce using rule 29 (expresion -> expresion MODULO expresion .)
    LE              reduce using rule 29 (expresion -> expresion MODULO expresion .)
    LT              reduce using rule 29 (expresion -> expresion MODULO expresion .)
    GT              reduce using rule 29 (expresion -> expresion MODULO expresion .)
    EQ              reduce using rule 29 (expresion -> expresion MODULO expresion .)
    NE              reduce using rule 29 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 29 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 29 (expresion -> expresion MODULO expresion .)
    DO              reduce using rule 29 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 29 (expresion -> expresion MODULO expresion .)
    ENTERO          reduce using rule 29 (expresion -> expresion MODULO expresion .)
    DECIMAL         reduce using rule 29 (expresion -> expresion MODULO expresion .)
    FOR             reduce using rule 29 (expresion -> expresion MODULO expresion .)
    TRUE            reduce using rule 29 (expresion -> expresion MODULO expresion .)
    FALSE           reduce using rule 29 (expresion -> expresion MODULO expresion .)
    CARACTER        reduce using rule 29 (expresion -> expresion MODULO expresion .)
    CADENA          reduce using rule 29 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 29 (expresion -> expresion MODULO expresion .)
    PRINTLN         reduce using rule 29 (expresion -> expresion MODULO expresion .)
    NOT_LOGICO      reduce using rule 29 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 29 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 29 (expresion -> expresion MODULO expresion .)
    PARIZQ          reduce using rule 29 (expresion -> expresion MODULO expresion .)
    SWITCH          reduce using rule 29 (expresion -> expresion MODULO expresion .)
    INT             reduce using rule 29 (expresion -> expresion MODULO expresion .)
    FLOAT           reduce using rule 29 (expresion -> expresion MODULO expresion .)
    CHAR            reduce using rule 29 (expresion -> expresion MODULO expresion .)
    STRING          reduce using rule 29 (expresion -> expresion MODULO expresion .)
    BOOL            reduce using rule 29 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 29 (expresion -> expresion MODULO expresion .)
    LLAVE_DER       reduce using rule 29 (expresion -> expresion MODULO expresion .)
    DOSPUNTOS       reduce using rule 29 (expresion -> expresion MODULO expresion .)
    DEFAULT         reduce using rule 29 (expresion -> expresion MODULO expresion .)
    CASE            reduce using rule 29 (expresion -> expresion MODULO expresion .)
    POTENCIA        shift and go to state 38

  ! POTENCIA        [ reduce using rule 29 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 34 ]
  ! MENOS           [ shift and go to state 35 ]
  ! POR             [ shift and go to state 36 ]
  ! DIVIDIDO        [ shift and go to state 37 ]
  ! MODULO          [ shift and go to state 39 ]
  ! OR_LOGICO       [ shift and go to state 40 ]
  ! AND_LOGICO      [ shift and go to state 41 ]
  ! XOR_LOGICO      [ shift and go to state 42 ]
  ! GE              [ shift and go to state 43 ]
  ! LE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NE              [ shift and go to state 48 ]


state 71

    (39) expresion -> expresion OR_LOGICO expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    OR_LOGICO       reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    NE              reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    $end            reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    WHILE           reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    DO              reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    IF              reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    ENTERO          reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    DECIMAL         reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    FOR             reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    TRUE            reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    FALSE           reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    CARACTER        reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    CADENA          reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    ID              reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    PRINTLN         reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    NOT_LOGICO      reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    BREAK           reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    CONTINUE        reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    PARIZQ          reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    SWITCH          reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    INT             reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    FLOAT           reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    CHAR            reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    STRING          reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    BOOL            reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    PARDER          reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    LLAVE_DER       reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    DOSPUNTOS       reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    DEFAULT         reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    CASE            reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47

  ! MAS             [ reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .) ]
  ! MENOS           [ reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .) ]
  ! POR             [ reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .) ]
  ! POTENCIA        [ reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .) ]
  ! MODULO          [ reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .) ]
  ! AND_LOGICO      [ reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .) ]
  ! XOR_LOGICO      [ reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .) ]
  ! GE              [ reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .) ]
  ! LE              [ reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .) ]
  ! LT              [ reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .) ]
  ! GT              [ reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .) ]
  ! EQ              [ reduce using rule 39 (expresion -> expresion OR_LOGICO expresion .) ]
  ! OR_LOGICO       [ shift and go to state 40 ]
  ! NE              [ shift and go to state 48 ]


state 72

    (40) expresion -> expresion AND_LOGICO expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    OR_LOGICO       reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    AND_LOGICO      reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    NE              reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    $end            reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    WHILE           reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    DO              reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    IF              reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    ENTERO          reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    DECIMAL         reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    FOR             reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    TRUE            reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    FALSE           reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    CARACTER        reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    CADENA          reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    ID              reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    PRINTLN         reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    NOT_LOGICO      reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    BREAK           reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    CONTINUE        reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    PARIZQ          reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    SWITCH          reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    INT             reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    FLOAT           reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    CHAR            reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    STRING          reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    BOOL            reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    PARDER          reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    LLAVE_DER       reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    DOSPUNTOS       reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    DEFAULT         reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    CASE            reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47

  ! MAS             [ reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .) ]
  ! MENOS           [ reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .) ]
  ! POR             [ reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .) ]
  ! POTENCIA        [ reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .) ]
  ! MODULO          [ reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .) ]
  ! XOR_LOGICO      [ reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .) ]
  ! GE              [ reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .) ]
  ! LE              [ reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .) ]
  ! LT              [ reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .) ]
  ! GT              [ reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .) ]
  ! EQ              [ reduce using rule 40 (expresion -> expresion AND_LOGICO expresion .) ]
  ! OR_LOGICO       [ shift and go to state 40 ]
  ! AND_LOGICO      [ shift and go to state 41 ]
  ! NE              [ shift and go to state 48 ]


state 73

    (42) expresion -> expresion XOR_LOGICO expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    OR_LOGICO       reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    AND_LOGICO      reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    XOR_LOGICO      reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    NE              reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    $end            reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    WHILE           reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    DO              reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    IF              reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    ENTERO          reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    DECIMAL         reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    FOR             reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    TRUE            reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    FALSE           reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    CARACTER        reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    CADENA          reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    ID              reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    PRINTLN         reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    NOT_LOGICO      reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    BREAK           reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    CONTINUE        reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    PARIZQ          reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    SWITCH          reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    INT             reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    FLOAT           reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    CHAR            reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    STRING          reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    BOOL            reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    PARDER          reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    LLAVE_DER       reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    DOSPUNTOS       reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    DEFAULT         reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    CASE            reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47

  ! MAS             [ reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! MENOS           [ reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! POR             [ reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! POTENCIA        [ reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! MODULO          [ reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! GE              [ reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! LE              [ reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! LT              [ reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! GT              [ reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! EQ              [ reduce using rule 42 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! OR_LOGICO       [ shift and go to state 40 ]
  ! AND_LOGICO      [ shift and go to state 41 ]
  ! XOR_LOGICO      [ shift and go to state 42 ]
  ! NE              [ shift and go to state 48 ]


state 74

    (45) expresion -> expresion GE expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 45 (expresion -> expresion GE expresion .)
    OR_LOGICO       reduce using rule 45 (expresion -> expresion GE expresion .)
    AND_LOGICO      reduce using rule 45 (expresion -> expresion GE expresion .)
    XOR_LOGICO      reduce using rule 45 (expresion -> expresion GE expresion .)
    GE              reduce using rule 45 (expresion -> expresion GE expresion .)
    LE              reduce using rule 45 (expresion -> expresion GE expresion .)
    LT              reduce using rule 45 (expresion -> expresion GE expresion .)
    GT              reduce using rule 45 (expresion -> expresion GE expresion .)
    EQ              reduce using rule 45 (expresion -> expresion GE expresion .)
    NE              reduce using rule 45 (expresion -> expresion GE expresion .)
    $end            reduce using rule 45 (expresion -> expresion GE expresion .)
    WHILE           reduce using rule 45 (expresion -> expresion GE expresion .)
    DO              reduce using rule 45 (expresion -> expresion GE expresion .)
    IF              reduce using rule 45 (expresion -> expresion GE expresion .)
    ENTERO          reduce using rule 45 (expresion -> expresion GE expresion .)
    DECIMAL         reduce using rule 45 (expresion -> expresion GE expresion .)
    FOR             reduce using rule 45 (expresion -> expresion GE expresion .)
    TRUE            reduce using rule 45 (expresion -> expresion GE expresion .)
    FALSE           reduce using rule 45 (expresion -> expresion GE expresion .)
    CARACTER        reduce using rule 45 (expresion -> expresion GE expresion .)
    CADENA          reduce using rule 45 (expresion -> expresion GE expresion .)
    ID              reduce using rule 45 (expresion -> expresion GE expresion .)
    PRINTLN         reduce using rule 45 (expresion -> expresion GE expresion .)
    NOT_LOGICO      reduce using rule 45 (expresion -> expresion GE expresion .)
    BREAK           reduce using rule 45 (expresion -> expresion GE expresion .)
    CONTINUE        reduce using rule 45 (expresion -> expresion GE expresion .)
    PARIZQ          reduce using rule 45 (expresion -> expresion GE expresion .)
    SWITCH          reduce using rule 45 (expresion -> expresion GE expresion .)
    INT             reduce using rule 45 (expresion -> expresion GE expresion .)
    FLOAT           reduce using rule 45 (expresion -> expresion GE expresion .)
    CHAR            reduce using rule 45 (expresion -> expresion GE expresion .)
    STRING          reduce using rule 45 (expresion -> expresion GE expresion .)
    BOOL            reduce using rule 45 (expresion -> expresion GE expresion .)
    PARDER          reduce using rule 45 (expresion -> expresion GE expresion .)
    LLAVE_DER       reduce using rule 45 (expresion -> expresion GE expresion .)
    DOSPUNTOS       reduce using rule 45 (expresion -> expresion GE expresion .)
    DEFAULT         reduce using rule 45 (expresion -> expresion GE expresion .)
    CASE            reduce using rule 45 (expresion -> expresion GE expresion .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39

  ! MAS             [ reduce using rule 45 (expresion -> expresion GE expresion .) ]
  ! MENOS           [ reduce using rule 45 (expresion -> expresion GE expresion .) ]
  ! POR             [ reduce using rule 45 (expresion -> expresion GE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 45 (expresion -> expresion GE expresion .) ]
  ! POTENCIA        [ reduce using rule 45 (expresion -> expresion GE expresion .) ]
  ! MODULO          [ reduce using rule 45 (expresion -> expresion GE expresion .) ]
  ! OR_LOGICO       [ shift and go to state 40 ]
  ! AND_LOGICO      [ shift and go to state 41 ]
  ! XOR_LOGICO      [ shift and go to state 42 ]
  ! GE              [ shift and go to state 43 ]
  ! LE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NE              [ shift and go to state 48 ]


state 75

    (46) expresion -> expresion LE expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 46 (expresion -> expresion LE expresion .)
    OR_LOGICO       reduce using rule 46 (expresion -> expresion LE expresion .)
    AND_LOGICO      reduce using rule 46 (expresion -> expresion LE expresion .)
    XOR_LOGICO      reduce using rule 46 (expresion -> expresion LE expresion .)
    GE              reduce using rule 46 (expresion -> expresion LE expresion .)
    LE              reduce using rule 46 (expresion -> expresion LE expresion .)
    LT              reduce using rule 46 (expresion -> expresion LE expresion .)
    GT              reduce using rule 46 (expresion -> expresion LE expresion .)
    EQ              reduce using rule 46 (expresion -> expresion LE expresion .)
    NE              reduce using rule 46 (expresion -> expresion LE expresion .)
    $end            reduce using rule 46 (expresion -> expresion LE expresion .)
    WHILE           reduce using rule 46 (expresion -> expresion LE expresion .)
    DO              reduce using rule 46 (expresion -> expresion LE expresion .)
    IF              reduce using rule 46 (expresion -> expresion LE expresion .)
    ENTERO          reduce using rule 46 (expresion -> expresion LE expresion .)
    DECIMAL         reduce using rule 46 (expresion -> expresion LE expresion .)
    FOR             reduce using rule 46 (expresion -> expresion LE expresion .)
    TRUE            reduce using rule 46 (expresion -> expresion LE expresion .)
    FALSE           reduce using rule 46 (expresion -> expresion LE expresion .)
    CARACTER        reduce using rule 46 (expresion -> expresion LE expresion .)
    CADENA          reduce using rule 46 (expresion -> expresion LE expresion .)
    ID              reduce using rule 46 (expresion -> expresion LE expresion .)
    PRINTLN         reduce using rule 46 (expresion -> expresion LE expresion .)
    NOT_LOGICO      reduce using rule 46 (expresion -> expresion LE expresion .)
    BREAK           reduce using rule 46 (expresion -> expresion LE expresion .)
    CONTINUE        reduce using rule 46 (expresion -> expresion LE expresion .)
    PARIZQ          reduce using rule 46 (expresion -> expresion LE expresion .)
    SWITCH          reduce using rule 46 (expresion -> expresion LE expresion .)
    INT             reduce using rule 46 (expresion -> expresion LE expresion .)
    FLOAT           reduce using rule 46 (expresion -> expresion LE expresion .)
    CHAR            reduce using rule 46 (expresion -> expresion LE expresion .)
    STRING          reduce using rule 46 (expresion -> expresion LE expresion .)
    BOOL            reduce using rule 46 (expresion -> expresion LE expresion .)
    PARDER          reduce using rule 46 (expresion -> expresion LE expresion .)
    LLAVE_DER       reduce using rule 46 (expresion -> expresion LE expresion .)
    DOSPUNTOS       reduce using rule 46 (expresion -> expresion LE expresion .)
    DEFAULT         reduce using rule 46 (expresion -> expresion LE expresion .)
    CASE            reduce using rule 46 (expresion -> expresion LE expresion .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39

  ! MAS             [ reduce using rule 46 (expresion -> expresion LE expresion .) ]
  ! MENOS           [ reduce using rule 46 (expresion -> expresion LE expresion .) ]
  ! POR             [ reduce using rule 46 (expresion -> expresion LE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 46 (expresion -> expresion LE expresion .) ]
  ! POTENCIA        [ reduce using rule 46 (expresion -> expresion LE expresion .) ]
  ! MODULO          [ reduce using rule 46 (expresion -> expresion LE expresion .) ]
  ! OR_LOGICO       [ shift and go to state 40 ]
  ! AND_LOGICO      [ shift and go to state 41 ]
  ! XOR_LOGICO      [ shift and go to state 42 ]
  ! GE              [ shift and go to state 43 ]
  ! LE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NE              [ shift and go to state 48 ]


state 76

    (47) expresion -> expresion LT expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 47 (expresion -> expresion LT expresion .)
    OR_LOGICO       reduce using rule 47 (expresion -> expresion LT expresion .)
    AND_LOGICO      reduce using rule 47 (expresion -> expresion LT expresion .)
    XOR_LOGICO      reduce using rule 47 (expresion -> expresion LT expresion .)
    GE              reduce using rule 47 (expresion -> expresion LT expresion .)
    LE              reduce using rule 47 (expresion -> expresion LT expresion .)
    LT              reduce using rule 47 (expresion -> expresion LT expresion .)
    GT              reduce using rule 47 (expresion -> expresion LT expresion .)
    EQ              reduce using rule 47 (expresion -> expresion LT expresion .)
    NE              reduce using rule 47 (expresion -> expresion LT expresion .)
    $end            reduce using rule 47 (expresion -> expresion LT expresion .)
    WHILE           reduce using rule 47 (expresion -> expresion LT expresion .)
    DO              reduce using rule 47 (expresion -> expresion LT expresion .)
    IF              reduce using rule 47 (expresion -> expresion LT expresion .)
    ENTERO          reduce using rule 47 (expresion -> expresion LT expresion .)
    DECIMAL         reduce using rule 47 (expresion -> expresion LT expresion .)
    FOR             reduce using rule 47 (expresion -> expresion LT expresion .)
    TRUE            reduce using rule 47 (expresion -> expresion LT expresion .)
    FALSE           reduce using rule 47 (expresion -> expresion LT expresion .)
    CARACTER        reduce using rule 47 (expresion -> expresion LT expresion .)
    CADENA          reduce using rule 47 (expresion -> expresion LT expresion .)
    ID              reduce using rule 47 (expresion -> expresion LT expresion .)
    PRINTLN         reduce using rule 47 (expresion -> expresion LT expresion .)
    NOT_LOGICO      reduce using rule 47 (expresion -> expresion LT expresion .)
    BREAK           reduce using rule 47 (expresion -> expresion LT expresion .)
    CONTINUE        reduce using rule 47 (expresion -> expresion LT expresion .)
    PARIZQ          reduce using rule 47 (expresion -> expresion LT expresion .)
    SWITCH          reduce using rule 47 (expresion -> expresion LT expresion .)
    INT             reduce using rule 47 (expresion -> expresion LT expresion .)
    FLOAT           reduce using rule 47 (expresion -> expresion LT expresion .)
    CHAR            reduce using rule 47 (expresion -> expresion LT expresion .)
    STRING          reduce using rule 47 (expresion -> expresion LT expresion .)
    BOOL            reduce using rule 47 (expresion -> expresion LT expresion .)
    PARDER          reduce using rule 47 (expresion -> expresion LT expresion .)
    LLAVE_DER       reduce using rule 47 (expresion -> expresion LT expresion .)
    DOSPUNTOS       reduce using rule 47 (expresion -> expresion LT expresion .)
    DEFAULT         reduce using rule 47 (expresion -> expresion LT expresion .)
    CASE            reduce using rule 47 (expresion -> expresion LT expresion .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39

  ! MAS             [ reduce using rule 47 (expresion -> expresion LT expresion .) ]
  ! MENOS           [ reduce using rule 47 (expresion -> expresion LT expresion .) ]
  ! POR             [ reduce using rule 47 (expresion -> expresion LT expresion .) ]
  ! DIVIDIDO        [ reduce using rule 47 (expresion -> expresion LT expresion .) ]
  ! POTENCIA        [ reduce using rule 47 (expresion -> expresion LT expresion .) ]
  ! MODULO          [ reduce using rule 47 (expresion -> expresion LT expresion .) ]
  ! OR_LOGICO       [ shift and go to state 40 ]
  ! AND_LOGICO      [ shift and go to state 41 ]
  ! XOR_LOGICO      [ shift and go to state 42 ]
  ! GE              [ shift and go to state 43 ]
  ! LE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NE              [ shift and go to state 48 ]


state 77

    (48) expresion -> expresion GT expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 48 (expresion -> expresion GT expresion .)
    OR_LOGICO       reduce using rule 48 (expresion -> expresion GT expresion .)
    AND_LOGICO      reduce using rule 48 (expresion -> expresion GT expresion .)
    XOR_LOGICO      reduce using rule 48 (expresion -> expresion GT expresion .)
    GE              reduce using rule 48 (expresion -> expresion GT expresion .)
    LE              reduce using rule 48 (expresion -> expresion GT expresion .)
    LT              reduce using rule 48 (expresion -> expresion GT expresion .)
    GT              reduce using rule 48 (expresion -> expresion GT expresion .)
    EQ              reduce using rule 48 (expresion -> expresion GT expresion .)
    NE              reduce using rule 48 (expresion -> expresion GT expresion .)
    $end            reduce using rule 48 (expresion -> expresion GT expresion .)
    WHILE           reduce using rule 48 (expresion -> expresion GT expresion .)
    DO              reduce using rule 48 (expresion -> expresion GT expresion .)
    IF              reduce using rule 48 (expresion -> expresion GT expresion .)
    ENTERO          reduce using rule 48 (expresion -> expresion GT expresion .)
    DECIMAL         reduce using rule 48 (expresion -> expresion GT expresion .)
    FOR             reduce using rule 48 (expresion -> expresion GT expresion .)
    TRUE            reduce using rule 48 (expresion -> expresion GT expresion .)
    FALSE           reduce using rule 48 (expresion -> expresion GT expresion .)
    CARACTER        reduce using rule 48 (expresion -> expresion GT expresion .)
    CADENA          reduce using rule 48 (expresion -> expresion GT expresion .)
    ID              reduce using rule 48 (expresion -> expresion GT expresion .)
    PRINTLN         reduce using rule 48 (expresion -> expresion GT expresion .)
    NOT_LOGICO      reduce using rule 48 (expresion -> expresion GT expresion .)
    BREAK           reduce using rule 48 (expresion -> expresion GT expresion .)
    CONTINUE        reduce using rule 48 (expresion -> expresion GT expresion .)
    PARIZQ          reduce using rule 48 (expresion -> expresion GT expresion .)
    SWITCH          reduce using rule 48 (expresion -> expresion GT expresion .)
    INT             reduce using rule 48 (expresion -> expresion GT expresion .)
    FLOAT           reduce using rule 48 (expresion -> expresion GT expresion .)
    CHAR            reduce using rule 48 (expresion -> expresion GT expresion .)
    STRING          reduce using rule 48 (expresion -> expresion GT expresion .)
    BOOL            reduce using rule 48 (expresion -> expresion GT expresion .)
    PARDER          reduce using rule 48 (expresion -> expresion GT expresion .)
    LLAVE_DER       reduce using rule 48 (expresion -> expresion GT expresion .)
    DOSPUNTOS       reduce using rule 48 (expresion -> expresion GT expresion .)
    DEFAULT         reduce using rule 48 (expresion -> expresion GT expresion .)
    CASE            reduce using rule 48 (expresion -> expresion GT expresion .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39

  ! MAS             [ reduce using rule 48 (expresion -> expresion GT expresion .) ]
  ! MENOS           [ reduce using rule 48 (expresion -> expresion GT expresion .) ]
  ! POR             [ reduce using rule 48 (expresion -> expresion GT expresion .) ]
  ! DIVIDIDO        [ reduce using rule 48 (expresion -> expresion GT expresion .) ]
  ! POTENCIA        [ reduce using rule 48 (expresion -> expresion GT expresion .) ]
  ! MODULO          [ reduce using rule 48 (expresion -> expresion GT expresion .) ]
  ! OR_LOGICO       [ shift and go to state 40 ]
  ! AND_LOGICO      [ shift and go to state 41 ]
  ! XOR_LOGICO      [ shift and go to state 42 ]
  ! GE              [ shift and go to state 43 ]
  ! LE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NE              [ shift and go to state 48 ]


state 78

    (49) expresion -> expresion EQ expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 49 (expresion -> expresion EQ expresion .)
    OR_LOGICO       reduce using rule 49 (expresion -> expresion EQ expresion .)
    AND_LOGICO      reduce using rule 49 (expresion -> expresion EQ expresion .)
    XOR_LOGICO      reduce using rule 49 (expresion -> expresion EQ expresion .)
    GE              reduce using rule 49 (expresion -> expresion EQ expresion .)
    LE              reduce using rule 49 (expresion -> expresion EQ expresion .)
    LT              reduce using rule 49 (expresion -> expresion EQ expresion .)
    GT              reduce using rule 49 (expresion -> expresion EQ expresion .)
    EQ              reduce using rule 49 (expresion -> expresion EQ expresion .)
    NE              reduce using rule 49 (expresion -> expresion EQ expresion .)
    $end            reduce using rule 49 (expresion -> expresion EQ expresion .)
    WHILE           reduce using rule 49 (expresion -> expresion EQ expresion .)
    DO              reduce using rule 49 (expresion -> expresion EQ expresion .)
    IF              reduce using rule 49 (expresion -> expresion EQ expresion .)
    ENTERO          reduce using rule 49 (expresion -> expresion EQ expresion .)
    DECIMAL         reduce using rule 49 (expresion -> expresion EQ expresion .)
    FOR             reduce using rule 49 (expresion -> expresion EQ expresion .)
    TRUE            reduce using rule 49 (expresion -> expresion EQ expresion .)
    FALSE           reduce using rule 49 (expresion -> expresion EQ expresion .)
    CARACTER        reduce using rule 49 (expresion -> expresion EQ expresion .)
    CADENA          reduce using rule 49 (expresion -> expresion EQ expresion .)
    ID              reduce using rule 49 (expresion -> expresion EQ expresion .)
    PRINTLN         reduce using rule 49 (expresion -> expresion EQ expresion .)
    NOT_LOGICO      reduce using rule 49 (expresion -> expresion EQ expresion .)
    BREAK           reduce using rule 49 (expresion -> expresion EQ expresion .)
    CONTINUE        reduce using rule 49 (expresion -> expresion EQ expresion .)
    PARIZQ          reduce using rule 49 (expresion -> expresion EQ expresion .)
    SWITCH          reduce using rule 49 (expresion -> expresion EQ expresion .)
    INT             reduce using rule 49 (expresion -> expresion EQ expresion .)
    FLOAT           reduce using rule 49 (expresion -> expresion EQ expresion .)
    CHAR            reduce using rule 49 (expresion -> expresion EQ expresion .)
    STRING          reduce using rule 49 (expresion -> expresion EQ expresion .)
    BOOL            reduce using rule 49 (expresion -> expresion EQ expresion .)
    PARDER          reduce using rule 49 (expresion -> expresion EQ expresion .)
    LLAVE_DER       reduce using rule 49 (expresion -> expresion EQ expresion .)
    DOSPUNTOS       reduce using rule 49 (expresion -> expresion EQ expresion .)
    DEFAULT         reduce using rule 49 (expresion -> expresion EQ expresion .)
    CASE            reduce using rule 49 (expresion -> expresion EQ expresion .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39

  ! MAS             [ reduce using rule 49 (expresion -> expresion EQ expresion .) ]
  ! MENOS           [ reduce using rule 49 (expresion -> expresion EQ expresion .) ]
  ! POR             [ reduce using rule 49 (expresion -> expresion EQ expresion .) ]
  ! DIVIDIDO        [ reduce using rule 49 (expresion -> expresion EQ expresion .) ]
  ! POTENCIA        [ reduce using rule 49 (expresion -> expresion EQ expresion .) ]
  ! MODULO          [ reduce using rule 49 (expresion -> expresion EQ expresion .) ]
  ! OR_LOGICO       [ shift and go to state 40 ]
  ! AND_LOGICO      [ shift and go to state 41 ]
  ! XOR_LOGICO      [ shift and go to state 42 ]
  ! GE              [ shift and go to state 43 ]
  ! LE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NE              [ shift and go to state 48 ]


state 79

    (50) expresion -> expresion NE expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for OR_LOGICO resolved as shift
  ! shift/reduce conflict for AND_LOGICO resolved as shift
  ! shift/reduce conflict for XOR_LOGICO resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    PTCOMA          reduce using rule 50 (expresion -> expresion NE expresion .)
    $end            reduce using rule 50 (expresion -> expresion NE expresion .)
    WHILE           reduce using rule 50 (expresion -> expresion NE expresion .)
    DO              reduce using rule 50 (expresion -> expresion NE expresion .)
    IF              reduce using rule 50 (expresion -> expresion NE expresion .)
    ENTERO          reduce using rule 50 (expresion -> expresion NE expresion .)
    DECIMAL         reduce using rule 50 (expresion -> expresion NE expresion .)
    FOR             reduce using rule 50 (expresion -> expresion NE expresion .)
    TRUE            reduce using rule 50 (expresion -> expresion NE expresion .)
    FALSE           reduce using rule 50 (expresion -> expresion NE expresion .)
    CARACTER        reduce using rule 50 (expresion -> expresion NE expresion .)
    CADENA          reduce using rule 50 (expresion -> expresion NE expresion .)
    ID              reduce using rule 50 (expresion -> expresion NE expresion .)
    PRINTLN         reduce using rule 50 (expresion -> expresion NE expresion .)
    NOT_LOGICO      reduce using rule 50 (expresion -> expresion NE expresion .)
    BREAK           reduce using rule 50 (expresion -> expresion NE expresion .)
    CONTINUE        reduce using rule 50 (expresion -> expresion NE expresion .)
    PARIZQ          reduce using rule 50 (expresion -> expresion NE expresion .)
    SWITCH          reduce using rule 50 (expresion -> expresion NE expresion .)
    INT             reduce using rule 50 (expresion -> expresion NE expresion .)
    FLOAT           reduce using rule 50 (expresion -> expresion NE expresion .)
    CHAR            reduce using rule 50 (expresion -> expresion NE expresion .)
    STRING          reduce using rule 50 (expresion -> expresion NE expresion .)
    BOOL            reduce using rule 50 (expresion -> expresion NE expresion .)
    PARDER          reduce using rule 50 (expresion -> expresion NE expresion .)
    LLAVE_DER       reduce using rule 50 (expresion -> expresion NE expresion .)
    DOSPUNTOS       reduce using rule 50 (expresion -> expresion NE expresion .)
    DEFAULT         reduce using rule 50 (expresion -> expresion NE expresion .)
    CASE            reduce using rule 50 (expresion -> expresion NE expresion .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48

  ! MAS             [ reduce using rule 50 (expresion -> expresion NE expresion .) ]
  ! MENOS           [ reduce using rule 50 (expresion -> expresion NE expresion .) ]
  ! POR             [ reduce using rule 50 (expresion -> expresion NE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 50 (expresion -> expresion NE expresion .) ]
  ! POTENCIA        [ reduce using rule 50 (expresion -> expresion NE expresion .) ]
  ! MODULO          [ reduce using rule 50 (expresion -> expresion NE expresion .) ]
  ! OR_LOGICO       [ reduce using rule 50 (expresion -> expresion NE expresion .) ]
  ! AND_LOGICO      [ reduce using rule 50 (expresion -> expresion NE expresion .) ]
  ! XOR_LOGICO      [ reduce using rule 50 (expresion -> expresion NE expresion .) ]
  ! GE              [ reduce using rule 50 (expresion -> expresion NE expresion .) ]
  ! LE              [ reduce using rule 50 (expresion -> expresion NE expresion .) ]
  ! LT              [ reduce using rule 50 (expresion -> expresion NE expresion .) ]
  ! GT              [ reduce using rule 50 (expresion -> expresion NE expresion .) ]
  ! EQ              [ reduce using rule 50 (expresion -> expresion NE expresion .) ]
  ! NE              [ reduce using rule 50 (expresion -> expresion NE expresion .) ]


state 80

    (9) expresion -> WHILE PARIZQ expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PARDER          shift and go to state 92
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48


state 81

    (55) expresion -> PARIZQ expresion PARDER .

    PTCOMA          reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    OR_LOGICO       reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    AND_LOGICO      reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    XOR_LOGICO      reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    GE              reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    LE              reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    LT              reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    GT              reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    EQ              reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    NE              reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    $end            reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    WHILE           reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    DO              reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    IF              reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    FOR             reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    TRUE            reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    FALSE           reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    CADENA          reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    ID              reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    NOT_LOGICO      reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    BREAK           reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    SWITCH          reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    INT             reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    CHAR            reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    STRING          reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    BOOL            reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    LLAVE_DER       reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    DEFAULT         reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)
    CASE            reduce using rule 55 (expresion -> PARIZQ expresion PARDER .)


state 82

    (10) expresion -> DO LLAVE_IZQ lista_expresiones . LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    LLAVE_DER       shift and go to state 93
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 32
    tipo                           shift and go to state 13

state 83

    (5) lista_expresiones -> expresion . PTCOMA
    (6) lista_expresiones -> expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

  ! shift/reduce conflict for MENOS resolved as shift
    PTCOMA          shift and go to state 33
    LLAVE_DER       reduce using rule 6 (lista_expresiones -> expresion .)
    WHILE           reduce using rule 6 (lista_expresiones -> expresion .)
    DO              reduce using rule 6 (lista_expresiones -> expresion .)
    IF              reduce using rule 6 (lista_expresiones -> expresion .)
    ENTERO          reduce using rule 6 (lista_expresiones -> expresion .)
    DECIMAL         reduce using rule 6 (lista_expresiones -> expresion .)
    FOR             reduce using rule 6 (lista_expresiones -> expresion .)
    TRUE            reduce using rule 6 (lista_expresiones -> expresion .)
    FALSE           reduce using rule 6 (lista_expresiones -> expresion .)
    CARACTER        reduce using rule 6 (lista_expresiones -> expresion .)
    CADENA          reduce using rule 6 (lista_expresiones -> expresion .)
    ID              reduce using rule 6 (lista_expresiones -> expresion .)
    PRINTLN         reduce using rule 6 (lista_expresiones -> expresion .)
    NOT_LOGICO      reduce using rule 6 (lista_expresiones -> expresion .)
    BREAK           reduce using rule 6 (lista_expresiones -> expresion .)
    CONTINUE        reduce using rule 6 (lista_expresiones -> expresion .)
    PARIZQ          reduce using rule 6 (lista_expresiones -> expresion .)
    SWITCH          reduce using rule 6 (lista_expresiones -> expresion .)
    INT             reduce using rule 6 (lista_expresiones -> expresion .)
    FLOAT           reduce using rule 6 (lista_expresiones -> expresion .)
    CHAR            reduce using rule 6 (lista_expresiones -> expresion .)
    STRING          reduce using rule 6 (lista_expresiones -> expresion .)
    BOOL            reduce using rule 6 (lista_expresiones -> expresion .)
    DEFAULT         reduce using rule 6 (lista_expresiones -> expresion .)
    CASE            reduce using rule 6 (lista_expresiones -> expresion .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48

  ! MENOS           [ reduce using rule 6 (lista_expresiones -> expresion .) ]


state 84

    (11) expresion -> IF PARIZQ expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> IF PARIZQ expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> IF PARIZQ expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PARDER          shift and go to state 94
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48


state 85

    (16) expresion -> FOR PARIZQ tipo . ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER

    ID              shift and go to state 95


state 86

    (17) expresion -> FOR PARIZQ ID . ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER

    ASIGNACION      shift and go to state 96


state 87

    (30) expresion -> tipo ID PTCOMA .

    PTCOMA          reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    MAS             reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    MENOS           reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    POR             reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    DIVIDIDO        reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    POTENCIA        reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    MODULO          reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    OR_LOGICO       reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    AND_LOGICO      reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    XOR_LOGICO      reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    GE              reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    LE              reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    LT              reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    GT              reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    EQ              reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    NE              reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    $end            reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    WHILE           reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    DO              reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    IF              reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    ENTERO          reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    DECIMAL         reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    FOR             reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    TRUE            reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    FALSE           reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    CARACTER        reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    CADENA          reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    ID              reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    PRINTLN         reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    NOT_LOGICO      reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    BREAK           reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    CONTINUE        reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    PARIZQ          reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    SWITCH          reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    INT             reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    FLOAT           reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    CHAR            reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    STRING          reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    BOOL            reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    PARDER          reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    LLAVE_DER       reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    DOSPUNTOS       reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    DEFAULT         reduce using rule 30 (expresion -> tipo ID PTCOMA .)
    CASE            reduce using rule 30 (expresion -> tipo ID PTCOMA .)


state 88

    (38) expresion -> tipo ID ASIGNACION . expresion PTCOMA
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    tipo                           shift and go to state 13
    expresion                      shift and go to state 97

state 89

    (31) expresion -> ID ASIGNACION expresion . PTCOMA
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 98
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48


state 90

    (37) expresion -> PRINTLN PARIZQ expresion . PARDER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PARDER          shift and go to state 99
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48


state 91

    (56) expresion -> SWITCH PARIZQ expresion . PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PARDER          shift and go to state 100
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48


state 92

    (9) expresion -> WHILE PARIZQ expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER

    LLAVE_IZQ       shift and go to state 101


state 93

    (10) expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER . WHILE PARIZQ expresion PARDER PTCOMA

    WHILE           shift and go to state 102


state 94

    (11) expresion -> IF PARIZQ expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> IF PARIZQ expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> IF PARIZQ expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion

    LLAVE_IZQ       shift and go to state 103


state 95

    (16) expresion -> FOR PARIZQ tipo ID . ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER

    ASIGNACION      shift and go to state 104


state 96

    (17) expresion -> FOR PARIZQ ID ASIGNACION . expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 105
    tipo                           shift and go to state 13

state 97

    (38) expresion -> tipo ID ASIGNACION expresion . PTCOMA
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 106
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48


state 98

    (31) expresion -> ID ASIGNACION expresion PTCOMA .

    PTCOMA          reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    MAS             reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    MENOS           reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    POR             reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    DIVIDIDO        reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    POTENCIA        reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    MODULO          reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    OR_LOGICO       reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    AND_LOGICO      reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    XOR_LOGICO      reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    GE              reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    LE              reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    LT              reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    GT              reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    EQ              reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    NE              reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    $end            reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    WHILE           reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    DO              reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    IF              reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    ENTERO          reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    DECIMAL         reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    FOR             reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    TRUE            reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    FALSE           reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    CARACTER        reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    CADENA          reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    ID              reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    PRINTLN         reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    NOT_LOGICO      reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    BREAK           reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    CONTINUE        reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    PARIZQ          reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    SWITCH          reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    INT             reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    FLOAT           reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    CHAR            reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    STRING          reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    BOOL            reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    PARDER          reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    LLAVE_DER       reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    DOSPUNTOS       reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    DEFAULT         reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)
    CASE            reduce using rule 31 (expresion -> ID ASIGNACION expresion PTCOMA .)


state 99

    (37) expresion -> PRINTLN PARIZQ expresion PARDER .

    PTCOMA          reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    MAS             reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    MENOS           reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    POR             reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    MODULO          reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    OR_LOGICO       reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    AND_LOGICO      reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    XOR_LOGICO      reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    GE              reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    LE              reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    LT              reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    GT              reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    EQ              reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    NE              reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    $end            reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    WHILE           reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    DO              reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    IF              reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    FOR             reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    TRUE            reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    FALSE           reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    CADENA          reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    ID              reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    NOT_LOGICO      reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    BREAK           reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    SWITCH          reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    INT             reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    CHAR            reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    STRING          reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    BOOL            reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    PARDER          reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    LLAVE_DER       reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    DEFAULT         reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    CASE            reduce using rule 37 (expresion -> PRINTLN PARIZQ expresion PARDER .)


state 100

    (56) expresion -> SWITCH PARIZQ expresion PARDER . LLAVE_IZQ lista_cases_opt LLAVE_DER

    LLAVE_IZQ       shift and go to state 107


state 101

    (9) expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 83
    lista_expresiones              shift and go to state 108
    tipo                           shift and go to state 13

state 102

    (10) expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 109


state 103

    (11) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER
    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER ELSE expresion
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 83
    lista_expresiones              shift and go to state 110
    tipo                           shift and go to state 13

state 104

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION . expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    tipo                           shift and go to state 13
    expresion                      shift and go to state 111

state 105

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion . PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 112
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48


state 106

    (38) expresion -> tipo ID ASIGNACION expresion PTCOMA .

    PTCOMA          reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    MAS             reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    MENOS           reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    POR             reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    DIVIDIDO        reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    POTENCIA        reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    MODULO          reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    OR_LOGICO       reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    AND_LOGICO      reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    XOR_LOGICO      reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    GE              reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    LE              reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    LT              reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    GT              reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    EQ              reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    NE              reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    $end            reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    WHILE           reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    DO              reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    IF              reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    ENTERO          reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    DECIMAL         reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    FOR             reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    TRUE            reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    FALSE           reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    CARACTER        reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    CADENA          reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    ID              reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    PRINTLN         reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    NOT_LOGICO      reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    BREAK           reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    CONTINUE        reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    PARIZQ          reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    SWITCH          reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    INT             reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    FLOAT           reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    CHAR            reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    STRING          reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    BOOL            reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    PARDER          reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    LLAVE_DER       reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    DOSPUNTOS       reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    DEFAULT         reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    CASE            reduce using rule 38 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)


state 107

    (56) expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ . lista_cases_opt LLAVE_DER
    (57) lista_cases_opt -> . lista_cases case_default
    (58) lista_cases_opt -> . lista_cases
    (59) lista_cases -> . lista_cases case
    (60) lista_cases -> . case
    (61) case -> . CASE expresion DOSPUNTOS lista_expresiones

    CASE            shift and go to state 116

    lista_cases_opt                shift and go to state 113
    lista_cases                    shift and go to state 114
    case                           shift and go to state 115

state 108

    (9) expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    LLAVE_DER       shift and go to state 117
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 32
    tipo                           shift and go to state 13

state 109

    (10) expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ . expresion PARDER PTCOMA
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 118
    tipo                           shift and go to state 13

state 110

    (11) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER
    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER ELSE expresion
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    LLAVE_DER       shift and go to state 119
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 32
    tipo                           shift and go to state 13

state 111

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion . PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 120
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48


state 112

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA . expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 121
    tipo                           shift and go to state 13

state 113

    (56) expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt . LLAVE_DER

    LLAVE_DER       shift and go to state 122


state 114

    (57) lista_cases_opt -> lista_cases . case_default
    (58) lista_cases_opt -> lista_cases .
    (59) lista_cases -> lista_cases . case
    (62) case_default -> . DEFAULT DOSPUNTOS lista_expresiones
    (61) case -> . CASE expresion DOSPUNTOS lista_expresiones

    LLAVE_DER       reduce using rule 58 (lista_cases_opt -> lista_cases .)
    DEFAULT         shift and go to state 125
    CASE            shift and go to state 116

    case_default                   shift and go to state 123
    case                           shift and go to state 124

state 115

    (60) lista_cases -> case .

    DEFAULT         reduce using rule 60 (lista_cases -> case .)
    CASE            reduce using rule 60 (lista_cases -> case .)
    LLAVE_DER       reduce using rule 60 (lista_cases -> case .)


state 116

    (61) case -> CASE . expresion DOSPUNTOS lista_expresiones
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 126
    tipo                           shift and go to state 13

state 117

    (9) expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .

    PTCOMA          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MAS             reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MENOS           reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POR             reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DIVIDIDO        reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POTENCIA        reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MODULO          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    OR_LOGICO       reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    AND_LOGICO      reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    XOR_LOGICO      reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GE              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LE              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LT              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GT              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EQ              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NE              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    $end            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    WHILE           reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DO              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    IF              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ENTERO          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DECIMAL         reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FOR             reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    TRUE            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FALSE           reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CARACTER        reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CADENA          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ID              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PRINTLN         reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NOT_LOGICO      reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BREAK           reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CONTINUE        reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARIZQ          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SWITCH          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INT             reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FLOAT           reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CHAR            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    STRING          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BOOL            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARDER          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LLAVE_DER       reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DOSPUNTOS       reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DEFAULT         reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CASE            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)


state 118

    (10) expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion . PARDER PTCOMA
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PARDER          shift and go to state 127
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48


state 119

    (11) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .
    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER . ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER . ELSE expresion

    PTCOMA          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MAS             reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MENOS           reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POR             reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DIVIDIDO        reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POTENCIA        reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MODULO          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    OR_LOGICO       reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    AND_LOGICO      reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    XOR_LOGICO      reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GE              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LE              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LT              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GT              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EQ              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NE              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    $end            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    WHILE           reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DO              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    IF              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ENTERO          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DECIMAL         reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FOR             reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    TRUE            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FALSE           reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CARACTER        reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CADENA          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ID              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PRINTLN         reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NOT_LOGICO      reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BREAK           reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CONTINUE        reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARIZQ          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SWITCH          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INT             reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FLOAT           reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CHAR            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    STRING          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BOOL            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARDER          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LLAVE_DER       reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DOSPUNTOS       reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DEFAULT         reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CASE            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ELSE            shift and go to state 128


state 120

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA . expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    tipo                           shift and go to state 13
    expresion                      shift and go to state 129

state 121

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion . PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 130
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48


state 122

    (56) expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .

    PTCOMA          reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    MAS             reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    MENOS           reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    POR             reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    DIVIDIDO        reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    POTENCIA        reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    MODULO          reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    OR_LOGICO       reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    AND_LOGICO      reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    XOR_LOGICO      reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    GE              reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    LE              reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    LT              reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    GT              reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    EQ              reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    NE              reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    $end            reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    WHILE           reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    DO              reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    IF              reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    ENTERO          reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    DECIMAL         reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    FOR             reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    TRUE            reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    FALSE           reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    CARACTER        reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    CADENA          reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    ID              reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    PRINTLN         reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    NOT_LOGICO      reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    BREAK           reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    CONTINUE        reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    PARIZQ          reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    SWITCH          reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    INT             reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    FLOAT           reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    CHAR            reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    STRING          reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    BOOL            reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    PARDER          reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    LLAVE_DER       reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    DOSPUNTOS       reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    DEFAULT         reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    CASE            reduce using rule 56 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)


state 123

    (57) lista_cases_opt -> lista_cases case_default .

    LLAVE_DER       reduce using rule 57 (lista_cases_opt -> lista_cases case_default .)


state 124

    (59) lista_cases -> lista_cases case .

    DEFAULT         reduce using rule 59 (lista_cases -> lista_cases case .)
    CASE            reduce using rule 59 (lista_cases -> lista_cases case .)
    LLAVE_DER       reduce using rule 59 (lista_cases -> lista_cases case .)


state 125

    (62) case_default -> DEFAULT . DOSPUNTOS lista_expresiones

    DOSPUNTOS       shift and go to state 131


state 126

    (61) case -> CASE expresion . DOSPUNTOS lista_expresiones
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    DOSPUNTOS       shift and go to state 132
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48


state 127

    (10) expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 133


state 128

    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE . LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    LLAVE_IZQ       shift and go to state 135
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 134
    tipo                           shift and go to state 13

state 129

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion . PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 136
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48


state 130

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 137
    tipo                           shift and go to state 13

state 131

    (62) case_default -> DEFAULT DOSPUNTOS . lista_expresiones
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    lista_expresiones              shift and go to state 138
    expresion                      shift and go to state 83
    tipo                           shift and go to state 13

state 132

    (61) case -> CASE expresion DOSPUNTOS . lista_expresiones
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 83
    lista_expresiones              shift and go to state 139
    tipo                           shift and go to state 13

state 133

    (10) expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .

    PTCOMA          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    MAS             reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    MENOS           reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    POR             reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    DIVIDIDO        reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    POTENCIA        reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    MODULO          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    OR_LOGICO       reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    AND_LOGICO      reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    XOR_LOGICO      reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    GE              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    LE              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    LT              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    GT              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    EQ              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    NE              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    DO              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    ENTERO          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    DECIMAL         reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    TRUE            reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    FALSE           reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    CARACTER        reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    CADENA          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    NOT_LOGICO      reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    PARIZQ          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    SWITCH          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    INT             reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    FLOAT           reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    CHAR            reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    STRING          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    BOOL            reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    PARDER          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    LLAVE_DER       reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    DOSPUNTOS       reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    DEFAULT         reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    CASE            reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)


state 134

    (13) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for OR_LOGICO resolved as shift
  ! shift/reduce conflict for AND_LOGICO resolved as shift
  ! shift/reduce conflict for XOR_LOGICO resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    PTCOMA          reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    $end            reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    WHILE           reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    DO              reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    IF              reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    ENTERO          reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    DECIMAL         reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    FOR             reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    TRUE            reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    FALSE           reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    CARACTER        reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    CADENA          reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    ID              reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    PRINTLN         reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    NOT_LOGICO      reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    BREAK           reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    CONTINUE        reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    PARIZQ          reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    SWITCH          reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    INT             reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    FLOAT           reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    CHAR            reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    STRING          reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    BOOL            reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    PARDER          reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    LLAVE_DER       reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    DOSPUNTOS       reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    DEFAULT         reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    CASE            reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48

  ! MAS             [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! MENOS           [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! POR             [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! POTENCIA        [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! MODULO          [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! OR_LOGICO       [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! AND_LOGICO      [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! XOR_LOGICO      [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! GE              [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! LE              [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! LT              [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! GT              [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! EQ              [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! NE              [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]


state 135

    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ . lista_expresiones LLAVE_DER
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 83
    lista_expresiones              shift and go to state 140
    tipo                           shift and go to state 13

state 136

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    tipo                           shift and go to state 13
    expresion                      shift and go to state 141

state 137

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PARDER          shift and go to state 142
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48


state 138

    (62) case_default -> DEFAULT DOSPUNTOS lista_expresiones .
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    LLAVE_DER       reduce using rule 62 (case_default -> DEFAULT DOSPUNTOS lista_expresiones .)
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 32
    tipo                           shift and go to state 13

state 139

    (61) case -> CASE expresion DOSPUNTOS lista_expresiones .
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    DEFAULT         reduce using rule 61 (case -> CASE expresion DOSPUNTOS lista_expresiones .)
    CASE            reduce using rule 61 (case -> CASE expresion DOSPUNTOS lista_expresiones .)
    LLAVE_DER       reduce using rule 61 (case -> CASE expresion DOSPUNTOS lista_expresiones .)
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 32
    tipo                           shift and go to state 13

state 140

    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones . LLAVE_DER
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    LLAVE_DER       shift and go to state 143
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 32
    tipo                           shift and go to state 13

state 141

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (29) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . OR_LOGICO expresion
    (40) expresion -> expresion . AND_LOGICO expresion
    (42) expresion -> expresion . XOR_LOGICO expresion
    (45) expresion -> expresion . GE expresion
    (46) expresion -> expresion . LE expresion
    (47) expresion -> expresion . LT expresion
    (48) expresion -> expresion . GT expresion
    (49) expresion -> expresion . EQ expresion
    (50) expresion -> expresion . NE expresion

    PARDER          shift and go to state 144
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    POR             shift and go to state 36
    DIVIDIDO        shift and go to state 37
    POTENCIA        shift and go to state 38
    MODULO          shift and go to state 39
    OR_LOGICO       shift and go to state 40
    AND_LOGICO      shift and go to state 41
    XOR_LOGICO      shift and go to state 42
    GE              shift and go to state 43
    LE              shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    EQ              shift and go to state 47
    NE              shift and go to state 48


state 142

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER

    LLAVE_IZQ       shift and go to state 145


state 143

    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .

    PTCOMA          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MAS             reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MENOS           reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POR             reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DIVIDIDO        reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POTENCIA        reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MODULO          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    OR_LOGICO       reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    AND_LOGICO      reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    XOR_LOGICO      reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GE              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LE              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LT              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GT              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EQ              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NE              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    $end            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    WHILE           reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DO              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    IF              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ENTERO          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DECIMAL         reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FOR             reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    TRUE            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FALSE           reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CARACTER        reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CADENA          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ID              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PRINTLN         reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NOT_LOGICO      reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BREAK           reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CONTINUE        reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARIZQ          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SWITCH          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INT             reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FLOAT           reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CHAR            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    STRING          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BOOL            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARDER          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LLAVE_DER       reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DOSPUNTOS       reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DEFAULT         reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CASE            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)


state 144

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER

    LLAVE_IZQ       shift and go to state 146


state 145

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 83
    lista_expresiones              shift and go to state 147
    tipo                           shift and go to state 13

state 146

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    tipo                           shift and go to state 13
    expresion                      shift and go to state 83
    lista_expresiones              shift and go to state 148

state 147

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    LLAVE_DER       shift and go to state 149
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    expresion                      shift and go to state 32
    tipo                           shift and go to state 13

state 148

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . expresion MODULO expresion
    (30) expresion -> . tipo ID PTCOMA
    (31) expresion -> . ID ASIGNACION expresion PTCOMA
    (37) expresion -> . PRINTLN PARIZQ expresion PARDER
    (38) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (39) expresion -> . expresion OR_LOGICO expresion
    (40) expresion -> . expresion AND_LOGICO expresion
    (41) expresion -> . NOT_LOGICO expresion
    (42) expresion -> . expresion XOR_LOGICO expresion
    (43) expresion -> . BREAK PTCOMA
    (44) expresion -> . CONTINUE PTCOMA
    (45) expresion -> . expresion GE expresion
    (46) expresion -> . expresion LE expresion
    (47) expresion -> . expresion LT expresion
    (48) expresion -> . expresion GT expresion
    (49) expresion -> . expresion EQ expresion
    (50) expresion -> . expresion NE expresion
    (51) expresion -> . ID INCREMENTO
    (52) expresion -> . ID DECREMENTO
    (55) expresion -> . PARIZQ expresion PARDER
    (56) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (32) tipo -> . INT
    (33) tipo -> . FLOAT
    (34) tipo -> . CHAR
    (35) tipo -> . STRING
    (36) tipo -> . BOOL

    LLAVE_DER       shift and go to state 150
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    PRINTLN         shift and go to state 20
    NOT_LOGICO      shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31

    tipo                           shift and go to state 13
    expresion                      shift and go to state 32

state 149

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .

    PTCOMA          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MAS             reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MENOS           reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POR             reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DIVIDIDO        reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POTENCIA        reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MODULO          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    OR_LOGICO       reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    AND_LOGICO      reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    XOR_LOGICO      reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GE              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LE              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LT              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GT              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EQ              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NE              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    $end            reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    WHILE           reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DO              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    IF              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ENTERO          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DECIMAL         reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FOR             reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    TRUE            reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FALSE           reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CARACTER        reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CADENA          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ID              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PRINTLN         reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NOT_LOGICO      reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BREAK           reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CONTINUE        reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARIZQ          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SWITCH          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INT             reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FLOAT           reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CHAR            reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    STRING          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BOOL            reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARDER          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LLAVE_DER       reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DOSPUNTOS       reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DEFAULT         reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CASE            reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)


state 150

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .

    PTCOMA          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MAS             reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MENOS           reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POR             reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DIVIDIDO        reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POTENCIA        reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MODULO          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    OR_LOGICO       reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    AND_LOGICO      reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    XOR_LOGICO      reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GE              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LE              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LT              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GT              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EQ              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NE              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    $end            reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    WHILE           reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DO              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    IF              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ENTERO          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DECIMAL         reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FOR             reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    TRUE            reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FALSE           reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CARACTER        reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CADENA          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ID              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PRINTLN         reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NOT_LOGICO      reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BREAK           reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CONTINUE        reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARIZQ          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SWITCH          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INT             reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FLOAT           reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CHAR            reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    STRING          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BOOL            reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARDER          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LLAVE_DER       reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DOSPUNTOS       reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DEFAULT         reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CASE            reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MENOS in state 3 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 32 resolved as shift
WARNING: shift/reduce conflict for MAS in state 79 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 79 resolved as shift
WARNING: shift/reduce conflict for POR in state 79 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 79 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 79 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 79 resolved as shift
WARNING: shift/reduce conflict for OR_LOGICO in state 79 resolved as shift
WARNING: shift/reduce conflict for AND_LOGICO in state 79 resolved as shift
WARNING: shift/reduce conflict for XOR_LOGICO in state 79 resolved as shift
WARNING: shift/reduce conflict for GE in state 79 resolved as shift
WARNING: shift/reduce conflict for LE in state 79 resolved as shift
WARNING: shift/reduce conflict for LT in state 79 resolved as shift
WARNING: shift/reduce conflict for GT in state 79 resolved as shift
WARNING: shift/reduce conflict for EQ in state 79 resolved as shift
WARNING: shift/reduce conflict for NE in state 79 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 83 resolved as shift
WARNING: shift/reduce conflict for MAS in state 134 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 134 resolved as shift
WARNING: shift/reduce conflict for POR in state 134 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 134 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 134 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 134 resolved as shift
WARNING: shift/reduce conflict for OR_LOGICO in state 134 resolved as shift
WARNING: shift/reduce conflict for AND_LOGICO in state 134 resolved as shift
WARNING: shift/reduce conflict for XOR_LOGICO in state 134 resolved as shift
WARNING: shift/reduce conflict for GE in state 134 resolved as shift
WARNING: shift/reduce conflict for LE in state 134 resolved as shift
WARNING: shift/reduce conflict for LT in state 134 resolved as shift
WARNING: shift/reduce conflict for GT in state 134 resolved as shift
WARNING: shift/reduce conflict for EQ in state 134 resolved as shift
WARNING: shift/reduce conflict for NE in state 134 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (inicio -> expresion)
WARNING: rejected rule (lista_expresiones -> expresion) in state 3
