Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIO_MALFORMADO
    IGUAL
    MAYORQ
    PTC
    REVAL

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> lista_expresiones
Rule 2     inicio -> expresion
Rule 3     inicio -> comentario_una_linea
Rule 4     inicio -> comentario_multi_linea
Rule 5     lista_expresiones -> expresion PTCOMA
Rule 6     lista_expresiones -> expresion
Rule 7     lista_expresiones -> lista_expresiones expresion PTCOMA
Rule 8     lista_expresiones -> lista_expresiones expresion
Rule 9     expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
Rule 10    expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
Rule 11    expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
Rule 12    expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
Rule 13    expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
Rule 14    expresion -> ENTERO
Rule 15    expresion -> DECIMAL
Rule 16    expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
Rule 17    expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
Rule 18    expresion -> TRUE
Rule 19    expresion -> FALSE
Rule 20    expresion -> CARACTER
Rule 21    expresion -> CADENA
Rule 22    expresion -> ID
Rule 23    expresion -> MENOS expresion
Rule 24    expresion -> expresion MAS expresion
Rule 25    expresion -> expresion MENOS expresion
Rule 26    expresion -> expresion POR expresion
Rule 27    expresion -> expresion DIVIDIDO expresion
Rule 28    expresion -> expresion POTENCIA expresion
Rule 29    expresion -> SENO PARIZQ expresion PARDER
Rule 30    expresion -> COSENO PARIZQ expresion PARDER
Rule 31    expresion -> INV PARIZQ expresion PARDER
Rule 32    expresion -> expresion MODULO expresion
Rule 33    expresion -> tipo ID PTCOMA
Rule 34    expresion -> ID ASIGNACION expresion PTCOMA
Rule 35    tipo -> INT
Rule 36    tipo -> FLOAT
Rule 37    tipo -> CHAR
Rule 38    tipo -> STRING
Rule 39    tipo -> BOOL
Rule 40    expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA
Rule 41    expresion -> PRINTLN PARIZQ expresion PARDER
Rule 42    expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA
Rule 43    expresion -> PRINTLN PARIZQ oraciones PARDER
Rule 44    oraciones -> oraciones ID
Rule 45    oraciones -> ID
Rule 46    expresion -> tipo ID ASIGNACION expresion PTCOMA
Rule 47    expresion -> expresion OR_LOGICO expresion
Rule 48    expresion -> expresion AND_LOGICO expresion
Rule 49    expresion -> NOT_LOGICO expresion
Rule 50    expresion -> expresion XOR_LOGICO expresion
Rule 51    expresion -> BREAK PTCOMA
Rule 52    expresion -> CONTINUE PTCOMA
Rule 53    expresion -> expresion GE expresion
Rule 54    expresion -> expresion LE expresion
Rule 55    expresion -> expresion LT expresion
Rule 56    expresion -> expresion GT expresion
Rule 57    expresion -> expresion EQ expresion
Rule 58    expresion -> expresion NE expresion
Rule 59    expresion -> ID INCREMENTO
Rule 60    expresion -> ID DECREMENTO
Rule 61    comentario_multi_linea -> COMENTARIO_MULTILINEA
Rule 62    comentario_una_linea -> COMENTARIO_UNA_LINEA
Rule 63    expresion -> PARIZQ expresion PARDER
Rule 64    expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
Rule 65    lista_cases_opt -> lista_cases case_default
Rule 66    lista_cases_opt -> lista_cases
Rule 67    lista_cases -> lista_cases case
Rule 68    lista_cases -> case
Rule 69    case -> CASE expresion DOSPUNTOS lista_expresiones
Rule 70    case_default -> DEFAULT DOSPUNTOS lista_expresiones
Rule 71    expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
Rule 72    expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
Rule 73    expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
Rule 74    expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
Rule 75    expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
Rule 76    expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
Rule 77    expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
Rule 78    lista_expresiones -> <empty>
Rule 79    expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
Rule 80    expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
Rule 81    expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
Rule 82    expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
Rule 83    expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
Rule 84    lista_dimensiones -> lista_dimensiones COMA ENTERO
Rule 85    lista_dimensiones -> ENTERO
Rule 86    lista_valores -> lista_valores COMA fila_vector
Rule 87    lista_valores -> lista_valores COMA CORIZQ lista_elementos CORDER
Rule 88    lista_valores -> fila_vector
Rule 89    lista_valores -> CORIZQ lista_elementos CORDER
Rule 90    fila_vector -> CORIZQ lista_elementos CORDER
Rule 91    lista_elementos -> lista_elementos COMA expresion
Rule 92    lista_elementos -> expresion
Rule 93    expresion -> ID lista_indices
Rule 94    expresion -> ID lista_indices ASIGNACION expresion PTCOMA
Rule 95    lista_indices -> lista_indices CORIZQ expresion CORDER
Rule 96    lista_indices -> CORIZQ expresion CORDER
Rule 97    lista_indices -> <empty>
Rule 98    expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
Rule 99    lista_parametros_opt -> lista_parametros
Rule 100   lista_parametros_opt -> <empty>
Rule 101   lista_parametros -> lista_parametros COMA tipo DOSPUNTOS ID
Rule 102   lista_parametros -> tipo DOSPUNTOS ID
Rule 103   expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
Rule 104   lista_argumentos_exec_opt -> lista_argumentos_exec
Rule 105   lista_argumentos_exec_opt -> <empty>
Rule 106   lista_argumentos_exec -> lista_argumentos_exec COMA argumento_exec
Rule 107   lista_argumentos_exec -> argumento_exec
Rule 108   argumento_exec -> ID
Rule 109   argumento_exec -> ENTERO
Rule 110   argumento_exec -> DECIMAL
Rule 111   argumento_exec -> CARACTER
Rule 112   argumento_exec -> CADENA
Rule 113   argumento_exec -> TRUE
Rule 114   argumento_exec -> FALSE
Rule 115   lista_argumentos -> lista_argumentos COMA expresion
Rule 116   lista_argumentos -> expresion

Terminals, with rules where they appear

AND_LOGICO           : 48
ASIGNACION           : 16 17 34 46 73 74 80 81 82 83 94
BOOL                 : 39
BREAK                : 51
CADENA               : 21 112
CARACTER             : 20 111
CASE                 : 69
CHAR                 : 37
COMA                 : 84 86 87 91 101 106 115
COMENTARIO_MALFORMADO : 
COMENTARIO_MULTILINEA : 61
COMENTARIO_UNA_LINEA : 62
CONTINUE             : 52
CORDER               : 79 80 81 81 82 83 87 89 90 95 96
CORIZQ               : 79 80 81 81 82 83 87 89 90 95 96
COSENO               : 30
DECIMAL              : 15 110
DECREMENTO           : 60
DEFAULT              : 70
DIVIDIDO             : 27
DO                   : 10 75
DOSPUNTOS            : 69 70 101 102
ELSE                 : 12 13 76 77
ENTERO               : 14 81 82 84 85 109
EQ                   : 57
EXEC                 : 103
FALSE                : 19 114
FLOAT                : 36
FOR                  : 16 17 73 74
GE                   : 53
GT                   : 56
ID                   : 16 17 22 33 34 44 45 46 59 60 73 74 79 80 80 81 82 82 83 93 94 98 101 102 103 108
IF                   : 11 12 13 71 76 77
IGUAL                : 
INCREMENTO           : 59
INT                  : 35
INV                  : 31
LE                   : 54
LLAVE_DER            : 9 10 11 12 12 13 16 17 64 71 72 73 74 75 76 76 77 77 98
LLAVE_IZQ            : 9 10 11 12 12 13 16 17 64 71 72 73 74 75 76 76 77 77 98
LT                   : 55
MAS                  : 24
MAYORQ               : 
MENOS                : 23 25
MODULO               : 32
NE                   : 58
NOT_LOGICO           : 49
OR_LOGICO            : 47
PARDER               : 9 10 11 12 13 16 17 29 30 31 40 41 42 43 63 64 71 72 73 74 75 76 77 79 80 80 81 82 82 83 98 103
PARIZQ               : 9 10 11 12 13 16 17 29 30 31 40 41 42 43 63 64 71 72 73 74 75 76 77 79 80 80 81 82 82 83 98 103
POR                  : 26
POTENCIA             : 28
PRINTLN              : 40 41 42 43
PROC                 : 98
PTC                  : 
PTCOMA               : 5 7 10 16 16 17 17 33 34 40 42 46 51 52 73 73 74 74 75 79 80 81 82 83 94 103
REVAL                : 
SENO                 : 29
SHUFFLE              : 80
SORT                 : 82
STRING               : 38
SWITCH               : 64
TRUE                 : 18 113
VECTOR               : 79 80 81 82 83
WHILE                : 9 10 72 75
XOR_LOGICO           : 50
error                : 

Nonterminals, with rules where they appear

argumento_exec       : 106 107
case                 : 67 68
case_default         : 65
comentario_multi_linea : 4
comentario_una_linea : 3
expresion            : 2 5 6 7 8 9 10 11 12 13 13 16 16 16 17 17 17 23 24 24 25 25 26 26 27 27 28 28 29 30 31 32 32 34 40 41 46 47 47 48 48 49 50 50 53 53 54 54 55 55 56 56 57 57 58 58 63 64 69 71 72 73 73 73 74 74 74 75 76 77 91 92 94 95 96 115 116
fila_vector          : 86 88
inicio               : 0
lista_argumentos     : 115
lista_argumentos_exec : 104 106
lista_argumentos_exec_opt : 103
lista_cases          : 65 66 67
lista_cases_opt      : 64
lista_dimensiones    : 79 80 83 84
lista_elementos      : 81 87 89 90 91
lista_expresiones    : 1 7 8 9 10 11 12 12 13 16 17 69 70 76 77 98
lista_indices        : 93 94 95
lista_parametros     : 99 101
lista_parametros_opt : 98
lista_valores        : 83 86 87
oraciones            : 42 43 44
tipo                 : 16 33 46 73 79 80 81 82 83 101 102

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . lista_expresiones
    (2) inicio -> . expresion
    (3) inicio -> . comentario_una_linea
    (4) inicio -> . comentario_multi_linea
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (78) lista_expresiones -> .
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (62) comentario_una_linea -> . COMENTARIO_UNA_LINEA
    (61) comentario_multi_linea -> . COMENTARIO_MULTILINEA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for SENO resolved as shift
  ! shift/reduce conflict for COSENO resolved as shift
  ! shift/reduce conflict for INV resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for NOT_LOGICO resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for VECTOR resolved as shift
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for EXEC resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 78 (lista_expresiones -> .)
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    COMENTARIO_UNA_LINEA shift and go to state 31
    COMENTARIO_MULTILINEA shift and go to state 32
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

  ! WHILE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DO              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! IF              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ENTERO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DECIMAL         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FOR             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! TRUE            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FALSE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CARACTER        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CADENA          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ID              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! MENOS           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SENO            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! COSENO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INV             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! NOT_LOGICO      [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BREAK           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PARIZQ          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SWITCH          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! VECTOR          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PROC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! EXEC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INT             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FLOAT           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CHAR            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! STRING          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BOOL            [ reduce using rule 78 (lista_expresiones -> .) ]

    inicio                         shift and go to state 1
    lista_expresiones              shift and go to state 2
    expresion                      shift and go to state 3
    comentario_una_linea           shift and go to state 4
    comentario_multi_linea         shift and go to state 5
    tipo                           shift and go to state 13

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> lista_expresiones .
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    $end            reduce using rule 1 (inicio -> lista_expresiones .)
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 38
    tipo                           shift and go to state 13

state 3

    (2) inicio -> expresion .
    (5) lista_expresiones -> expresion . PTCOMA
    (6) lista_expresiones -> expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

  ! reduce/reduce conflict for $end resolved using rule 2 (inicio -> expresion .)
  ! shift/reduce conflict for MENOS resolved as shift
    $end            reduce using rule 2 (inicio -> expresion .)
    PTCOMA          shift and go to state 39
    WHILE           reduce using rule 6 (lista_expresiones -> expresion .)
    DO              reduce using rule 6 (lista_expresiones -> expresion .)
    IF              reduce using rule 6 (lista_expresiones -> expresion .)
    ENTERO          reduce using rule 6 (lista_expresiones -> expresion .)
    DECIMAL         reduce using rule 6 (lista_expresiones -> expresion .)
    FOR             reduce using rule 6 (lista_expresiones -> expresion .)
    TRUE            reduce using rule 6 (lista_expresiones -> expresion .)
    FALSE           reduce using rule 6 (lista_expresiones -> expresion .)
    CARACTER        reduce using rule 6 (lista_expresiones -> expresion .)
    CADENA          reduce using rule 6 (lista_expresiones -> expresion .)
    ID              reduce using rule 6 (lista_expresiones -> expresion .)
    SENO            reduce using rule 6 (lista_expresiones -> expresion .)
    COSENO          reduce using rule 6 (lista_expresiones -> expresion .)
    INV             reduce using rule 6 (lista_expresiones -> expresion .)
    PRINTLN         reduce using rule 6 (lista_expresiones -> expresion .)
    NOT_LOGICO      reduce using rule 6 (lista_expresiones -> expresion .)
    BREAK           reduce using rule 6 (lista_expresiones -> expresion .)
    CONTINUE        reduce using rule 6 (lista_expresiones -> expresion .)
    PARIZQ          reduce using rule 6 (lista_expresiones -> expresion .)
    SWITCH          reduce using rule 6 (lista_expresiones -> expresion .)
    VECTOR          reduce using rule 6 (lista_expresiones -> expresion .)
    PROC            reduce using rule 6 (lista_expresiones -> expresion .)
    EXEC            reduce using rule 6 (lista_expresiones -> expresion .)
    INT             reduce using rule 6 (lista_expresiones -> expresion .)
    FLOAT           reduce using rule 6 (lista_expresiones -> expresion .)
    CHAR            reduce using rule 6 (lista_expresiones -> expresion .)
    STRING          reduce using rule 6 (lista_expresiones -> expresion .)
    BOOL            reduce using rule 6 (lista_expresiones -> expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54

  ! MENOS           [ reduce using rule 6 (lista_expresiones -> expresion .) ]
  ! $end            [ reduce using rule 6 (lista_expresiones -> expresion .) ]


state 4

    (3) inicio -> comentario_una_linea .

    $end            reduce using rule 3 (inicio -> comentario_una_linea .)


state 5

    (4) inicio -> comentario_multi_linea .

    $end            reduce using rule 4 (inicio -> comentario_multi_linea .)


state 6

    (9) expresion -> WHILE . PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (72) expresion -> WHILE . PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER

    PARIZQ          shift and go to state 55


state 7

    (63) expresion -> PARIZQ . expresion PARDER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 56
    tipo                           shift and go to state 13

state 8

    (10) expresion -> DO . LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (75) expresion -> DO . LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA

    LLAVE_IZQ       shift and go to state 57


state 9

    (11) expresion -> IF . PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> IF . PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> IF . PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (71) expresion -> IF . PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (76) expresion -> IF . PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> IF . PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER

    PARIZQ          shift and go to state 58


state 10

    (14) expresion -> ENTERO .

    PTCOMA          reduce using rule 14 (expresion -> ENTERO .)
    MAS             reduce using rule 14 (expresion -> ENTERO .)
    MENOS           reduce using rule 14 (expresion -> ENTERO .)
    POR             reduce using rule 14 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 14 (expresion -> ENTERO .)
    POTENCIA        reduce using rule 14 (expresion -> ENTERO .)
    MODULO          reduce using rule 14 (expresion -> ENTERO .)
    OR_LOGICO       reduce using rule 14 (expresion -> ENTERO .)
    AND_LOGICO      reduce using rule 14 (expresion -> ENTERO .)
    XOR_LOGICO      reduce using rule 14 (expresion -> ENTERO .)
    GE              reduce using rule 14 (expresion -> ENTERO .)
    LE              reduce using rule 14 (expresion -> ENTERO .)
    LT              reduce using rule 14 (expresion -> ENTERO .)
    GT              reduce using rule 14 (expresion -> ENTERO .)
    EQ              reduce using rule 14 (expresion -> ENTERO .)
    NE              reduce using rule 14 (expresion -> ENTERO .)
    $end            reduce using rule 14 (expresion -> ENTERO .)
    WHILE           reduce using rule 14 (expresion -> ENTERO .)
    DO              reduce using rule 14 (expresion -> ENTERO .)
    IF              reduce using rule 14 (expresion -> ENTERO .)
    ENTERO          reduce using rule 14 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 14 (expresion -> ENTERO .)
    FOR             reduce using rule 14 (expresion -> ENTERO .)
    TRUE            reduce using rule 14 (expresion -> ENTERO .)
    FALSE           reduce using rule 14 (expresion -> ENTERO .)
    CARACTER        reduce using rule 14 (expresion -> ENTERO .)
    CADENA          reduce using rule 14 (expresion -> ENTERO .)
    ID              reduce using rule 14 (expresion -> ENTERO .)
    SENO            reduce using rule 14 (expresion -> ENTERO .)
    COSENO          reduce using rule 14 (expresion -> ENTERO .)
    INV             reduce using rule 14 (expresion -> ENTERO .)
    PRINTLN         reduce using rule 14 (expresion -> ENTERO .)
    NOT_LOGICO      reduce using rule 14 (expresion -> ENTERO .)
    BREAK           reduce using rule 14 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 14 (expresion -> ENTERO .)
    PARIZQ          reduce using rule 14 (expresion -> ENTERO .)
    SWITCH          reduce using rule 14 (expresion -> ENTERO .)
    VECTOR          reduce using rule 14 (expresion -> ENTERO .)
    PROC            reduce using rule 14 (expresion -> ENTERO .)
    EXEC            reduce using rule 14 (expresion -> ENTERO .)
    INT             reduce using rule 14 (expresion -> ENTERO .)
    FLOAT           reduce using rule 14 (expresion -> ENTERO .)
    CHAR            reduce using rule 14 (expresion -> ENTERO .)
    STRING          reduce using rule 14 (expresion -> ENTERO .)
    BOOL            reduce using rule 14 (expresion -> ENTERO .)
    PARDER          reduce using rule 14 (expresion -> ENTERO .)
    LLAVE_DER       reduce using rule 14 (expresion -> ENTERO .)
    CORDER          reduce using rule 14 (expresion -> ENTERO .)
    DOSPUNTOS       reduce using rule 14 (expresion -> ENTERO .)
    DEFAULT         reduce using rule 14 (expresion -> ENTERO .)
    CASE            reduce using rule 14 (expresion -> ENTERO .)
    COMA            reduce using rule 14 (expresion -> ENTERO .)


state 11

    (15) expresion -> DECIMAL .

    PTCOMA          reduce using rule 15 (expresion -> DECIMAL .)
    MAS             reduce using rule 15 (expresion -> DECIMAL .)
    MENOS           reduce using rule 15 (expresion -> DECIMAL .)
    POR             reduce using rule 15 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 15 (expresion -> DECIMAL .)
    POTENCIA        reduce using rule 15 (expresion -> DECIMAL .)
    MODULO          reduce using rule 15 (expresion -> DECIMAL .)
    OR_LOGICO       reduce using rule 15 (expresion -> DECIMAL .)
    AND_LOGICO      reduce using rule 15 (expresion -> DECIMAL .)
    XOR_LOGICO      reduce using rule 15 (expresion -> DECIMAL .)
    GE              reduce using rule 15 (expresion -> DECIMAL .)
    LE              reduce using rule 15 (expresion -> DECIMAL .)
    LT              reduce using rule 15 (expresion -> DECIMAL .)
    GT              reduce using rule 15 (expresion -> DECIMAL .)
    EQ              reduce using rule 15 (expresion -> DECIMAL .)
    NE              reduce using rule 15 (expresion -> DECIMAL .)
    $end            reduce using rule 15 (expresion -> DECIMAL .)
    WHILE           reduce using rule 15 (expresion -> DECIMAL .)
    DO              reduce using rule 15 (expresion -> DECIMAL .)
    IF              reduce using rule 15 (expresion -> DECIMAL .)
    ENTERO          reduce using rule 15 (expresion -> DECIMAL .)
    DECIMAL         reduce using rule 15 (expresion -> DECIMAL .)
    FOR             reduce using rule 15 (expresion -> DECIMAL .)
    TRUE            reduce using rule 15 (expresion -> DECIMAL .)
    FALSE           reduce using rule 15 (expresion -> DECIMAL .)
    CARACTER        reduce using rule 15 (expresion -> DECIMAL .)
    CADENA          reduce using rule 15 (expresion -> DECIMAL .)
    ID              reduce using rule 15 (expresion -> DECIMAL .)
    SENO            reduce using rule 15 (expresion -> DECIMAL .)
    COSENO          reduce using rule 15 (expresion -> DECIMAL .)
    INV             reduce using rule 15 (expresion -> DECIMAL .)
    PRINTLN         reduce using rule 15 (expresion -> DECIMAL .)
    NOT_LOGICO      reduce using rule 15 (expresion -> DECIMAL .)
    BREAK           reduce using rule 15 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 15 (expresion -> DECIMAL .)
    PARIZQ          reduce using rule 15 (expresion -> DECIMAL .)
    SWITCH          reduce using rule 15 (expresion -> DECIMAL .)
    VECTOR          reduce using rule 15 (expresion -> DECIMAL .)
    PROC            reduce using rule 15 (expresion -> DECIMAL .)
    EXEC            reduce using rule 15 (expresion -> DECIMAL .)
    INT             reduce using rule 15 (expresion -> DECIMAL .)
    FLOAT           reduce using rule 15 (expresion -> DECIMAL .)
    CHAR            reduce using rule 15 (expresion -> DECIMAL .)
    STRING          reduce using rule 15 (expresion -> DECIMAL .)
    BOOL            reduce using rule 15 (expresion -> DECIMAL .)
    PARDER          reduce using rule 15 (expresion -> DECIMAL .)
    LLAVE_DER       reduce using rule 15 (expresion -> DECIMAL .)
    CORDER          reduce using rule 15 (expresion -> DECIMAL .)
    DOSPUNTOS       reduce using rule 15 (expresion -> DECIMAL .)
    DEFAULT         reduce using rule 15 (expresion -> DECIMAL .)
    CASE            reduce using rule 15 (expresion -> DECIMAL .)
    COMA            reduce using rule 15 (expresion -> DECIMAL .)


state 12

    (16) expresion -> FOR . PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> FOR . PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (73) expresion -> FOR . PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> FOR . PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER

    PARIZQ          shift and go to state 59


state 13

    (33) expresion -> tipo . ID PTCOMA
    (46) expresion -> tipo . ID ASIGNACION expresion PTCOMA

    ID              shift and go to state 60


state 14

    (22) expresion -> ID .
    (34) expresion -> ID . ASIGNACION expresion PTCOMA
    (59) expresion -> ID . INCREMENTO
    (60) expresion -> ID . DECREMENTO
    (93) expresion -> ID . lista_indices
    (94) expresion -> ID . lista_indices ASIGNACION expresion PTCOMA
    (95) lista_indices -> . lista_indices CORIZQ expresion CORDER
    (96) lista_indices -> . CORIZQ expresion CORDER
    (97) lista_indices -> .

  ! shift/reduce conflict for ASIGNACION resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for MAS resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for MENOS resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for POR resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for DIVIDIDO resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for OR_LOGICO resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for AND_LOGICO resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for XOR_LOGICO resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for GE resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for LE resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for LT resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for GT resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for EQ resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for NE resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for DO resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for ENTERO resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for DECIMAL resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for CARACTER resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for CADENA resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for SENO resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for COSENO resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for INV resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for NOT_LOGICO resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for PARIZQ resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for SWITCH resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for VECTOR resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for PROC resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for EXEC resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for FLOAT resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for STRING resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for PARDER resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for LLAVE_DER resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for CORDER resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for CASE resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for COMA resolved using rule 22 (expresion -> ID .)
    PTCOMA          reduce using rule 22 (expresion -> ID .)
    MAS             reduce using rule 22 (expresion -> ID .)
    MENOS           reduce using rule 22 (expresion -> ID .)
    POR             reduce using rule 22 (expresion -> ID .)
    DIVIDIDO        reduce using rule 22 (expresion -> ID .)
    POTENCIA        reduce using rule 22 (expresion -> ID .)
    MODULO          reduce using rule 22 (expresion -> ID .)
    OR_LOGICO       reduce using rule 22 (expresion -> ID .)
    AND_LOGICO      reduce using rule 22 (expresion -> ID .)
    XOR_LOGICO      reduce using rule 22 (expresion -> ID .)
    GE              reduce using rule 22 (expresion -> ID .)
    LE              reduce using rule 22 (expresion -> ID .)
    LT              reduce using rule 22 (expresion -> ID .)
    GT              reduce using rule 22 (expresion -> ID .)
    EQ              reduce using rule 22 (expresion -> ID .)
    NE              reduce using rule 22 (expresion -> ID .)
    $end            reduce using rule 22 (expresion -> ID .)
    WHILE           reduce using rule 22 (expresion -> ID .)
    DO              reduce using rule 22 (expresion -> ID .)
    IF              reduce using rule 22 (expresion -> ID .)
    ENTERO          reduce using rule 22 (expresion -> ID .)
    DECIMAL         reduce using rule 22 (expresion -> ID .)
    FOR             reduce using rule 22 (expresion -> ID .)
    TRUE            reduce using rule 22 (expresion -> ID .)
    FALSE           reduce using rule 22 (expresion -> ID .)
    CARACTER        reduce using rule 22 (expresion -> ID .)
    CADENA          reduce using rule 22 (expresion -> ID .)
    ID              reduce using rule 22 (expresion -> ID .)
    SENO            reduce using rule 22 (expresion -> ID .)
    COSENO          reduce using rule 22 (expresion -> ID .)
    INV             reduce using rule 22 (expresion -> ID .)
    PRINTLN         reduce using rule 22 (expresion -> ID .)
    NOT_LOGICO      reduce using rule 22 (expresion -> ID .)
    BREAK           reduce using rule 22 (expresion -> ID .)
    CONTINUE        reduce using rule 22 (expresion -> ID .)
    PARIZQ          reduce using rule 22 (expresion -> ID .)
    SWITCH          reduce using rule 22 (expresion -> ID .)
    VECTOR          reduce using rule 22 (expresion -> ID .)
    PROC            reduce using rule 22 (expresion -> ID .)
    EXEC            reduce using rule 22 (expresion -> ID .)
    INT             reduce using rule 22 (expresion -> ID .)
    FLOAT           reduce using rule 22 (expresion -> ID .)
    CHAR            reduce using rule 22 (expresion -> ID .)
    STRING          reduce using rule 22 (expresion -> ID .)
    BOOL            reduce using rule 22 (expresion -> ID .)
    PARDER          reduce using rule 22 (expresion -> ID .)
    LLAVE_DER       reduce using rule 22 (expresion -> ID .)
    CORDER          reduce using rule 22 (expresion -> ID .)
    DOSPUNTOS       reduce using rule 22 (expresion -> ID .)
    DEFAULT         reduce using rule 22 (expresion -> ID .)
    CASE            reduce using rule 22 (expresion -> ID .)
    COMA            reduce using rule 22 (expresion -> ID .)
    ASIGNACION      shift and go to state 61
    INCREMENTO      shift and go to state 62
    DECREMENTO      shift and go to state 63
    CORIZQ          shift and go to state 65

  ! ASIGNACION      [ reduce using rule 97 (lista_indices -> .) ]
  ! CORIZQ          [ reduce using rule 97 (lista_indices -> .) ]
  ! PTCOMA          [ reduce using rule 97 (lista_indices -> .) ]
  ! MAS             [ reduce using rule 97 (lista_indices -> .) ]
  ! MENOS           [ reduce using rule 97 (lista_indices -> .) ]
  ! POR             [ reduce using rule 97 (lista_indices -> .) ]
  ! DIVIDIDO        [ reduce using rule 97 (lista_indices -> .) ]
  ! POTENCIA        [ reduce using rule 97 (lista_indices -> .) ]
  ! MODULO          [ reduce using rule 97 (lista_indices -> .) ]
  ! OR_LOGICO       [ reduce using rule 97 (lista_indices -> .) ]
  ! AND_LOGICO      [ reduce using rule 97 (lista_indices -> .) ]
  ! XOR_LOGICO      [ reduce using rule 97 (lista_indices -> .) ]
  ! GE              [ reduce using rule 97 (lista_indices -> .) ]
  ! LE              [ reduce using rule 97 (lista_indices -> .) ]
  ! LT              [ reduce using rule 97 (lista_indices -> .) ]
  ! GT              [ reduce using rule 97 (lista_indices -> .) ]
  ! EQ              [ reduce using rule 97 (lista_indices -> .) ]
  ! NE              [ reduce using rule 97 (lista_indices -> .) ]
  ! $end            [ reduce using rule 97 (lista_indices -> .) ]
  ! WHILE           [ reduce using rule 97 (lista_indices -> .) ]
  ! DO              [ reduce using rule 97 (lista_indices -> .) ]
  ! IF              [ reduce using rule 97 (lista_indices -> .) ]
  ! ENTERO          [ reduce using rule 97 (lista_indices -> .) ]
  ! DECIMAL         [ reduce using rule 97 (lista_indices -> .) ]
  ! FOR             [ reduce using rule 97 (lista_indices -> .) ]
  ! TRUE            [ reduce using rule 97 (lista_indices -> .) ]
  ! FALSE           [ reduce using rule 97 (lista_indices -> .) ]
  ! CARACTER        [ reduce using rule 97 (lista_indices -> .) ]
  ! CADENA          [ reduce using rule 97 (lista_indices -> .) ]
  ! ID              [ reduce using rule 97 (lista_indices -> .) ]
  ! SENO            [ reduce using rule 97 (lista_indices -> .) ]
  ! COSENO          [ reduce using rule 97 (lista_indices -> .) ]
  ! INV             [ reduce using rule 97 (lista_indices -> .) ]
  ! PRINTLN         [ reduce using rule 97 (lista_indices -> .) ]
  ! NOT_LOGICO      [ reduce using rule 97 (lista_indices -> .) ]
  ! BREAK           [ reduce using rule 97 (lista_indices -> .) ]
  ! CONTINUE        [ reduce using rule 97 (lista_indices -> .) ]
  ! PARIZQ          [ reduce using rule 97 (lista_indices -> .) ]
  ! SWITCH          [ reduce using rule 97 (lista_indices -> .) ]
  ! VECTOR          [ reduce using rule 97 (lista_indices -> .) ]
  ! PROC            [ reduce using rule 97 (lista_indices -> .) ]
  ! EXEC            [ reduce using rule 97 (lista_indices -> .) ]
  ! INT             [ reduce using rule 97 (lista_indices -> .) ]
  ! FLOAT           [ reduce using rule 97 (lista_indices -> .) ]
  ! CHAR            [ reduce using rule 97 (lista_indices -> .) ]
  ! STRING          [ reduce using rule 97 (lista_indices -> .) ]
  ! BOOL            [ reduce using rule 97 (lista_indices -> .) ]
  ! PARDER          [ reduce using rule 97 (lista_indices -> .) ]
  ! LLAVE_DER       [ reduce using rule 97 (lista_indices -> .) ]
  ! CORDER          [ reduce using rule 97 (lista_indices -> .) ]
  ! DOSPUNTOS       [ reduce using rule 97 (lista_indices -> .) ]
  ! DEFAULT         [ reduce using rule 97 (lista_indices -> .) ]
  ! CASE            [ reduce using rule 97 (lista_indices -> .) ]
  ! COMA            [ reduce using rule 97 (lista_indices -> .) ]

    lista_indices                  shift and go to state 64

state 15

    (18) expresion -> TRUE .

    PTCOMA          reduce using rule 18 (expresion -> TRUE .)
    MAS             reduce using rule 18 (expresion -> TRUE .)
    MENOS           reduce using rule 18 (expresion -> TRUE .)
    POR             reduce using rule 18 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 18 (expresion -> TRUE .)
    POTENCIA        reduce using rule 18 (expresion -> TRUE .)
    MODULO          reduce using rule 18 (expresion -> TRUE .)
    OR_LOGICO       reduce using rule 18 (expresion -> TRUE .)
    AND_LOGICO      reduce using rule 18 (expresion -> TRUE .)
    XOR_LOGICO      reduce using rule 18 (expresion -> TRUE .)
    GE              reduce using rule 18 (expresion -> TRUE .)
    LE              reduce using rule 18 (expresion -> TRUE .)
    LT              reduce using rule 18 (expresion -> TRUE .)
    GT              reduce using rule 18 (expresion -> TRUE .)
    EQ              reduce using rule 18 (expresion -> TRUE .)
    NE              reduce using rule 18 (expresion -> TRUE .)
    $end            reduce using rule 18 (expresion -> TRUE .)
    WHILE           reduce using rule 18 (expresion -> TRUE .)
    DO              reduce using rule 18 (expresion -> TRUE .)
    IF              reduce using rule 18 (expresion -> TRUE .)
    ENTERO          reduce using rule 18 (expresion -> TRUE .)
    DECIMAL         reduce using rule 18 (expresion -> TRUE .)
    FOR             reduce using rule 18 (expresion -> TRUE .)
    TRUE            reduce using rule 18 (expresion -> TRUE .)
    FALSE           reduce using rule 18 (expresion -> TRUE .)
    CARACTER        reduce using rule 18 (expresion -> TRUE .)
    CADENA          reduce using rule 18 (expresion -> TRUE .)
    ID              reduce using rule 18 (expresion -> TRUE .)
    SENO            reduce using rule 18 (expresion -> TRUE .)
    COSENO          reduce using rule 18 (expresion -> TRUE .)
    INV             reduce using rule 18 (expresion -> TRUE .)
    PRINTLN         reduce using rule 18 (expresion -> TRUE .)
    NOT_LOGICO      reduce using rule 18 (expresion -> TRUE .)
    BREAK           reduce using rule 18 (expresion -> TRUE .)
    CONTINUE        reduce using rule 18 (expresion -> TRUE .)
    PARIZQ          reduce using rule 18 (expresion -> TRUE .)
    SWITCH          reduce using rule 18 (expresion -> TRUE .)
    VECTOR          reduce using rule 18 (expresion -> TRUE .)
    PROC            reduce using rule 18 (expresion -> TRUE .)
    EXEC            reduce using rule 18 (expresion -> TRUE .)
    INT             reduce using rule 18 (expresion -> TRUE .)
    FLOAT           reduce using rule 18 (expresion -> TRUE .)
    CHAR            reduce using rule 18 (expresion -> TRUE .)
    STRING          reduce using rule 18 (expresion -> TRUE .)
    BOOL            reduce using rule 18 (expresion -> TRUE .)
    PARDER          reduce using rule 18 (expresion -> TRUE .)
    LLAVE_DER       reduce using rule 18 (expresion -> TRUE .)
    CORDER          reduce using rule 18 (expresion -> TRUE .)
    DOSPUNTOS       reduce using rule 18 (expresion -> TRUE .)
    DEFAULT         reduce using rule 18 (expresion -> TRUE .)
    CASE            reduce using rule 18 (expresion -> TRUE .)
    COMA            reduce using rule 18 (expresion -> TRUE .)


state 16

    (19) expresion -> FALSE .

    PTCOMA          reduce using rule 19 (expresion -> FALSE .)
    MAS             reduce using rule 19 (expresion -> FALSE .)
    MENOS           reduce using rule 19 (expresion -> FALSE .)
    POR             reduce using rule 19 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 19 (expresion -> FALSE .)
    POTENCIA        reduce using rule 19 (expresion -> FALSE .)
    MODULO          reduce using rule 19 (expresion -> FALSE .)
    OR_LOGICO       reduce using rule 19 (expresion -> FALSE .)
    AND_LOGICO      reduce using rule 19 (expresion -> FALSE .)
    XOR_LOGICO      reduce using rule 19 (expresion -> FALSE .)
    GE              reduce using rule 19 (expresion -> FALSE .)
    LE              reduce using rule 19 (expresion -> FALSE .)
    LT              reduce using rule 19 (expresion -> FALSE .)
    GT              reduce using rule 19 (expresion -> FALSE .)
    EQ              reduce using rule 19 (expresion -> FALSE .)
    NE              reduce using rule 19 (expresion -> FALSE .)
    $end            reduce using rule 19 (expresion -> FALSE .)
    WHILE           reduce using rule 19 (expresion -> FALSE .)
    DO              reduce using rule 19 (expresion -> FALSE .)
    IF              reduce using rule 19 (expresion -> FALSE .)
    ENTERO          reduce using rule 19 (expresion -> FALSE .)
    DECIMAL         reduce using rule 19 (expresion -> FALSE .)
    FOR             reduce using rule 19 (expresion -> FALSE .)
    TRUE            reduce using rule 19 (expresion -> FALSE .)
    FALSE           reduce using rule 19 (expresion -> FALSE .)
    CARACTER        reduce using rule 19 (expresion -> FALSE .)
    CADENA          reduce using rule 19 (expresion -> FALSE .)
    ID              reduce using rule 19 (expresion -> FALSE .)
    SENO            reduce using rule 19 (expresion -> FALSE .)
    COSENO          reduce using rule 19 (expresion -> FALSE .)
    INV             reduce using rule 19 (expresion -> FALSE .)
    PRINTLN         reduce using rule 19 (expresion -> FALSE .)
    NOT_LOGICO      reduce using rule 19 (expresion -> FALSE .)
    BREAK           reduce using rule 19 (expresion -> FALSE .)
    CONTINUE        reduce using rule 19 (expresion -> FALSE .)
    PARIZQ          reduce using rule 19 (expresion -> FALSE .)
    SWITCH          reduce using rule 19 (expresion -> FALSE .)
    VECTOR          reduce using rule 19 (expresion -> FALSE .)
    PROC            reduce using rule 19 (expresion -> FALSE .)
    EXEC            reduce using rule 19 (expresion -> FALSE .)
    INT             reduce using rule 19 (expresion -> FALSE .)
    FLOAT           reduce using rule 19 (expresion -> FALSE .)
    CHAR            reduce using rule 19 (expresion -> FALSE .)
    STRING          reduce using rule 19 (expresion -> FALSE .)
    BOOL            reduce using rule 19 (expresion -> FALSE .)
    PARDER          reduce using rule 19 (expresion -> FALSE .)
    LLAVE_DER       reduce using rule 19 (expresion -> FALSE .)
    CORDER          reduce using rule 19 (expresion -> FALSE .)
    DOSPUNTOS       reduce using rule 19 (expresion -> FALSE .)
    DEFAULT         reduce using rule 19 (expresion -> FALSE .)
    CASE            reduce using rule 19 (expresion -> FALSE .)
    COMA            reduce using rule 19 (expresion -> FALSE .)


state 17

    (20) expresion -> CARACTER .

    PTCOMA          reduce using rule 20 (expresion -> CARACTER .)
    MAS             reduce using rule 20 (expresion -> CARACTER .)
    MENOS           reduce using rule 20 (expresion -> CARACTER .)
    POR             reduce using rule 20 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 20 (expresion -> CARACTER .)
    POTENCIA        reduce using rule 20 (expresion -> CARACTER .)
    MODULO          reduce using rule 20 (expresion -> CARACTER .)
    OR_LOGICO       reduce using rule 20 (expresion -> CARACTER .)
    AND_LOGICO      reduce using rule 20 (expresion -> CARACTER .)
    XOR_LOGICO      reduce using rule 20 (expresion -> CARACTER .)
    GE              reduce using rule 20 (expresion -> CARACTER .)
    LE              reduce using rule 20 (expresion -> CARACTER .)
    LT              reduce using rule 20 (expresion -> CARACTER .)
    GT              reduce using rule 20 (expresion -> CARACTER .)
    EQ              reduce using rule 20 (expresion -> CARACTER .)
    NE              reduce using rule 20 (expresion -> CARACTER .)
    $end            reduce using rule 20 (expresion -> CARACTER .)
    WHILE           reduce using rule 20 (expresion -> CARACTER .)
    DO              reduce using rule 20 (expresion -> CARACTER .)
    IF              reduce using rule 20 (expresion -> CARACTER .)
    ENTERO          reduce using rule 20 (expresion -> CARACTER .)
    DECIMAL         reduce using rule 20 (expresion -> CARACTER .)
    FOR             reduce using rule 20 (expresion -> CARACTER .)
    TRUE            reduce using rule 20 (expresion -> CARACTER .)
    FALSE           reduce using rule 20 (expresion -> CARACTER .)
    CARACTER        reduce using rule 20 (expresion -> CARACTER .)
    CADENA          reduce using rule 20 (expresion -> CARACTER .)
    ID              reduce using rule 20 (expresion -> CARACTER .)
    SENO            reduce using rule 20 (expresion -> CARACTER .)
    COSENO          reduce using rule 20 (expresion -> CARACTER .)
    INV             reduce using rule 20 (expresion -> CARACTER .)
    PRINTLN         reduce using rule 20 (expresion -> CARACTER .)
    NOT_LOGICO      reduce using rule 20 (expresion -> CARACTER .)
    BREAK           reduce using rule 20 (expresion -> CARACTER .)
    CONTINUE        reduce using rule 20 (expresion -> CARACTER .)
    PARIZQ          reduce using rule 20 (expresion -> CARACTER .)
    SWITCH          reduce using rule 20 (expresion -> CARACTER .)
    VECTOR          reduce using rule 20 (expresion -> CARACTER .)
    PROC            reduce using rule 20 (expresion -> CARACTER .)
    EXEC            reduce using rule 20 (expresion -> CARACTER .)
    INT             reduce using rule 20 (expresion -> CARACTER .)
    FLOAT           reduce using rule 20 (expresion -> CARACTER .)
    CHAR            reduce using rule 20 (expresion -> CARACTER .)
    STRING          reduce using rule 20 (expresion -> CARACTER .)
    BOOL            reduce using rule 20 (expresion -> CARACTER .)
    PARDER          reduce using rule 20 (expresion -> CARACTER .)
    LLAVE_DER       reduce using rule 20 (expresion -> CARACTER .)
    CORDER          reduce using rule 20 (expresion -> CARACTER .)
    DOSPUNTOS       reduce using rule 20 (expresion -> CARACTER .)
    DEFAULT         reduce using rule 20 (expresion -> CARACTER .)
    CASE            reduce using rule 20 (expresion -> CARACTER .)
    COMA            reduce using rule 20 (expresion -> CARACTER .)


state 18

    (21) expresion -> CADENA .

    PTCOMA          reduce using rule 21 (expresion -> CADENA .)
    MAS             reduce using rule 21 (expresion -> CADENA .)
    MENOS           reduce using rule 21 (expresion -> CADENA .)
    POR             reduce using rule 21 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 21 (expresion -> CADENA .)
    POTENCIA        reduce using rule 21 (expresion -> CADENA .)
    MODULO          reduce using rule 21 (expresion -> CADENA .)
    OR_LOGICO       reduce using rule 21 (expresion -> CADENA .)
    AND_LOGICO      reduce using rule 21 (expresion -> CADENA .)
    XOR_LOGICO      reduce using rule 21 (expresion -> CADENA .)
    GE              reduce using rule 21 (expresion -> CADENA .)
    LE              reduce using rule 21 (expresion -> CADENA .)
    LT              reduce using rule 21 (expresion -> CADENA .)
    GT              reduce using rule 21 (expresion -> CADENA .)
    EQ              reduce using rule 21 (expresion -> CADENA .)
    NE              reduce using rule 21 (expresion -> CADENA .)
    $end            reduce using rule 21 (expresion -> CADENA .)
    WHILE           reduce using rule 21 (expresion -> CADENA .)
    DO              reduce using rule 21 (expresion -> CADENA .)
    IF              reduce using rule 21 (expresion -> CADENA .)
    ENTERO          reduce using rule 21 (expresion -> CADENA .)
    DECIMAL         reduce using rule 21 (expresion -> CADENA .)
    FOR             reduce using rule 21 (expresion -> CADENA .)
    TRUE            reduce using rule 21 (expresion -> CADENA .)
    FALSE           reduce using rule 21 (expresion -> CADENA .)
    CARACTER        reduce using rule 21 (expresion -> CADENA .)
    CADENA          reduce using rule 21 (expresion -> CADENA .)
    ID              reduce using rule 21 (expresion -> CADENA .)
    SENO            reduce using rule 21 (expresion -> CADENA .)
    COSENO          reduce using rule 21 (expresion -> CADENA .)
    INV             reduce using rule 21 (expresion -> CADENA .)
    PRINTLN         reduce using rule 21 (expresion -> CADENA .)
    NOT_LOGICO      reduce using rule 21 (expresion -> CADENA .)
    BREAK           reduce using rule 21 (expresion -> CADENA .)
    CONTINUE        reduce using rule 21 (expresion -> CADENA .)
    PARIZQ          reduce using rule 21 (expresion -> CADENA .)
    SWITCH          reduce using rule 21 (expresion -> CADENA .)
    VECTOR          reduce using rule 21 (expresion -> CADENA .)
    PROC            reduce using rule 21 (expresion -> CADENA .)
    EXEC            reduce using rule 21 (expresion -> CADENA .)
    INT             reduce using rule 21 (expresion -> CADENA .)
    FLOAT           reduce using rule 21 (expresion -> CADENA .)
    CHAR            reduce using rule 21 (expresion -> CADENA .)
    STRING          reduce using rule 21 (expresion -> CADENA .)
    BOOL            reduce using rule 21 (expresion -> CADENA .)
    PARDER          reduce using rule 21 (expresion -> CADENA .)
    LLAVE_DER       reduce using rule 21 (expresion -> CADENA .)
    CORDER          reduce using rule 21 (expresion -> CADENA .)
    DOSPUNTOS       reduce using rule 21 (expresion -> CADENA .)
    DEFAULT         reduce using rule 21 (expresion -> CADENA .)
    CASE            reduce using rule 21 (expresion -> CADENA .)
    COMA            reduce using rule 21 (expresion -> CADENA .)


state 19

    (23) expresion -> MENOS . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 66
    tipo                           shift and go to state 13

state 20

    (29) expresion -> SENO . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 67


state 21

    (30) expresion -> COSENO . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 68


state 22

    (31) expresion -> INV . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 69


state 23

    (40) expresion -> PRINTLN . PARIZQ expresion PARDER PTCOMA
    (41) expresion -> PRINTLN . PARIZQ expresion PARDER
    (42) expresion -> PRINTLN . PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> PRINTLN . PARIZQ oraciones PARDER

    PARIZQ          shift and go to state 70


state 24

    (49) expresion -> NOT_LOGICO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 71
    tipo                           shift and go to state 13

state 25

    (51) expresion -> BREAK . PTCOMA

    PTCOMA          shift and go to state 72


state 26

    (52) expresion -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 73


state 27

    (64) expresion -> SWITCH . PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER

    PARIZQ          shift and go to state 74


state 28

    (79) expresion -> VECTOR . CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> VECTOR . CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> VECTOR . CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> VECTOR . CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> VECTOR . CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA

    CORIZQ          shift and go to state 75


state 29

    (98) expresion -> PROC . ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER

    ID              shift and go to state 76


state 30

    (103) expresion -> EXEC . ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA

    ID              shift and go to state 77


state 31

    (62) comentario_una_linea -> COMENTARIO_UNA_LINEA .

    $end            reduce using rule 62 (comentario_una_linea -> COMENTARIO_UNA_LINEA .)


state 32

    (61) comentario_multi_linea -> COMENTARIO_MULTILINEA .

    $end            reduce using rule 61 (comentario_multi_linea -> COMENTARIO_MULTILINEA .)


state 33

    (35) tipo -> INT .

    ID              reduce using rule 35 (tipo -> INT .)
    CORDER          reduce using rule 35 (tipo -> INT .)
    DOSPUNTOS       reduce using rule 35 (tipo -> INT .)


state 34

    (36) tipo -> FLOAT .

    ID              reduce using rule 36 (tipo -> FLOAT .)
    CORDER          reduce using rule 36 (tipo -> FLOAT .)
    DOSPUNTOS       reduce using rule 36 (tipo -> FLOAT .)


state 35

    (37) tipo -> CHAR .

    ID              reduce using rule 37 (tipo -> CHAR .)
    CORDER          reduce using rule 37 (tipo -> CHAR .)
    DOSPUNTOS       reduce using rule 37 (tipo -> CHAR .)


state 36

    (38) tipo -> STRING .

    ID              reduce using rule 38 (tipo -> STRING .)
    CORDER          reduce using rule 38 (tipo -> STRING .)
    DOSPUNTOS       reduce using rule 38 (tipo -> STRING .)


state 37

    (39) tipo -> BOOL .

    ID              reduce using rule 39 (tipo -> BOOL .)
    CORDER          reduce using rule 39 (tipo -> BOOL .)
    DOSPUNTOS       reduce using rule 39 (tipo -> BOOL .)


state 38

    (7) lista_expresiones -> lista_expresiones expresion . PTCOMA
    (8) lista_expresiones -> lista_expresiones expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

  ! shift/reduce conflict for MENOS resolved as shift
    PTCOMA          shift and go to state 78
    WHILE           reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    DO              reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    IF              reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    ENTERO          reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    DECIMAL         reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    FOR             reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    TRUE            reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    FALSE           reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    CARACTER        reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    CADENA          reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    ID              reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    SENO            reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    COSENO          reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    INV             reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    PRINTLN         reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    NOT_LOGICO      reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    BREAK           reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    CONTINUE        reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    PARIZQ          reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    SWITCH          reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    VECTOR          reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    PROC            reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    EXEC            reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    INT             reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    FLOAT           reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    CHAR            reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    STRING          reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    BOOL            reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    $end            reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    LLAVE_DER       reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    DEFAULT         reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    CASE            reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54

  ! MENOS           [ reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .) ]


state 39

    (5) lista_expresiones -> expresion PTCOMA .

    WHILE           reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    DO              reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    IF              reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    ENTERO          reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    DECIMAL         reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    FOR             reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    TRUE            reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    FALSE           reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    CARACTER        reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    CADENA          reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    ID              reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    MENOS           reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    SENO            reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    COSENO          reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    INV             reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    PRINTLN         reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    NOT_LOGICO      reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    BREAK           reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    CONTINUE        reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    PARIZQ          reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    SWITCH          reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    VECTOR          reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    PROC            reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    EXEC            reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    INT             reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    FLOAT           reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    CHAR            reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    STRING          reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    BOOL            reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    $end            reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    LLAVE_DER       reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    DEFAULT         reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    CASE            reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)


state 40

    (24) expresion -> expresion MAS . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 79
    tipo                           shift and go to state 13

state 41

    (25) expresion -> expresion MENOS . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 80
    tipo                           shift and go to state 13

state 42

    (26) expresion -> expresion POR . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 81
    tipo                           shift and go to state 13

state 43

    (27) expresion -> expresion DIVIDIDO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 82
    tipo                           shift and go to state 13

state 44

    (28) expresion -> expresion POTENCIA . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 83
    tipo                           shift and go to state 13

state 45

    (32) expresion -> expresion MODULO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 84
    tipo                           shift and go to state 13

state 46

    (47) expresion -> expresion OR_LOGICO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 85
    tipo                           shift and go to state 13

state 47

    (48) expresion -> expresion AND_LOGICO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 86
    tipo                           shift and go to state 13

state 48

    (50) expresion -> expresion XOR_LOGICO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 87
    tipo                           shift and go to state 13

state 49

    (53) expresion -> expresion GE . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 88
    tipo                           shift and go to state 13

state 50

    (54) expresion -> expresion LE . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 89
    tipo                           shift and go to state 13

state 51

    (55) expresion -> expresion LT . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 90
    tipo                           shift and go to state 13

state 52

    (56) expresion -> expresion GT . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 91
    tipo                           shift and go to state 13

state 53

    (57) expresion -> expresion EQ . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 92
    tipo                           shift and go to state 13

state 54

    (58) expresion -> expresion NE . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 93
    tipo                           shift and go to state 13

state 55

    (9) expresion -> WHILE PARIZQ . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (72) expresion -> WHILE PARIZQ . expresion PARDER LLAVE_IZQ LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 94
    tipo                           shift and go to state 13

state 56

    (63) expresion -> PARIZQ expresion . PARDER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PARDER          shift and go to state 95
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 57

    (10) expresion -> DO LLAVE_IZQ . lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (75) expresion -> DO LLAVE_IZQ . LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (78) lista_expresiones -> .
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for SENO resolved as shift
  ! shift/reduce conflict for COSENO resolved as shift
  ! shift/reduce conflict for INV resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for NOT_LOGICO resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for VECTOR resolved as shift
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for EXEC resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_DER       shift and go to state 97
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

  ! LLAVE_DER       [ reduce using rule 78 (lista_expresiones -> .) ]
  ! WHILE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DO              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! IF              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ENTERO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DECIMAL         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FOR             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! TRUE            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FALSE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CARACTER        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CADENA          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ID              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! MENOS           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SENO            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! COSENO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INV             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! NOT_LOGICO      [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BREAK           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PARIZQ          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SWITCH          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! VECTOR          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PROC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! EXEC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INT             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FLOAT           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CHAR            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! STRING          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BOOL            [ reduce using rule 78 (lista_expresiones -> .) ]

    lista_expresiones              shift and go to state 96
    expresion                      shift and go to state 98
    tipo                           shift and go to state 13

state 58

    (11) expresion -> IF PARIZQ . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> IF PARIZQ . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> IF PARIZQ . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (71) expresion -> IF PARIZQ . expresion PARDER LLAVE_IZQ LLAVE_DER
    (76) expresion -> IF PARIZQ . expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> IF PARIZQ . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 99
    tipo                           shift and go to state 13

state 59

    (16) expresion -> FOR PARIZQ . tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> FOR PARIZQ . ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (73) expresion -> FOR PARIZQ . tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> FOR PARIZQ . ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    ID              shift and go to state 101
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    tipo                           shift and go to state 100

state 60

    (33) expresion -> tipo ID . PTCOMA
    (46) expresion -> tipo ID . ASIGNACION expresion PTCOMA

    PTCOMA          shift and go to state 102
    ASIGNACION      shift and go to state 103


state 61

    (34) expresion -> ID ASIGNACION . expresion PTCOMA
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 104
    tipo                           shift and go to state 13

state 62

    (59) expresion -> ID INCREMENTO .

    PTCOMA          reduce using rule 59 (expresion -> ID INCREMENTO .)
    MAS             reduce using rule 59 (expresion -> ID INCREMENTO .)
    MENOS           reduce using rule 59 (expresion -> ID INCREMENTO .)
    POR             reduce using rule 59 (expresion -> ID INCREMENTO .)
    DIVIDIDO        reduce using rule 59 (expresion -> ID INCREMENTO .)
    POTENCIA        reduce using rule 59 (expresion -> ID INCREMENTO .)
    MODULO          reduce using rule 59 (expresion -> ID INCREMENTO .)
    OR_LOGICO       reduce using rule 59 (expresion -> ID INCREMENTO .)
    AND_LOGICO      reduce using rule 59 (expresion -> ID INCREMENTO .)
    XOR_LOGICO      reduce using rule 59 (expresion -> ID INCREMENTO .)
    GE              reduce using rule 59 (expresion -> ID INCREMENTO .)
    LE              reduce using rule 59 (expresion -> ID INCREMENTO .)
    LT              reduce using rule 59 (expresion -> ID INCREMENTO .)
    GT              reduce using rule 59 (expresion -> ID INCREMENTO .)
    EQ              reduce using rule 59 (expresion -> ID INCREMENTO .)
    NE              reduce using rule 59 (expresion -> ID INCREMENTO .)
    $end            reduce using rule 59 (expresion -> ID INCREMENTO .)
    WHILE           reduce using rule 59 (expresion -> ID INCREMENTO .)
    DO              reduce using rule 59 (expresion -> ID INCREMENTO .)
    IF              reduce using rule 59 (expresion -> ID INCREMENTO .)
    ENTERO          reduce using rule 59 (expresion -> ID INCREMENTO .)
    DECIMAL         reduce using rule 59 (expresion -> ID INCREMENTO .)
    FOR             reduce using rule 59 (expresion -> ID INCREMENTO .)
    TRUE            reduce using rule 59 (expresion -> ID INCREMENTO .)
    FALSE           reduce using rule 59 (expresion -> ID INCREMENTO .)
    CARACTER        reduce using rule 59 (expresion -> ID INCREMENTO .)
    CADENA          reduce using rule 59 (expresion -> ID INCREMENTO .)
    ID              reduce using rule 59 (expresion -> ID INCREMENTO .)
    SENO            reduce using rule 59 (expresion -> ID INCREMENTO .)
    COSENO          reduce using rule 59 (expresion -> ID INCREMENTO .)
    INV             reduce using rule 59 (expresion -> ID INCREMENTO .)
    PRINTLN         reduce using rule 59 (expresion -> ID INCREMENTO .)
    NOT_LOGICO      reduce using rule 59 (expresion -> ID INCREMENTO .)
    BREAK           reduce using rule 59 (expresion -> ID INCREMENTO .)
    CONTINUE        reduce using rule 59 (expresion -> ID INCREMENTO .)
    PARIZQ          reduce using rule 59 (expresion -> ID INCREMENTO .)
    SWITCH          reduce using rule 59 (expresion -> ID INCREMENTO .)
    VECTOR          reduce using rule 59 (expresion -> ID INCREMENTO .)
    PROC            reduce using rule 59 (expresion -> ID INCREMENTO .)
    EXEC            reduce using rule 59 (expresion -> ID INCREMENTO .)
    INT             reduce using rule 59 (expresion -> ID INCREMENTO .)
    FLOAT           reduce using rule 59 (expresion -> ID INCREMENTO .)
    CHAR            reduce using rule 59 (expresion -> ID INCREMENTO .)
    STRING          reduce using rule 59 (expresion -> ID INCREMENTO .)
    BOOL            reduce using rule 59 (expresion -> ID INCREMENTO .)
    PARDER          reduce using rule 59 (expresion -> ID INCREMENTO .)
    LLAVE_DER       reduce using rule 59 (expresion -> ID INCREMENTO .)
    CORDER          reduce using rule 59 (expresion -> ID INCREMENTO .)
    DOSPUNTOS       reduce using rule 59 (expresion -> ID INCREMENTO .)
    DEFAULT         reduce using rule 59 (expresion -> ID INCREMENTO .)
    CASE            reduce using rule 59 (expresion -> ID INCREMENTO .)
    COMA            reduce using rule 59 (expresion -> ID INCREMENTO .)


state 63

    (60) expresion -> ID DECREMENTO .

    PTCOMA          reduce using rule 60 (expresion -> ID DECREMENTO .)
    MAS             reduce using rule 60 (expresion -> ID DECREMENTO .)
    MENOS           reduce using rule 60 (expresion -> ID DECREMENTO .)
    POR             reduce using rule 60 (expresion -> ID DECREMENTO .)
    DIVIDIDO        reduce using rule 60 (expresion -> ID DECREMENTO .)
    POTENCIA        reduce using rule 60 (expresion -> ID DECREMENTO .)
    MODULO          reduce using rule 60 (expresion -> ID DECREMENTO .)
    OR_LOGICO       reduce using rule 60 (expresion -> ID DECREMENTO .)
    AND_LOGICO      reduce using rule 60 (expresion -> ID DECREMENTO .)
    XOR_LOGICO      reduce using rule 60 (expresion -> ID DECREMENTO .)
    GE              reduce using rule 60 (expresion -> ID DECREMENTO .)
    LE              reduce using rule 60 (expresion -> ID DECREMENTO .)
    LT              reduce using rule 60 (expresion -> ID DECREMENTO .)
    GT              reduce using rule 60 (expresion -> ID DECREMENTO .)
    EQ              reduce using rule 60 (expresion -> ID DECREMENTO .)
    NE              reduce using rule 60 (expresion -> ID DECREMENTO .)
    $end            reduce using rule 60 (expresion -> ID DECREMENTO .)
    WHILE           reduce using rule 60 (expresion -> ID DECREMENTO .)
    DO              reduce using rule 60 (expresion -> ID DECREMENTO .)
    IF              reduce using rule 60 (expresion -> ID DECREMENTO .)
    ENTERO          reduce using rule 60 (expresion -> ID DECREMENTO .)
    DECIMAL         reduce using rule 60 (expresion -> ID DECREMENTO .)
    FOR             reduce using rule 60 (expresion -> ID DECREMENTO .)
    TRUE            reduce using rule 60 (expresion -> ID DECREMENTO .)
    FALSE           reduce using rule 60 (expresion -> ID DECREMENTO .)
    CARACTER        reduce using rule 60 (expresion -> ID DECREMENTO .)
    CADENA          reduce using rule 60 (expresion -> ID DECREMENTO .)
    ID              reduce using rule 60 (expresion -> ID DECREMENTO .)
    SENO            reduce using rule 60 (expresion -> ID DECREMENTO .)
    COSENO          reduce using rule 60 (expresion -> ID DECREMENTO .)
    INV             reduce using rule 60 (expresion -> ID DECREMENTO .)
    PRINTLN         reduce using rule 60 (expresion -> ID DECREMENTO .)
    NOT_LOGICO      reduce using rule 60 (expresion -> ID DECREMENTO .)
    BREAK           reduce using rule 60 (expresion -> ID DECREMENTO .)
    CONTINUE        reduce using rule 60 (expresion -> ID DECREMENTO .)
    PARIZQ          reduce using rule 60 (expresion -> ID DECREMENTO .)
    SWITCH          reduce using rule 60 (expresion -> ID DECREMENTO .)
    VECTOR          reduce using rule 60 (expresion -> ID DECREMENTO .)
    PROC            reduce using rule 60 (expresion -> ID DECREMENTO .)
    EXEC            reduce using rule 60 (expresion -> ID DECREMENTO .)
    INT             reduce using rule 60 (expresion -> ID DECREMENTO .)
    FLOAT           reduce using rule 60 (expresion -> ID DECREMENTO .)
    CHAR            reduce using rule 60 (expresion -> ID DECREMENTO .)
    STRING          reduce using rule 60 (expresion -> ID DECREMENTO .)
    BOOL            reduce using rule 60 (expresion -> ID DECREMENTO .)
    PARDER          reduce using rule 60 (expresion -> ID DECREMENTO .)
    LLAVE_DER       reduce using rule 60 (expresion -> ID DECREMENTO .)
    CORDER          reduce using rule 60 (expresion -> ID DECREMENTO .)
    DOSPUNTOS       reduce using rule 60 (expresion -> ID DECREMENTO .)
    DEFAULT         reduce using rule 60 (expresion -> ID DECREMENTO .)
    CASE            reduce using rule 60 (expresion -> ID DECREMENTO .)
    COMA            reduce using rule 60 (expresion -> ID DECREMENTO .)


state 64

    (93) expresion -> ID lista_indices .
    (94) expresion -> ID lista_indices . ASIGNACION expresion PTCOMA
    (95) lista_indices -> lista_indices . CORIZQ expresion CORDER

    PTCOMA          reduce using rule 93 (expresion -> ID lista_indices .)
    MAS             reduce using rule 93 (expresion -> ID lista_indices .)
    MENOS           reduce using rule 93 (expresion -> ID lista_indices .)
    POR             reduce using rule 93 (expresion -> ID lista_indices .)
    DIVIDIDO        reduce using rule 93 (expresion -> ID lista_indices .)
    POTENCIA        reduce using rule 93 (expresion -> ID lista_indices .)
    MODULO          reduce using rule 93 (expresion -> ID lista_indices .)
    OR_LOGICO       reduce using rule 93 (expresion -> ID lista_indices .)
    AND_LOGICO      reduce using rule 93 (expresion -> ID lista_indices .)
    XOR_LOGICO      reduce using rule 93 (expresion -> ID lista_indices .)
    GE              reduce using rule 93 (expresion -> ID lista_indices .)
    LE              reduce using rule 93 (expresion -> ID lista_indices .)
    LT              reduce using rule 93 (expresion -> ID lista_indices .)
    GT              reduce using rule 93 (expresion -> ID lista_indices .)
    EQ              reduce using rule 93 (expresion -> ID lista_indices .)
    NE              reduce using rule 93 (expresion -> ID lista_indices .)
    $end            reduce using rule 93 (expresion -> ID lista_indices .)
    WHILE           reduce using rule 93 (expresion -> ID lista_indices .)
    DO              reduce using rule 93 (expresion -> ID lista_indices .)
    IF              reduce using rule 93 (expresion -> ID lista_indices .)
    ENTERO          reduce using rule 93 (expresion -> ID lista_indices .)
    DECIMAL         reduce using rule 93 (expresion -> ID lista_indices .)
    FOR             reduce using rule 93 (expresion -> ID lista_indices .)
    TRUE            reduce using rule 93 (expresion -> ID lista_indices .)
    FALSE           reduce using rule 93 (expresion -> ID lista_indices .)
    CARACTER        reduce using rule 93 (expresion -> ID lista_indices .)
    CADENA          reduce using rule 93 (expresion -> ID lista_indices .)
    ID              reduce using rule 93 (expresion -> ID lista_indices .)
    SENO            reduce using rule 93 (expresion -> ID lista_indices .)
    COSENO          reduce using rule 93 (expresion -> ID lista_indices .)
    INV             reduce using rule 93 (expresion -> ID lista_indices .)
    PRINTLN         reduce using rule 93 (expresion -> ID lista_indices .)
    NOT_LOGICO      reduce using rule 93 (expresion -> ID lista_indices .)
    BREAK           reduce using rule 93 (expresion -> ID lista_indices .)
    CONTINUE        reduce using rule 93 (expresion -> ID lista_indices .)
    PARIZQ          reduce using rule 93 (expresion -> ID lista_indices .)
    SWITCH          reduce using rule 93 (expresion -> ID lista_indices .)
    VECTOR          reduce using rule 93 (expresion -> ID lista_indices .)
    PROC            reduce using rule 93 (expresion -> ID lista_indices .)
    EXEC            reduce using rule 93 (expresion -> ID lista_indices .)
    INT             reduce using rule 93 (expresion -> ID lista_indices .)
    FLOAT           reduce using rule 93 (expresion -> ID lista_indices .)
    CHAR            reduce using rule 93 (expresion -> ID lista_indices .)
    STRING          reduce using rule 93 (expresion -> ID lista_indices .)
    BOOL            reduce using rule 93 (expresion -> ID lista_indices .)
    PARDER          reduce using rule 93 (expresion -> ID lista_indices .)
    LLAVE_DER       reduce using rule 93 (expresion -> ID lista_indices .)
    CORDER          reduce using rule 93 (expresion -> ID lista_indices .)
    DOSPUNTOS       reduce using rule 93 (expresion -> ID lista_indices .)
    DEFAULT         reduce using rule 93 (expresion -> ID lista_indices .)
    CASE            reduce using rule 93 (expresion -> ID lista_indices .)
    COMA            reduce using rule 93 (expresion -> ID lista_indices .)
    ASIGNACION      shift and go to state 105
    CORIZQ          shift and go to state 106


state 65

    (96) lista_indices -> CORIZQ . expresion CORDER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 107
    tipo                           shift and go to state 13

state 66

    (23) expresion -> MENOS expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 23 (expresion -> MENOS expresion .)
    MAS             reduce using rule 23 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 23 (expresion -> MENOS expresion .)
    POR             reduce using rule 23 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 23 (expresion -> MENOS expresion .)
    POTENCIA        reduce using rule 23 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 23 (expresion -> MENOS expresion .)
    OR_LOGICO       reduce using rule 23 (expresion -> MENOS expresion .)
    AND_LOGICO      reduce using rule 23 (expresion -> MENOS expresion .)
    XOR_LOGICO      reduce using rule 23 (expresion -> MENOS expresion .)
    GE              reduce using rule 23 (expresion -> MENOS expresion .)
    LE              reduce using rule 23 (expresion -> MENOS expresion .)
    LT              reduce using rule 23 (expresion -> MENOS expresion .)
    GT              reduce using rule 23 (expresion -> MENOS expresion .)
    EQ              reduce using rule 23 (expresion -> MENOS expresion .)
    NE              reduce using rule 23 (expresion -> MENOS expresion .)
    $end            reduce using rule 23 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 23 (expresion -> MENOS expresion .)
    DO              reduce using rule 23 (expresion -> MENOS expresion .)
    IF              reduce using rule 23 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 23 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 23 (expresion -> MENOS expresion .)
    FOR             reduce using rule 23 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 23 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 23 (expresion -> MENOS expresion .)
    CARACTER        reduce using rule 23 (expresion -> MENOS expresion .)
    CADENA          reduce using rule 23 (expresion -> MENOS expresion .)
    ID              reduce using rule 23 (expresion -> MENOS expresion .)
    SENO            reduce using rule 23 (expresion -> MENOS expresion .)
    COSENO          reduce using rule 23 (expresion -> MENOS expresion .)
    INV             reduce using rule 23 (expresion -> MENOS expresion .)
    PRINTLN         reduce using rule 23 (expresion -> MENOS expresion .)
    NOT_LOGICO      reduce using rule 23 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 23 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 23 (expresion -> MENOS expresion .)
    PARIZQ          reduce using rule 23 (expresion -> MENOS expresion .)
    SWITCH          reduce using rule 23 (expresion -> MENOS expresion .)
    VECTOR          reduce using rule 23 (expresion -> MENOS expresion .)
    PROC            reduce using rule 23 (expresion -> MENOS expresion .)
    EXEC            reduce using rule 23 (expresion -> MENOS expresion .)
    INT             reduce using rule 23 (expresion -> MENOS expresion .)
    FLOAT           reduce using rule 23 (expresion -> MENOS expresion .)
    CHAR            reduce using rule 23 (expresion -> MENOS expresion .)
    STRING          reduce using rule 23 (expresion -> MENOS expresion .)
    BOOL            reduce using rule 23 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 23 (expresion -> MENOS expresion .)
    LLAVE_DER       reduce using rule 23 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 23 (expresion -> MENOS expresion .)
    DOSPUNTOS       reduce using rule 23 (expresion -> MENOS expresion .)
    DEFAULT         reduce using rule 23 (expresion -> MENOS expresion .)
    CASE            reduce using rule 23 (expresion -> MENOS expresion .)
    COMA            reduce using rule 23 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! POR             [ shift and go to state 42 ]
  ! DIVIDIDO        [ shift and go to state 43 ]
  ! POTENCIA        [ shift and go to state 44 ]
  ! MODULO          [ shift and go to state 45 ]
  ! OR_LOGICO       [ shift and go to state 46 ]
  ! AND_LOGICO      [ shift and go to state 47 ]
  ! XOR_LOGICO      [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! LT              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 67

    (29) expresion -> SENO PARIZQ . expresion PARDER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 108
    tipo                           shift and go to state 13

state 68

    (30) expresion -> COSENO PARIZQ . expresion PARDER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 109
    tipo                           shift and go to state 13

state 69

    (31) expresion -> INV PARIZQ . expresion PARDER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 110
    tipo                           shift and go to state 13

state 70

    (40) expresion -> PRINTLN PARIZQ . expresion PARDER PTCOMA
    (41) expresion -> PRINTLN PARIZQ . expresion PARDER
    (42) expresion -> PRINTLN PARIZQ . oraciones PARDER PTCOMA
    (43) expresion -> PRINTLN PARIZQ . oraciones PARDER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (44) oraciones -> . oraciones ID
    (45) oraciones -> . ID
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 113
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 111
    oraciones                      shift and go to state 112
    tipo                           shift and go to state 13

state 71

    (49) expresion -> NOT_LOGICO expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    $end            reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    WHILE           reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    DO              reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    IF              reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    ENTERO          reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    DECIMAL         reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    FOR             reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    TRUE            reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    FALSE           reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    CARACTER        reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    CADENA          reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    ID              reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    SENO            reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    COSENO          reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    INV             reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    PRINTLN         reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    NOT_LOGICO      reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    BREAK           reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    CONTINUE        reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    PARIZQ          reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    SWITCH          reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    VECTOR          reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    PROC            reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    EXEC            reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    INT             reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    FLOAT           reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    CHAR            reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    STRING          reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    BOOL            reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    PARDER          reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    LLAVE_DER       reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    CORDER          reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    DOSPUNTOS       reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    DEFAULT         reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    CASE            reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    COMA            reduce using rule 49 (expresion -> NOT_LOGICO expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54

  ! MAS             [ reduce using rule 49 (expresion -> NOT_LOGICO expresion .) ]
  ! MENOS           [ reduce using rule 49 (expresion -> NOT_LOGICO expresion .) ]
  ! POR             [ reduce using rule 49 (expresion -> NOT_LOGICO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 49 (expresion -> NOT_LOGICO expresion .) ]
  ! POTENCIA        [ reduce using rule 49 (expresion -> NOT_LOGICO expresion .) ]
  ! MODULO          [ reduce using rule 49 (expresion -> NOT_LOGICO expresion .) ]
  ! OR_LOGICO       [ reduce using rule 49 (expresion -> NOT_LOGICO expresion .) ]
  ! AND_LOGICO      [ reduce using rule 49 (expresion -> NOT_LOGICO expresion .) ]
  ! XOR_LOGICO      [ reduce using rule 49 (expresion -> NOT_LOGICO expresion .) ]
  ! GE              [ reduce using rule 49 (expresion -> NOT_LOGICO expresion .) ]
  ! LE              [ reduce using rule 49 (expresion -> NOT_LOGICO expresion .) ]
  ! LT              [ reduce using rule 49 (expresion -> NOT_LOGICO expresion .) ]
  ! GT              [ reduce using rule 49 (expresion -> NOT_LOGICO expresion .) ]
  ! EQ              [ reduce using rule 49 (expresion -> NOT_LOGICO expresion .) ]
  ! NE              [ reduce using rule 49 (expresion -> NOT_LOGICO expresion .) ]


state 72

    (51) expresion -> BREAK PTCOMA .

    PTCOMA          reduce using rule 51 (expresion -> BREAK PTCOMA .)
    MAS             reduce using rule 51 (expresion -> BREAK PTCOMA .)
    MENOS           reduce using rule 51 (expresion -> BREAK PTCOMA .)
    POR             reduce using rule 51 (expresion -> BREAK PTCOMA .)
    DIVIDIDO        reduce using rule 51 (expresion -> BREAK PTCOMA .)
    POTENCIA        reduce using rule 51 (expresion -> BREAK PTCOMA .)
    MODULO          reduce using rule 51 (expresion -> BREAK PTCOMA .)
    OR_LOGICO       reduce using rule 51 (expresion -> BREAK PTCOMA .)
    AND_LOGICO      reduce using rule 51 (expresion -> BREAK PTCOMA .)
    XOR_LOGICO      reduce using rule 51 (expresion -> BREAK PTCOMA .)
    GE              reduce using rule 51 (expresion -> BREAK PTCOMA .)
    LE              reduce using rule 51 (expresion -> BREAK PTCOMA .)
    LT              reduce using rule 51 (expresion -> BREAK PTCOMA .)
    GT              reduce using rule 51 (expresion -> BREAK PTCOMA .)
    EQ              reduce using rule 51 (expresion -> BREAK PTCOMA .)
    NE              reduce using rule 51 (expresion -> BREAK PTCOMA .)
    $end            reduce using rule 51 (expresion -> BREAK PTCOMA .)
    WHILE           reduce using rule 51 (expresion -> BREAK PTCOMA .)
    DO              reduce using rule 51 (expresion -> BREAK PTCOMA .)
    IF              reduce using rule 51 (expresion -> BREAK PTCOMA .)
    ENTERO          reduce using rule 51 (expresion -> BREAK PTCOMA .)
    DECIMAL         reduce using rule 51 (expresion -> BREAK PTCOMA .)
    FOR             reduce using rule 51 (expresion -> BREAK PTCOMA .)
    TRUE            reduce using rule 51 (expresion -> BREAK PTCOMA .)
    FALSE           reduce using rule 51 (expresion -> BREAK PTCOMA .)
    CARACTER        reduce using rule 51 (expresion -> BREAK PTCOMA .)
    CADENA          reduce using rule 51 (expresion -> BREAK PTCOMA .)
    ID              reduce using rule 51 (expresion -> BREAK PTCOMA .)
    SENO            reduce using rule 51 (expresion -> BREAK PTCOMA .)
    COSENO          reduce using rule 51 (expresion -> BREAK PTCOMA .)
    INV             reduce using rule 51 (expresion -> BREAK PTCOMA .)
    PRINTLN         reduce using rule 51 (expresion -> BREAK PTCOMA .)
    NOT_LOGICO      reduce using rule 51 (expresion -> BREAK PTCOMA .)
    BREAK           reduce using rule 51 (expresion -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 51 (expresion -> BREAK PTCOMA .)
    PARIZQ          reduce using rule 51 (expresion -> BREAK PTCOMA .)
    SWITCH          reduce using rule 51 (expresion -> BREAK PTCOMA .)
    VECTOR          reduce using rule 51 (expresion -> BREAK PTCOMA .)
    PROC            reduce using rule 51 (expresion -> BREAK PTCOMA .)
    EXEC            reduce using rule 51 (expresion -> BREAK PTCOMA .)
    INT             reduce using rule 51 (expresion -> BREAK PTCOMA .)
    FLOAT           reduce using rule 51 (expresion -> BREAK PTCOMA .)
    CHAR            reduce using rule 51 (expresion -> BREAK PTCOMA .)
    STRING          reduce using rule 51 (expresion -> BREAK PTCOMA .)
    BOOL            reduce using rule 51 (expresion -> BREAK PTCOMA .)
    PARDER          reduce using rule 51 (expresion -> BREAK PTCOMA .)
    LLAVE_DER       reduce using rule 51 (expresion -> BREAK PTCOMA .)
    CORDER          reduce using rule 51 (expresion -> BREAK PTCOMA .)
    DOSPUNTOS       reduce using rule 51 (expresion -> BREAK PTCOMA .)
    DEFAULT         reduce using rule 51 (expresion -> BREAK PTCOMA .)
    CASE            reduce using rule 51 (expresion -> BREAK PTCOMA .)
    COMA            reduce using rule 51 (expresion -> BREAK PTCOMA .)


state 73

    (52) expresion -> CONTINUE PTCOMA .

    PTCOMA          reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    MAS             reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    MENOS           reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    POR             reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    DIVIDIDO        reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    POTENCIA        reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    MODULO          reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    OR_LOGICO       reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    AND_LOGICO      reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    XOR_LOGICO      reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    GE              reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    LE              reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    LT              reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    GT              reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    EQ              reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    NE              reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    $end            reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    DO              reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    IF              reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    ENTERO          reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    DECIMAL         reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    FOR             reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    TRUE            reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    FALSE           reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    CARACTER        reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    CADENA          reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    ID              reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    SENO            reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    COSENO          reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    INV             reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    PRINTLN         reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    NOT_LOGICO      reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    PARIZQ          reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    SWITCH          reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    VECTOR          reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    PROC            reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    EXEC            reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    INT             reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    FLOAT           reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    CHAR            reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    STRING          reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    BOOL            reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    PARDER          reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    LLAVE_DER       reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    CORDER          reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    DOSPUNTOS       reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    DEFAULT         reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    CASE            reduce using rule 52 (expresion -> CONTINUE PTCOMA .)
    COMA            reduce using rule 52 (expresion -> CONTINUE PTCOMA .)


state 74

    (64) expresion -> SWITCH PARIZQ . expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 114
    tipo                           shift and go to state 13

state 75

    (79) expresion -> VECTOR CORIZQ . tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> VECTOR CORIZQ . tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> VECTOR CORIZQ . tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> VECTOR CORIZQ . tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> VECTOR CORIZQ . tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    tipo                           shift and go to state 115

state 76

    (98) expresion -> PROC ID . PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER

    PARIZQ          shift and go to state 116


state 77

    (103) expresion -> EXEC ID . PARIZQ lista_argumentos_exec_opt PARDER PTCOMA

    PARIZQ          shift and go to state 117


state 78

    (7) lista_expresiones -> lista_expresiones expresion PTCOMA .

    WHILE           reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    DO              reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    IF              reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    ENTERO          reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    DECIMAL         reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    FOR             reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    TRUE            reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    FALSE           reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    CARACTER        reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    CADENA          reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    ID              reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    MENOS           reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    SENO            reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    COSENO          reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    INV             reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    PRINTLN         reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    NOT_LOGICO      reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    BREAK           reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    CONTINUE        reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    PARIZQ          reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    SWITCH          reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    VECTOR          reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    PROC            reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    EXEC            reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    INT             reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    FLOAT           reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    CHAR            reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    STRING          reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    BOOL            reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    $end            reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    LLAVE_DER       reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    DEFAULT         reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    CASE            reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)


state 79

    (24) expresion -> expresion MAS expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 24 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 24 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 24 (expresion -> expresion MAS expresion .)
    OR_LOGICO       reduce using rule 24 (expresion -> expresion MAS expresion .)
    AND_LOGICO      reduce using rule 24 (expresion -> expresion MAS expresion .)
    XOR_LOGICO      reduce using rule 24 (expresion -> expresion MAS expresion .)
    GE              reduce using rule 24 (expresion -> expresion MAS expresion .)
    LE              reduce using rule 24 (expresion -> expresion MAS expresion .)
    LT              reduce using rule 24 (expresion -> expresion MAS expresion .)
    GT              reduce using rule 24 (expresion -> expresion MAS expresion .)
    EQ              reduce using rule 24 (expresion -> expresion MAS expresion .)
    NE              reduce using rule 24 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 24 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 24 (expresion -> expresion MAS expresion .)
    DO              reduce using rule 24 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 24 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 24 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 24 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 24 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 24 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 24 (expresion -> expresion MAS expresion .)
    CARACTER        reduce using rule 24 (expresion -> expresion MAS expresion .)
    CADENA          reduce using rule 24 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 24 (expresion -> expresion MAS expresion .)
    SENO            reduce using rule 24 (expresion -> expresion MAS expresion .)
    COSENO          reduce using rule 24 (expresion -> expresion MAS expresion .)
    INV             reduce using rule 24 (expresion -> expresion MAS expresion .)
    PRINTLN         reduce using rule 24 (expresion -> expresion MAS expresion .)
    NOT_LOGICO      reduce using rule 24 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 24 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 24 (expresion -> expresion MAS expresion .)
    PARIZQ          reduce using rule 24 (expresion -> expresion MAS expresion .)
    SWITCH          reduce using rule 24 (expresion -> expresion MAS expresion .)
    VECTOR          reduce using rule 24 (expresion -> expresion MAS expresion .)
    PROC            reduce using rule 24 (expresion -> expresion MAS expresion .)
    EXEC            reduce using rule 24 (expresion -> expresion MAS expresion .)
    INT             reduce using rule 24 (expresion -> expresion MAS expresion .)
    FLOAT           reduce using rule 24 (expresion -> expresion MAS expresion .)
    CHAR            reduce using rule 24 (expresion -> expresion MAS expresion .)
    STRING          reduce using rule 24 (expresion -> expresion MAS expresion .)
    BOOL            reduce using rule 24 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 24 (expresion -> expresion MAS expresion .)
    LLAVE_DER       reduce using rule 24 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 24 (expresion -> expresion MAS expresion .)
    DOSPUNTOS       reduce using rule 24 (expresion -> expresion MAS expresion .)
    DEFAULT         reduce using rule 24 (expresion -> expresion MAS expresion .)
    CASE            reduce using rule 24 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 24 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45

  ! POR             [ reduce using rule 24 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 24 (expresion -> expresion MAS expresion .) ]
  ! POTENCIA        [ reduce using rule 24 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 24 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! OR_LOGICO       [ shift and go to state 46 ]
  ! AND_LOGICO      [ shift and go to state 47 ]
  ! XOR_LOGICO      [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! LT              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 80

    (25) expresion -> expresion MENOS expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 25 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 25 (expresion -> expresion MENOS expresion .)
    OR_LOGICO       reduce using rule 25 (expresion -> expresion MENOS expresion .)
    AND_LOGICO      reduce using rule 25 (expresion -> expresion MENOS expresion .)
    XOR_LOGICO      reduce using rule 25 (expresion -> expresion MENOS expresion .)
    GE              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    LE              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    LT              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    GT              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    EQ              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    NE              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 25 (expresion -> expresion MENOS expresion .)
    DO              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 25 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 25 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 25 (expresion -> expresion MENOS expresion .)
    CARACTER        reduce using rule 25 (expresion -> expresion MENOS expresion .)
    CADENA          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    SENO            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    COSENO          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    INV             reduce using rule 25 (expresion -> expresion MENOS expresion .)
    PRINTLN         reduce using rule 25 (expresion -> expresion MENOS expresion .)
    NOT_LOGICO      reduce using rule 25 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 25 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 25 (expresion -> expresion MENOS expresion .)
    PARIZQ          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    SWITCH          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    VECTOR          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    PROC            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    EXEC            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    INT             reduce using rule 25 (expresion -> expresion MENOS expresion .)
    FLOAT           reduce using rule 25 (expresion -> expresion MENOS expresion .)
    CHAR            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    STRING          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    BOOL            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    LLAVE_DER       reduce using rule 25 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    DOSPUNTOS       reduce using rule 25 (expresion -> expresion MENOS expresion .)
    DEFAULT         reduce using rule 25 (expresion -> expresion MENOS expresion .)
    CASE            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45

  ! POR             [ reduce using rule 25 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 25 (expresion -> expresion MENOS expresion .) ]
  ! POTENCIA        [ reduce using rule 25 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 25 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! OR_LOGICO       [ shift and go to state 46 ]
  ! AND_LOGICO      [ shift and go to state 47 ]
  ! XOR_LOGICO      [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! LT              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 81

    (26) expresion -> expresion POR expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 26 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 26 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 26 (expresion -> expresion POR expresion .)
    POR             reduce using rule 26 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 26 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 26 (expresion -> expresion POR expresion .)
    OR_LOGICO       reduce using rule 26 (expresion -> expresion POR expresion .)
    AND_LOGICO      reduce using rule 26 (expresion -> expresion POR expresion .)
    XOR_LOGICO      reduce using rule 26 (expresion -> expresion POR expresion .)
    GE              reduce using rule 26 (expresion -> expresion POR expresion .)
    LE              reduce using rule 26 (expresion -> expresion POR expresion .)
    LT              reduce using rule 26 (expresion -> expresion POR expresion .)
    GT              reduce using rule 26 (expresion -> expresion POR expresion .)
    EQ              reduce using rule 26 (expresion -> expresion POR expresion .)
    NE              reduce using rule 26 (expresion -> expresion POR expresion .)
    $end            reduce using rule 26 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 26 (expresion -> expresion POR expresion .)
    DO              reduce using rule 26 (expresion -> expresion POR expresion .)
    IF              reduce using rule 26 (expresion -> expresion POR expresion .)
    ENTERO          reduce using rule 26 (expresion -> expresion POR expresion .)
    DECIMAL         reduce using rule 26 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 26 (expresion -> expresion POR expresion .)
    TRUE            reduce using rule 26 (expresion -> expresion POR expresion .)
    FALSE           reduce using rule 26 (expresion -> expresion POR expresion .)
    CARACTER        reduce using rule 26 (expresion -> expresion POR expresion .)
    CADENA          reduce using rule 26 (expresion -> expresion POR expresion .)
    ID              reduce using rule 26 (expresion -> expresion POR expresion .)
    SENO            reduce using rule 26 (expresion -> expresion POR expresion .)
    COSENO          reduce using rule 26 (expresion -> expresion POR expresion .)
    INV             reduce using rule 26 (expresion -> expresion POR expresion .)
    PRINTLN         reduce using rule 26 (expresion -> expresion POR expresion .)
    NOT_LOGICO      reduce using rule 26 (expresion -> expresion POR expresion .)
    BREAK           reduce using rule 26 (expresion -> expresion POR expresion .)
    CONTINUE        reduce using rule 26 (expresion -> expresion POR expresion .)
    PARIZQ          reduce using rule 26 (expresion -> expresion POR expresion .)
    SWITCH          reduce using rule 26 (expresion -> expresion POR expresion .)
    VECTOR          reduce using rule 26 (expresion -> expresion POR expresion .)
    PROC            reduce using rule 26 (expresion -> expresion POR expresion .)
    EXEC            reduce using rule 26 (expresion -> expresion POR expresion .)
    INT             reduce using rule 26 (expresion -> expresion POR expresion .)
    FLOAT           reduce using rule 26 (expresion -> expresion POR expresion .)
    CHAR            reduce using rule 26 (expresion -> expresion POR expresion .)
    STRING          reduce using rule 26 (expresion -> expresion POR expresion .)
    BOOL            reduce using rule 26 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 26 (expresion -> expresion POR expresion .)
    LLAVE_DER       reduce using rule 26 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 26 (expresion -> expresion POR expresion .)
    DOSPUNTOS       reduce using rule 26 (expresion -> expresion POR expresion .)
    DEFAULT         reduce using rule 26 (expresion -> expresion POR expresion .)
    CASE            reduce using rule 26 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 26 (expresion -> expresion POR expresion .)
    POTENCIA        shift and go to state 44

  ! POTENCIA        [ reduce using rule 26 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! POR             [ shift and go to state 42 ]
  ! DIVIDIDO        [ shift and go to state 43 ]
  ! MODULO          [ shift and go to state 45 ]
  ! OR_LOGICO       [ shift and go to state 46 ]
  ! AND_LOGICO      [ shift and go to state 47 ]
  ! XOR_LOGICO      [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! LT              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 82

    (27) expresion -> expresion DIVIDIDO expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    OR_LOGICO       reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    AND_LOGICO      reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    XOR_LOGICO      reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    GE              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    LE              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    LT              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    GT              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    EQ              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    NE              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    $end            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    WHILE           reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    DO              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    IF              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    ENTERO          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    DECIMAL         reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    FOR             reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    TRUE            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    FALSE           reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    CARACTER        reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    CADENA          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    ID              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    SENO            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    COSENO          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    INV             reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    PRINTLN         reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    NOT_LOGICO      reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    BREAK           reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    CONTINUE        reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    PARIZQ          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    SWITCH          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    VECTOR          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    PROC            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    EXEC            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    INT             reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    FLOAT           reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    CHAR            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    STRING          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    BOOL            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    LLAVE_DER       reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    CORDER          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    DOSPUNTOS       reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    DEFAULT         reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    CASE            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    POTENCIA        shift and go to state 44

  ! POTENCIA        [ reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! POR             [ shift and go to state 42 ]
  ! DIVIDIDO        [ shift and go to state 43 ]
  ! MODULO          [ shift and go to state 45 ]
  ! OR_LOGICO       [ shift and go to state 46 ]
  ! AND_LOGICO      [ shift and go to state 47 ]
  ! XOR_LOGICO      [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! LT              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 83

    (28) expresion -> expresion POTENCIA expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    MAS             reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    MENOS           reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    POR             reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    DIVIDIDO        reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    MODULO          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    OR_LOGICO       reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    AND_LOGICO      reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    XOR_LOGICO      reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    GE              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    LE              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    LT              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    GT              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    EQ              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    NE              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    $end            reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    WHILE           reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    DO              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    IF              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    ENTERO          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    DECIMAL         reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    FOR             reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    TRUE            reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    FALSE           reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    CARACTER        reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    CADENA          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    ID              reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    SENO            reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    COSENO          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    INV             reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    PRINTLN         reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    NOT_LOGICO      reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    BREAK           reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    CONTINUE        reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    PARIZQ          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    SWITCH          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    VECTOR          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    PROC            reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    EXEC            reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    INT             reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    FLOAT           reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    CHAR            reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    STRING          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    BOOL            reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    PARDER          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    LLAVE_DER       reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    CORDER          reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    DOSPUNTOS       reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    DEFAULT         reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    CASE            reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    COMA            reduce using rule 28 (expresion -> expresion POTENCIA expresion .)
    POTENCIA        shift and go to state 44

  ! POTENCIA        [ reduce using rule 28 (expresion -> expresion POTENCIA expresion .) ]
  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! POR             [ shift and go to state 42 ]
  ! DIVIDIDO        [ shift and go to state 43 ]
  ! MODULO          [ shift and go to state 45 ]
  ! OR_LOGICO       [ shift and go to state 46 ]
  ! AND_LOGICO      [ shift and go to state 47 ]
  ! XOR_LOGICO      [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! LT              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 84

    (32) expresion -> expresion MODULO expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 32 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 32 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 32 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 32 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 32 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 32 (expresion -> expresion MODULO expresion .)
    OR_LOGICO       reduce using rule 32 (expresion -> expresion MODULO expresion .)
    AND_LOGICO      reduce using rule 32 (expresion -> expresion MODULO expresion .)
    XOR_LOGICO      reduce using rule 32 (expresion -> expresion MODULO expresion .)
    GE              reduce using rule 32 (expresion -> expresion MODULO expresion .)
    LE              reduce using rule 32 (expresion -> expresion MODULO expresion .)
    LT              reduce using rule 32 (expresion -> expresion MODULO expresion .)
    GT              reduce using rule 32 (expresion -> expresion MODULO expresion .)
    EQ              reduce using rule 32 (expresion -> expresion MODULO expresion .)
    NE              reduce using rule 32 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 32 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 32 (expresion -> expresion MODULO expresion .)
    DO              reduce using rule 32 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 32 (expresion -> expresion MODULO expresion .)
    ENTERO          reduce using rule 32 (expresion -> expresion MODULO expresion .)
    DECIMAL         reduce using rule 32 (expresion -> expresion MODULO expresion .)
    FOR             reduce using rule 32 (expresion -> expresion MODULO expresion .)
    TRUE            reduce using rule 32 (expresion -> expresion MODULO expresion .)
    FALSE           reduce using rule 32 (expresion -> expresion MODULO expresion .)
    CARACTER        reduce using rule 32 (expresion -> expresion MODULO expresion .)
    CADENA          reduce using rule 32 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 32 (expresion -> expresion MODULO expresion .)
    SENO            reduce using rule 32 (expresion -> expresion MODULO expresion .)
    COSENO          reduce using rule 32 (expresion -> expresion MODULO expresion .)
    INV             reduce using rule 32 (expresion -> expresion MODULO expresion .)
    PRINTLN         reduce using rule 32 (expresion -> expresion MODULO expresion .)
    NOT_LOGICO      reduce using rule 32 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 32 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 32 (expresion -> expresion MODULO expresion .)
    PARIZQ          reduce using rule 32 (expresion -> expresion MODULO expresion .)
    SWITCH          reduce using rule 32 (expresion -> expresion MODULO expresion .)
    VECTOR          reduce using rule 32 (expresion -> expresion MODULO expresion .)
    PROC            reduce using rule 32 (expresion -> expresion MODULO expresion .)
    EXEC            reduce using rule 32 (expresion -> expresion MODULO expresion .)
    INT             reduce using rule 32 (expresion -> expresion MODULO expresion .)
    FLOAT           reduce using rule 32 (expresion -> expresion MODULO expresion .)
    CHAR            reduce using rule 32 (expresion -> expresion MODULO expresion .)
    STRING          reduce using rule 32 (expresion -> expresion MODULO expresion .)
    BOOL            reduce using rule 32 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 32 (expresion -> expresion MODULO expresion .)
    LLAVE_DER       reduce using rule 32 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 32 (expresion -> expresion MODULO expresion .)
    DOSPUNTOS       reduce using rule 32 (expresion -> expresion MODULO expresion .)
    DEFAULT         reduce using rule 32 (expresion -> expresion MODULO expresion .)
    CASE            reduce using rule 32 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 32 (expresion -> expresion MODULO expresion .)
    POTENCIA        shift and go to state 44

  ! POTENCIA        [ reduce using rule 32 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! POR             [ shift and go to state 42 ]
  ! DIVIDIDO        [ shift and go to state 43 ]
  ! MODULO          [ shift and go to state 45 ]
  ! OR_LOGICO       [ shift and go to state 46 ]
  ! AND_LOGICO      [ shift and go to state 47 ]
  ! XOR_LOGICO      [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! LT              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 85

    (47) expresion -> expresion OR_LOGICO expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    OR_LOGICO       reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    $end            reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    WHILE           reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    DO              reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    IF              reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    ENTERO          reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    DECIMAL         reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    FOR             reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    TRUE            reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    FALSE           reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    CARACTER        reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    CADENA          reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    ID              reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    SENO            reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    COSENO          reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    INV             reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    PRINTLN         reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    NOT_LOGICO      reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    BREAK           reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    CONTINUE        reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    PARIZQ          reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    SWITCH          reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    VECTOR          reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    PROC            reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    EXEC            reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    INT             reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    FLOAT           reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    CHAR            reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    STRING          reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    BOOL            reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    PARDER          reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    LLAVE_DER       reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    CORDER          reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    DOSPUNTOS       reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    DEFAULT         reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    CASE            reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    COMA            reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54

  ! MAS             [ reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .) ]
  ! MENOS           [ reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .) ]
  ! POR             [ reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .) ]
  ! POTENCIA        [ reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .) ]
  ! MODULO          [ reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .) ]
  ! AND_LOGICO      [ reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .) ]
  ! XOR_LOGICO      [ reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .) ]
  ! GE              [ reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .) ]
  ! LE              [ reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .) ]
  ! LT              [ reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .) ]
  ! GT              [ reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .) ]
  ! EQ              [ reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .) ]
  ! NE              [ reduce using rule 47 (expresion -> expresion OR_LOGICO expresion .) ]
  ! OR_LOGICO       [ shift and go to state 46 ]


state 86

    (48) expresion -> expresion AND_LOGICO expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    OR_LOGICO       reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    AND_LOGICO      reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    $end            reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    WHILE           reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    DO              reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    IF              reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    ENTERO          reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    DECIMAL         reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    FOR             reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    TRUE            reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    FALSE           reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    CARACTER        reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    CADENA          reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    ID              reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    SENO            reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    COSENO          reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    INV             reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    PRINTLN         reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    NOT_LOGICO      reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    BREAK           reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    CONTINUE        reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    PARIZQ          reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    SWITCH          reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    VECTOR          reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    PROC            reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    EXEC            reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    INT             reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    FLOAT           reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    CHAR            reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    STRING          reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    BOOL            reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    PARDER          reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    LLAVE_DER       reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    CORDER          reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    DOSPUNTOS       reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    DEFAULT         reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    CASE            reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    COMA            reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54

  ! MAS             [ reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .) ]
  ! MENOS           [ reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .) ]
  ! POR             [ reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .) ]
  ! POTENCIA        [ reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .) ]
  ! MODULO          [ reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .) ]
  ! XOR_LOGICO      [ reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .) ]
  ! GE              [ reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .) ]
  ! LE              [ reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .) ]
  ! LT              [ reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .) ]
  ! GT              [ reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .) ]
  ! EQ              [ reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .) ]
  ! NE              [ reduce using rule 48 (expresion -> expresion AND_LOGICO expresion .) ]
  ! OR_LOGICO       [ shift and go to state 46 ]
  ! AND_LOGICO      [ shift and go to state 47 ]


state 87

    (50) expresion -> expresion XOR_LOGICO expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    OR_LOGICO       reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    AND_LOGICO      reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    XOR_LOGICO      reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    $end            reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    WHILE           reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    DO              reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    IF              reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    ENTERO          reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    DECIMAL         reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    FOR             reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    TRUE            reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    FALSE           reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    CARACTER        reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    CADENA          reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    ID              reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    SENO            reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    COSENO          reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    INV             reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    PRINTLN         reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    NOT_LOGICO      reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    BREAK           reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    CONTINUE        reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    PARIZQ          reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    SWITCH          reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    VECTOR          reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    PROC            reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    EXEC            reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    INT             reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    FLOAT           reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    CHAR            reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    STRING          reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    BOOL            reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    PARDER          reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    LLAVE_DER       reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    CORDER          reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    DOSPUNTOS       reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    DEFAULT         reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    CASE            reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    COMA            reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54

  ! MAS             [ reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! MENOS           [ reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! POR             [ reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! POTENCIA        [ reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! MODULO          [ reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! GE              [ reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! LE              [ reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! LT              [ reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! GT              [ reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! EQ              [ reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! NE              [ reduce using rule 50 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! OR_LOGICO       [ shift and go to state 46 ]
  ! AND_LOGICO      [ shift and go to state 47 ]
  ! XOR_LOGICO      [ shift and go to state 48 ]


state 88

    (53) expresion -> expresion GE expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 53 (expresion -> expresion GE expresion .)
    OR_LOGICO       reduce using rule 53 (expresion -> expresion GE expresion .)
    AND_LOGICO      reduce using rule 53 (expresion -> expresion GE expresion .)
    XOR_LOGICO      reduce using rule 53 (expresion -> expresion GE expresion .)
    GE              reduce using rule 53 (expresion -> expresion GE expresion .)
    LE              reduce using rule 53 (expresion -> expresion GE expresion .)
    LT              reduce using rule 53 (expresion -> expresion GE expresion .)
    GT              reduce using rule 53 (expresion -> expresion GE expresion .)
    EQ              reduce using rule 53 (expresion -> expresion GE expresion .)
    NE              reduce using rule 53 (expresion -> expresion GE expresion .)
    $end            reduce using rule 53 (expresion -> expresion GE expresion .)
    WHILE           reduce using rule 53 (expresion -> expresion GE expresion .)
    DO              reduce using rule 53 (expresion -> expresion GE expresion .)
    IF              reduce using rule 53 (expresion -> expresion GE expresion .)
    ENTERO          reduce using rule 53 (expresion -> expresion GE expresion .)
    DECIMAL         reduce using rule 53 (expresion -> expresion GE expresion .)
    FOR             reduce using rule 53 (expresion -> expresion GE expresion .)
    TRUE            reduce using rule 53 (expresion -> expresion GE expresion .)
    FALSE           reduce using rule 53 (expresion -> expresion GE expresion .)
    CARACTER        reduce using rule 53 (expresion -> expresion GE expresion .)
    CADENA          reduce using rule 53 (expresion -> expresion GE expresion .)
    ID              reduce using rule 53 (expresion -> expresion GE expresion .)
    SENO            reduce using rule 53 (expresion -> expresion GE expresion .)
    COSENO          reduce using rule 53 (expresion -> expresion GE expresion .)
    INV             reduce using rule 53 (expresion -> expresion GE expresion .)
    PRINTLN         reduce using rule 53 (expresion -> expresion GE expresion .)
    NOT_LOGICO      reduce using rule 53 (expresion -> expresion GE expresion .)
    BREAK           reduce using rule 53 (expresion -> expresion GE expresion .)
    CONTINUE        reduce using rule 53 (expresion -> expresion GE expresion .)
    PARIZQ          reduce using rule 53 (expresion -> expresion GE expresion .)
    SWITCH          reduce using rule 53 (expresion -> expresion GE expresion .)
    VECTOR          reduce using rule 53 (expresion -> expresion GE expresion .)
    PROC            reduce using rule 53 (expresion -> expresion GE expresion .)
    EXEC            reduce using rule 53 (expresion -> expresion GE expresion .)
    INT             reduce using rule 53 (expresion -> expresion GE expresion .)
    FLOAT           reduce using rule 53 (expresion -> expresion GE expresion .)
    CHAR            reduce using rule 53 (expresion -> expresion GE expresion .)
    STRING          reduce using rule 53 (expresion -> expresion GE expresion .)
    BOOL            reduce using rule 53 (expresion -> expresion GE expresion .)
    PARDER          reduce using rule 53 (expresion -> expresion GE expresion .)
    LLAVE_DER       reduce using rule 53 (expresion -> expresion GE expresion .)
    CORDER          reduce using rule 53 (expresion -> expresion GE expresion .)
    DOSPUNTOS       reduce using rule 53 (expresion -> expresion GE expresion .)
    DEFAULT         reduce using rule 53 (expresion -> expresion GE expresion .)
    CASE            reduce using rule 53 (expresion -> expresion GE expresion .)
    COMA            reduce using rule 53 (expresion -> expresion GE expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45

  ! MAS             [ reduce using rule 53 (expresion -> expresion GE expresion .) ]
  ! MENOS           [ reduce using rule 53 (expresion -> expresion GE expresion .) ]
  ! POR             [ reduce using rule 53 (expresion -> expresion GE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 53 (expresion -> expresion GE expresion .) ]
  ! POTENCIA        [ reduce using rule 53 (expresion -> expresion GE expresion .) ]
  ! MODULO          [ reduce using rule 53 (expresion -> expresion GE expresion .) ]
  ! OR_LOGICO       [ shift and go to state 46 ]
  ! AND_LOGICO      [ shift and go to state 47 ]
  ! XOR_LOGICO      [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! LT              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 89

    (54) expresion -> expresion LE expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 54 (expresion -> expresion LE expresion .)
    OR_LOGICO       reduce using rule 54 (expresion -> expresion LE expresion .)
    AND_LOGICO      reduce using rule 54 (expresion -> expresion LE expresion .)
    XOR_LOGICO      reduce using rule 54 (expresion -> expresion LE expresion .)
    GE              reduce using rule 54 (expresion -> expresion LE expresion .)
    LE              reduce using rule 54 (expresion -> expresion LE expresion .)
    LT              reduce using rule 54 (expresion -> expresion LE expresion .)
    GT              reduce using rule 54 (expresion -> expresion LE expresion .)
    EQ              reduce using rule 54 (expresion -> expresion LE expresion .)
    NE              reduce using rule 54 (expresion -> expresion LE expresion .)
    $end            reduce using rule 54 (expresion -> expresion LE expresion .)
    WHILE           reduce using rule 54 (expresion -> expresion LE expresion .)
    DO              reduce using rule 54 (expresion -> expresion LE expresion .)
    IF              reduce using rule 54 (expresion -> expresion LE expresion .)
    ENTERO          reduce using rule 54 (expresion -> expresion LE expresion .)
    DECIMAL         reduce using rule 54 (expresion -> expresion LE expresion .)
    FOR             reduce using rule 54 (expresion -> expresion LE expresion .)
    TRUE            reduce using rule 54 (expresion -> expresion LE expresion .)
    FALSE           reduce using rule 54 (expresion -> expresion LE expresion .)
    CARACTER        reduce using rule 54 (expresion -> expresion LE expresion .)
    CADENA          reduce using rule 54 (expresion -> expresion LE expresion .)
    ID              reduce using rule 54 (expresion -> expresion LE expresion .)
    SENO            reduce using rule 54 (expresion -> expresion LE expresion .)
    COSENO          reduce using rule 54 (expresion -> expresion LE expresion .)
    INV             reduce using rule 54 (expresion -> expresion LE expresion .)
    PRINTLN         reduce using rule 54 (expresion -> expresion LE expresion .)
    NOT_LOGICO      reduce using rule 54 (expresion -> expresion LE expresion .)
    BREAK           reduce using rule 54 (expresion -> expresion LE expresion .)
    CONTINUE        reduce using rule 54 (expresion -> expresion LE expresion .)
    PARIZQ          reduce using rule 54 (expresion -> expresion LE expresion .)
    SWITCH          reduce using rule 54 (expresion -> expresion LE expresion .)
    VECTOR          reduce using rule 54 (expresion -> expresion LE expresion .)
    PROC            reduce using rule 54 (expresion -> expresion LE expresion .)
    EXEC            reduce using rule 54 (expresion -> expresion LE expresion .)
    INT             reduce using rule 54 (expresion -> expresion LE expresion .)
    FLOAT           reduce using rule 54 (expresion -> expresion LE expresion .)
    CHAR            reduce using rule 54 (expresion -> expresion LE expresion .)
    STRING          reduce using rule 54 (expresion -> expresion LE expresion .)
    BOOL            reduce using rule 54 (expresion -> expresion LE expresion .)
    PARDER          reduce using rule 54 (expresion -> expresion LE expresion .)
    LLAVE_DER       reduce using rule 54 (expresion -> expresion LE expresion .)
    CORDER          reduce using rule 54 (expresion -> expresion LE expresion .)
    DOSPUNTOS       reduce using rule 54 (expresion -> expresion LE expresion .)
    DEFAULT         reduce using rule 54 (expresion -> expresion LE expresion .)
    CASE            reduce using rule 54 (expresion -> expresion LE expresion .)
    COMA            reduce using rule 54 (expresion -> expresion LE expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45

  ! MAS             [ reduce using rule 54 (expresion -> expresion LE expresion .) ]
  ! MENOS           [ reduce using rule 54 (expresion -> expresion LE expresion .) ]
  ! POR             [ reduce using rule 54 (expresion -> expresion LE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 54 (expresion -> expresion LE expresion .) ]
  ! POTENCIA        [ reduce using rule 54 (expresion -> expresion LE expresion .) ]
  ! MODULO          [ reduce using rule 54 (expresion -> expresion LE expresion .) ]
  ! OR_LOGICO       [ shift and go to state 46 ]
  ! AND_LOGICO      [ shift and go to state 47 ]
  ! XOR_LOGICO      [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! LT              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 90

    (55) expresion -> expresion LT expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 55 (expresion -> expresion LT expresion .)
    OR_LOGICO       reduce using rule 55 (expresion -> expresion LT expresion .)
    AND_LOGICO      reduce using rule 55 (expresion -> expresion LT expresion .)
    XOR_LOGICO      reduce using rule 55 (expresion -> expresion LT expresion .)
    GE              reduce using rule 55 (expresion -> expresion LT expresion .)
    LE              reduce using rule 55 (expresion -> expresion LT expresion .)
    LT              reduce using rule 55 (expresion -> expresion LT expresion .)
    GT              reduce using rule 55 (expresion -> expresion LT expresion .)
    EQ              reduce using rule 55 (expresion -> expresion LT expresion .)
    NE              reduce using rule 55 (expresion -> expresion LT expresion .)
    $end            reduce using rule 55 (expresion -> expresion LT expresion .)
    WHILE           reduce using rule 55 (expresion -> expresion LT expresion .)
    DO              reduce using rule 55 (expresion -> expresion LT expresion .)
    IF              reduce using rule 55 (expresion -> expresion LT expresion .)
    ENTERO          reduce using rule 55 (expresion -> expresion LT expresion .)
    DECIMAL         reduce using rule 55 (expresion -> expresion LT expresion .)
    FOR             reduce using rule 55 (expresion -> expresion LT expresion .)
    TRUE            reduce using rule 55 (expresion -> expresion LT expresion .)
    FALSE           reduce using rule 55 (expresion -> expresion LT expresion .)
    CARACTER        reduce using rule 55 (expresion -> expresion LT expresion .)
    CADENA          reduce using rule 55 (expresion -> expresion LT expresion .)
    ID              reduce using rule 55 (expresion -> expresion LT expresion .)
    SENO            reduce using rule 55 (expresion -> expresion LT expresion .)
    COSENO          reduce using rule 55 (expresion -> expresion LT expresion .)
    INV             reduce using rule 55 (expresion -> expresion LT expresion .)
    PRINTLN         reduce using rule 55 (expresion -> expresion LT expresion .)
    NOT_LOGICO      reduce using rule 55 (expresion -> expresion LT expresion .)
    BREAK           reduce using rule 55 (expresion -> expresion LT expresion .)
    CONTINUE        reduce using rule 55 (expresion -> expresion LT expresion .)
    PARIZQ          reduce using rule 55 (expresion -> expresion LT expresion .)
    SWITCH          reduce using rule 55 (expresion -> expresion LT expresion .)
    VECTOR          reduce using rule 55 (expresion -> expresion LT expresion .)
    PROC            reduce using rule 55 (expresion -> expresion LT expresion .)
    EXEC            reduce using rule 55 (expresion -> expresion LT expresion .)
    INT             reduce using rule 55 (expresion -> expresion LT expresion .)
    FLOAT           reduce using rule 55 (expresion -> expresion LT expresion .)
    CHAR            reduce using rule 55 (expresion -> expresion LT expresion .)
    STRING          reduce using rule 55 (expresion -> expresion LT expresion .)
    BOOL            reduce using rule 55 (expresion -> expresion LT expresion .)
    PARDER          reduce using rule 55 (expresion -> expresion LT expresion .)
    LLAVE_DER       reduce using rule 55 (expresion -> expresion LT expresion .)
    CORDER          reduce using rule 55 (expresion -> expresion LT expresion .)
    DOSPUNTOS       reduce using rule 55 (expresion -> expresion LT expresion .)
    DEFAULT         reduce using rule 55 (expresion -> expresion LT expresion .)
    CASE            reduce using rule 55 (expresion -> expresion LT expresion .)
    COMA            reduce using rule 55 (expresion -> expresion LT expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45

  ! MAS             [ reduce using rule 55 (expresion -> expresion LT expresion .) ]
  ! MENOS           [ reduce using rule 55 (expresion -> expresion LT expresion .) ]
  ! POR             [ reduce using rule 55 (expresion -> expresion LT expresion .) ]
  ! DIVIDIDO        [ reduce using rule 55 (expresion -> expresion LT expresion .) ]
  ! POTENCIA        [ reduce using rule 55 (expresion -> expresion LT expresion .) ]
  ! MODULO          [ reduce using rule 55 (expresion -> expresion LT expresion .) ]
  ! OR_LOGICO       [ shift and go to state 46 ]
  ! AND_LOGICO      [ shift and go to state 47 ]
  ! XOR_LOGICO      [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! LT              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 91

    (56) expresion -> expresion GT expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 56 (expresion -> expresion GT expresion .)
    OR_LOGICO       reduce using rule 56 (expresion -> expresion GT expresion .)
    AND_LOGICO      reduce using rule 56 (expresion -> expresion GT expresion .)
    XOR_LOGICO      reduce using rule 56 (expresion -> expresion GT expresion .)
    GE              reduce using rule 56 (expresion -> expresion GT expresion .)
    LE              reduce using rule 56 (expresion -> expresion GT expresion .)
    LT              reduce using rule 56 (expresion -> expresion GT expresion .)
    GT              reduce using rule 56 (expresion -> expresion GT expresion .)
    EQ              reduce using rule 56 (expresion -> expresion GT expresion .)
    NE              reduce using rule 56 (expresion -> expresion GT expresion .)
    $end            reduce using rule 56 (expresion -> expresion GT expresion .)
    WHILE           reduce using rule 56 (expresion -> expresion GT expresion .)
    DO              reduce using rule 56 (expresion -> expresion GT expresion .)
    IF              reduce using rule 56 (expresion -> expresion GT expresion .)
    ENTERO          reduce using rule 56 (expresion -> expresion GT expresion .)
    DECIMAL         reduce using rule 56 (expresion -> expresion GT expresion .)
    FOR             reduce using rule 56 (expresion -> expresion GT expresion .)
    TRUE            reduce using rule 56 (expresion -> expresion GT expresion .)
    FALSE           reduce using rule 56 (expresion -> expresion GT expresion .)
    CARACTER        reduce using rule 56 (expresion -> expresion GT expresion .)
    CADENA          reduce using rule 56 (expresion -> expresion GT expresion .)
    ID              reduce using rule 56 (expresion -> expresion GT expresion .)
    SENO            reduce using rule 56 (expresion -> expresion GT expresion .)
    COSENO          reduce using rule 56 (expresion -> expresion GT expresion .)
    INV             reduce using rule 56 (expresion -> expresion GT expresion .)
    PRINTLN         reduce using rule 56 (expresion -> expresion GT expresion .)
    NOT_LOGICO      reduce using rule 56 (expresion -> expresion GT expresion .)
    BREAK           reduce using rule 56 (expresion -> expresion GT expresion .)
    CONTINUE        reduce using rule 56 (expresion -> expresion GT expresion .)
    PARIZQ          reduce using rule 56 (expresion -> expresion GT expresion .)
    SWITCH          reduce using rule 56 (expresion -> expresion GT expresion .)
    VECTOR          reduce using rule 56 (expresion -> expresion GT expresion .)
    PROC            reduce using rule 56 (expresion -> expresion GT expresion .)
    EXEC            reduce using rule 56 (expresion -> expresion GT expresion .)
    INT             reduce using rule 56 (expresion -> expresion GT expresion .)
    FLOAT           reduce using rule 56 (expresion -> expresion GT expresion .)
    CHAR            reduce using rule 56 (expresion -> expresion GT expresion .)
    STRING          reduce using rule 56 (expresion -> expresion GT expresion .)
    BOOL            reduce using rule 56 (expresion -> expresion GT expresion .)
    PARDER          reduce using rule 56 (expresion -> expresion GT expresion .)
    LLAVE_DER       reduce using rule 56 (expresion -> expresion GT expresion .)
    CORDER          reduce using rule 56 (expresion -> expresion GT expresion .)
    DOSPUNTOS       reduce using rule 56 (expresion -> expresion GT expresion .)
    DEFAULT         reduce using rule 56 (expresion -> expresion GT expresion .)
    CASE            reduce using rule 56 (expresion -> expresion GT expresion .)
    COMA            reduce using rule 56 (expresion -> expresion GT expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45

  ! MAS             [ reduce using rule 56 (expresion -> expresion GT expresion .) ]
  ! MENOS           [ reduce using rule 56 (expresion -> expresion GT expresion .) ]
  ! POR             [ reduce using rule 56 (expresion -> expresion GT expresion .) ]
  ! DIVIDIDO        [ reduce using rule 56 (expresion -> expresion GT expresion .) ]
  ! POTENCIA        [ reduce using rule 56 (expresion -> expresion GT expresion .) ]
  ! MODULO          [ reduce using rule 56 (expresion -> expresion GT expresion .) ]
  ! OR_LOGICO       [ shift and go to state 46 ]
  ! AND_LOGICO      [ shift and go to state 47 ]
  ! XOR_LOGICO      [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! LT              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 92

    (57) expresion -> expresion EQ expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 57 (expresion -> expresion EQ expresion .)
    OR_LOGICO       reduce using rule 57 (expresion -> expresion EQ expresion .)
    AND_LOGICO      reduce using rule 57 (expresion -> expresion EQ expresion .)
    XOR_LOGICO      reduce using rule 57 (expresion -> expresion EQ expresion .)
    GE              reduce using rule 57 (expresion -> expresion EQ expresion .)
    LE              reduce using rule 57 (expresion -> expresion EQ expresion .)
    LT              reduce using rule 57 (expresion -> expresion EQ expresion .)
    GT              reduce using rule 57 (expresion -> expresion EQ expresion .)
    EQ              reduce using rule 57 (expresion -> expresion EQ expresion .)
    NE              reduce using rule 57 (expresion -> expresion EQ expresion .)
    $end            reduce using rule 57 (expresion -> expresion EQ expresion .)
    WHILE           reduce using rule 57 (expresion -> expresion EQ expresion .)
    DO              reduce using rule 57 (expresion -> expresion EQ expresion .)
    IF              reduce using rule 57 (expresion -> expresion EQ expresion .)
    ENTERO          reduce using rule 57 (expresion -> expresion EQ expresion .)
    DECIMAL         reduce using rule 57 (expresion -> expresion EQ expresion .)
    FOR             reduce using rule 57 (expresion -> expresion EQ expresion .)
    TRUE            reduce using rule 57 (expresion -> expresion EQ expresion .)
    FALSE           reduce using rule 57 (expresion -> expresion EQ expresion .)
    CARACTER        reduce using rule 57 (expresion -> expresion EQ expresion .)
    CADENA          reduce using rule 57 (expresion -> expresion EQ expresion .)
    ID              reduce using rule 57 (expresion -> expresion EQ expresion .)
    SENO            reduce using rule 57 (expresion -> expresion EQ expresion .)
    COSENO          reduce using rule 57 (expresion -> expresion EQ expresion .)
    INV             reduce using rule 57 (expresion -> expresion EQ expresion .)
    PRINTLN         reduce using rule 57 (expresion -> expresion EQ expresion .)
    NOT_LOGICO      reduce using rule 57 (expresion -> expresion EQ expresion .)
    BREAK           reduce using rule 57 (expresion -> expresion EQ expresion .)
    CONTINUE        reduce using rule 57 (expresion -> expresion EQ expresion .)
    PARIZQ          reduce using rule 57 (expresion -> expresion EQ expresion .)
    SWITCH          reduce using rule 57 (expresion -> expresion EQ expresion .)
    VECTOR          reduce using rule 57 (expresion -> expresion EQ expresion .)
    PROC            reduce using rule 57 (expresion -> expresion EQ expresion .)
    EXEC            reduce using rule 57 (expresion -> expresion EQ expresion .)
    INT             reduce using rule 57 (expresion -> expresion EQ expresion .)
    FLOAT           reduce using rule 57 (expresion -> expresion EQ expresion .)
    CHAR            reduce using rule 57 (expresion -> expresion EQ expresion .)
    STRING          reduce using rule 57 (expresion -> expresion EQ expresion .)
    BOOL            reduce using rule 57 (expresion -> expresion EQ expresion .)
    PARDER          reduce using rule 57 (expresion -> expresion EQ expresion .)
    LLAVE_DER       reduce using rule 57 (expresion -> expresion EQ expresion .)
    CORDER          reduce using rule 57 (expresion -> expresion EQ expresion .)
    DOSPUNTOS       reduce using rule 57 (expresion -> expresion EQ expresion .)
    DEFAULT         reduce using rule 57 (expresion -> expresion EQ expresion .)
    CASE            reduce using rule 57 (expresion -> expresion EQ expresion .)
    COMA            reduce using rule 57 (expresion -> expresion EQ expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45

  ! MAS             [ reduce using rule 57 (expresion -> expresion EQ expresion .) ]
  ! MENOS           [ reduce using rule 57 (expresion -> expresion EQ expresion .) ]
  ! POR             [ reduce using rule 57 (expresion -> expresion EQ expresion .) ]
  ! DIVIDIDO        [ reduce using rule 57 (expresion -> expresion EQ expresion .) ]
  ! POTENCIA        [ reduce using rule 57 (expresion -> expresion EQ expresion .) ]
  ! MODULO          [ reduce using rule 57 (expresion -> expresion EQ expresion .) ]
  ! OR_LOGICO       [ shift and go to state 46 ]
  ! AND_LOGICO      [ shift and go to state 47 ]
  ! XOR_LOGICO      [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! LT              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 93

    (58) expresion -> expresion NE expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          reduce using rule 58 (expresion -> expresion NE expresion .)
    OR_LOGICO       reduce using rule 58 (expresion -> expresion NE expresion .)
    AND_LOGICO      reduce using rule 58 (expresion -> expresion NE expresion .)
    XOR_LOGICO      reduce using rule 58 (expresion -> expresion NE expresion .)
    GE              reduce using rule 58 (expresion -> expresion NE expresion .)
    LE              reduce using rule 58 (expresion -> expresion NE expresion .)
    LT              reduce using rule 58 (expresion -> expresion NE expresion .)
    GT              reduce using rule 58 (expresion -> expresion NE expresion .)
    EQ              reduce using rule 58 (expresion -> expresion NE expresion .)
    NE              reduce using rule 58 (expresion -> expresion NE expresion .)
    $end            reduce using rule 58 (expresion -> expresion NE expresion .)
    WHILE           reduce using rule 58 (expresion -> expresion NE expresion .)
    DO              reduce using rule 58 (expresion -> expresion NE expresion .)
    IF              reduce using rule 58 (expresion -> expresion NE expresion .)
    ENTERO          reduce using rule 58 (expresion -> expresion NE expresion .)
    DECIMAL         reduce using rule 58 (expresion -> expresion NE expresion .)
    FOR             reduce using rule 58 (expresion -> expresion NE expresion .)
    TRUE            reduce using rule 58 (expresion -> expresion NE expresion .)
    FALSE           reduce using rule 58 (expresion -> expresion NE expresion .)
    CARACTER        reduce using rule 58 (expresion -> expresion NE expresion .)
    CADENA          reduce using rule 58 (expresion -> expresion NE expresion .)
    ID              reduce using rule 58 (expresion -> expresion NE expresion .)
    SENO            reduce using rule 58 (expresion -> expresion NE expresion .)
    COSENO          reduce using rule 58 (expresion -> expresion NE expresion .)
    INV             reduce using rule 58 (expresion -> expresion NE expresion .)
    PRINTLN         reduce using rule 58 (expresion -> expresion NE expresion .)
    NOT_LOGICO      reduce using rule 58 (expresion -> expresion NE expresion .)
    BREAK           reduce using rule 58 (expresion -> expresion NE expresion .)
    CONTINUE        reduce using rule 58 (expresion -> expresion NE expresion .)
    PARIZQ          reduce using rule 58 (expresion -> expresion NE expresion .)
    SWITCH          reduce using rule 58 (expresion -> expresion NE expresion .)
    VECTOR          reduce using rule 58 (expresion -> expresion NE expresion .)
    PROC            reduce using rule 58 (expresion -> expresion NE expresion .)
    EXEC            reduce using rule 58 (expresion -> expresion NE expresion .)
    INT             reduce using rule 58 (expresion -> expresion NE expresion .)
    FLOAT           reduce using rule 58 (expresion -> expresion NE expresion .)
    CHAR            reduce using rule 58 (expresion -> expresion NE expresion .)
    STRING          reduce using rule 58 (expresion -> expresion NE expresion .)
    BOOL            reduce using rule 58 (expresion -> expresion NE expresion .)
    PARDER          reduce using rule 58 (expresion -> expresion NE expresion .)
    LLAVE_DER       reduce using rule 58 (expresion -> expresion NE expresion .)
    CORDER          reduce using rule 58 (expresion -> expresion NE expresion .)
    DOSPUNTOS       reduce using rule 58 (expresion -> expresion NE expresion .)
    DEFAULT         reduce using rule 58 (expresion -> expresion NE expresion .)
    CASE            reduce using rule 58 (expresion -> expresion NE expresion .)
    COMA            reduce using rule 58 (expresion -> expresion NE expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45

  ! MAS             [ reduce using rule 58 (expresion -> expresion NE expresion .) ]
  ! MENOS           [ reduce using rule 58 (expresion -> expresion NE expresion .) ]
  ! POR             [ reduce using rule 58 (expresion -> expresion NE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 58 (expresion -> expresion NE expresion .) ]
  ! POTENCIA        [ reduce using rule 58 (expresion -> expresion NE expresion .) ]
  ! MODULO          [ reduce using rule 58 (expresion -> expresion NE expresion .) ]
  ! OR_LOGICO       [ shift and go to state 46 ]
  ! AND_LOGICO      [ shift and go to state 47 ]
  ! XOR_LOGICO      [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! LT              [ shift and go to state 51 ]
  ! GT              [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 54 ]


state 94

    (9) expresion -> WHILE PARIZQ expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (72) expresion -> WHILE PARIZQ expresion . PARDER LLAVE_IZQ LLAVE_DER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PARDER          shift and go to state 118
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 95

    (63) expresion -> PARIZQ expresion PARDER .

    PTCOMA          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    OR_LOGICO       reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    AND_LOGICO      reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    XOR_LOGICO      reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    GE              reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    LE              reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    LT              reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    GT              reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    EQ              reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    NE              reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    $end            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    WHILE           reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    DO              reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    IF              reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    FOR             reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    TRUE            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    FALSE           reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    CADENA          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    ID              reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    SENO            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    COSENO          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    INV             reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    NOT_LOGICO      reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    BREAK           reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    SWITCH          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    VECTOR          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    PROC            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    EXEC            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    INT             reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    CHAR            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    STRING          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    BOOL            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    LLAVE_DER       reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    DEFAULT         reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    CASE            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)


state 96

    (10) expresion -> DO LLAVE_IZQ lista_expresiones . LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    LLAVE_DER       shift and go to state 119
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 38
    tipo                           shift and go to state 13

state 97

    (75) expresion -> DO LLAVE_IZQ LLAVE_DER . WHILE PARIZQ expresion PARDER PTCOMA

    WHILE           shift and go to state 120


state 98

    (5) lista_expresiones -> expresion . PTCOMA
    (6) lista_expresiones -> expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

  ! shift/reduce conflict for MENOS resolved as shift
    PTCOMA          shift and go to state 39
    LLAVE_DER       reduce using rule 6 (lista_expresiones -> expresion .)
    WHILE           reduce using rule 6 (lista_expresiones -> expresion .)
    DO              reduce using rule 6 (lista_expresiones -> expresion .)
    IF              reduce using rule 6 (lista_expresiones -> expresion .)
    ENTERO          reduce using rule 6 (lista_expresiones -> expresion .)
    DECIMAL         reduce using rule 6 (lista_expresiones -> expresion .)
    FOR             reduce using rule 6 (lista_expresiones -> expresion .)
    TRUE            reduce using rule 6 (lista_expresiones -> expresion .)
    FALSE           reduce using rule 6 (lista_expresiones -> expresion .)
    CARACTER        reduce using rule 6 (lista_expresiones -> expresion .)
    CADENA          reduce using rule 6 (lista_expresiones -> expresion .)
    ID              reduce using rule 6 (lista_expresiones -> expresion .)
    SENO            reduce using rule 6 (lista_expresiones -> expresion .)
    COSENO          reduce using rule 6 (lista_expresiones -> expresion .)
    INV             reduce using rule 6 (lista_expresiones -> expresion .)
    PRINTLN         reduce using rule 6 (lista_expresiones -> expresion .)
    NOT_LOGICO      reduce using rule 6 (lista_expresiones -> expresion .)
    BREAK           reduce using rule 6 (lista_expresiones -> expresion .)
    CONTINUE        reduce using rule 6 (lista_expresiones -> expresion .)
    PARIZQ          reduce using rule 6 (lista_expresiones -> expresion .)
    SWITCH          reduce using rule 6 (lista_expresiones -> expresion .)
    VECTOR          reduce using rule 6 (lista_expresiones -> expresion .)
    PROC            reduce using rule 6 (lista_expresiones -> expresion .)
    EXEC            reduce using rule 6 (lista_expresiones -> expresion .)
    INT             reduce using rule 6 (lista_expresiones -> expresion .)
    FLOAT           reduce using rule 6 (lista_expresiones -> expresion .)
    CHAR            reduce using rule 6 (lista_expresiones -> expresion .)
    STRING          reduce using rule 6 (lista_expresiones -> expresion .)
    BOOL            reduce using rule 6 (lista_expresiones -> expresion .)
    DEFAULT         reduce using rule 6 (lista_expresiones -> expresion .)
    CASE            reduce using rule 6 (lista_expresiones -> expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54

  ! MENOS           [ reduce using rule 6 (lista_expresiones -> expresion .) ]


state 99

    (11) expresion -> IF PARIZQ expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> IF PARIZQ expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> IF PARIZQ expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (71) expresion -> IF PARIZQ expresion . PARDER LLAVE_IZQ LLAVE_DER
    (76) expresion -> IF PARIZQ expresion . PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> IF PARIZQ expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PARDER          shift and go to state 121
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 100

    (16) expresion -> FOR PARIZQ tipo . ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (73) expresion -> FOR PARIZQ tipo . ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER

    ID              shift and go to state 122


state 101

    (17) expresion -> FOR PARIZQ ID . ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (74) expresion -> FOR PARIZQ ID . ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER

    ASIGNACION      shift and go to state 123


state 102

    (33) expresion -> tipo ID PTCOMA .

    PTCOMA          reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    MAS             reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    MENOS           reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    POR             reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    DIVIDIDO        reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    POTENCIA        reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    MODULO          reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    OR_LOGICO       reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    AND_LOGICO      reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    XOR_LOGICO      reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    GE              reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    LE              reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    LT              reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    GT              reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    EQ              reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    NE              reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    $end            reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    WHILE           reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    DO              reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    IF              reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    ENTERO          reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    DECIMAL         reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    FOR             reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    TRUE            reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    FALSE           reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    CARACTER        reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    CADENA          reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    ID              reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    SENO            reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    COSENO          reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    INV             reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    PRINTLN         reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    NOT_LOGICO      reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    BREAK           reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    CONTINUE        reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    PARIZQ          reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    SWITCH          reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    VECTOR          reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    PROC            reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    EXEC            reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    INT             reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    FLOAT           reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    CHAR            reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    STRING          reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    BOOL            reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    PARDER          reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    LLAVE_DER       reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    CORDER          reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    DOSPUNTOS       reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    DEFAULT         reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    CASE            reduce using rule 33 (expresion -> tipo ID PTCOMA .)
    COMA            reduce using rule 33 (expresion -> tipo ID PTCOMA .)


state 103

    (46) expresion -> tipo ID ASIGNACION . expresion PTCOMA
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    tipo                           shift and go to state 13
    expresion                      shift and go to state 124

state 104

    (34) expresion -> ID ASIGNACION expresion . PTCOMA
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 125
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 105

    (94) expresion -> ID lista_indices ASIGNACION . expresion PTCOMA
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 126
    tipo                           shift and go to state 13

state 106

    (95) lista_indices -> lista_indices CORIZQ . expresion CORDER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 127
    tipo                           shift and go to state 13

state 107

    (96) lista_indices -> CORIZQ expresion . CORDER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    CORDER          shift and go to state 128
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 108

    (29) expresion -> SENO PARIZQ expresion . PARDER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PARDER          shift and go to state 129
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 109

    (30) expresion -> COSENO PARIZQ expresion . PARDER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PARDER          shift and go to state 130
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 110

    (31) expresion -> INV PARIZQ expresion . PARDER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PARDER          shift and go to state 131
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 111

    (40) expresion -> PRINTLN PARIZQ expresion . PARDER PTCOMA
    (41) expresion -> PRINTLN PARIZQ expresion . PARDER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PARDER          shift and go to state 132
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 112

    (42) expresion -> PRINTLN PARIZQ oraciones . PARDER PTCOMA
    (43) expresion -> PRINTLN PARIZQ oraciones . PARDER
    (44) oraciones -> oraciones . ID

    PARDER          shift and go to state 133
    ID              shift and go to state 134


state 113

    (22) expresion -> ID .
    (34) expresion -> ID . ASIGNACION expresion PTCOMA
    (59) expresion -> ID . INCREMENTO
    (60) expresion -> ID . DECREMENTO
    (93) expresion -> ID . lista_indices
    (94) expresion -> ID . lista_indices ASIGNACION expresion PTCOMA
    (45) oraciones -> ID .
    (95) lista_indices -> . lista_indices CORIZQ expresion CORDER
    (96) lista_indices -> . CORIZQ expresion CORDER
    (97) lista_indices -> .

  ! reduce/reduce conflict for PARDER resolved using rule 22 (expresion -> ID .)
  ! shift/reduce conflict for ASIGNACION resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for MAS resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for MENOS resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for POR resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for DIVIDIDO resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for OR_LOGICO resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for AND_LOGICO resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for XOR_LOGICO resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for GE resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for LE resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for LT resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for GT resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for EQ resolved using rule 22 (expresion -> ID .)
  ! reduce/reduce conflict for NE resolved using rule 22 (expresion -> ID .)
    PARDER          reduce using rule 22 (expresion -> ID .)
    MAS             reduce using rule 22 (expresion -> ID .)
    MENOS           reduce using rule 22 (expresion -> ID .)
    POR             reduce using rule 22 (expresion -> ID .)
    DIVIDIDO        reduce using rule 22 (expresion -> ID .)
    POTENCIA        reduce using rule 22 (expresion -> ID .)
    MODULO          reduce using rule 22 (expresion -> ID .)
    OR_LOGICO       reduce using rule 22 (expresion -> ID .)
    AND_LOGICO      reduce using rule 22 (expresion -> ID .)
    XOR_LOGICO      reduce using rule 22 (expresion -> ID .)
    GE              reduce using rule 22 (expresion -> ID .)
    LE              reduce using rule 22 (expresion -> ID .)
    LT              reduce using rule 22 (expresion -> ID .)
    GT              reduce using rule 22 (expresion -> ID .)
    EQ              reduce using rule 22 (expresion -> ID .)
    NE              reduce using rule 22 (expresion -> ID .)
    ASIGNACION      shift and go to state 61
    INCREMENTO      shift and go to state 62
    DECREMENTO      shift and go to state 63
    ID              reduce using rule 45 (oraciones -> ID .)
    CORIZQ          shift and go to state 65

  ! PARDER          [ reduce using rule 45 (oraciones -> ID .) ]
  ! ASIGNACION      [ reduce using rule 97 (lista_indices -> .) ]
  ! CORIZQ          [ reduce using rule 97 (lista_indices -> .) ]
  ! PARDER          [ reduce using rule 97 (lista_indices -> .) ]
  ! MAS             [ reduce using rule 97 (lista_indices -> .) ]
  ! MENOS           [ reduce using rule 97 (lista_indices -> .) ]
  ! POR             [ reduce using rule 97 (lista_indices -> .) ]
  ! DIVIDIDO        [ reduce using rule 97 (lista_indices -> .) ]
  ! POTENCIA        [ reduce using rule 97 (lista_indices -> .) ]
  ! MODULO          [ reduce using rule 97 (lista_indices -> .) ]
  ! OR_LOGICO       [ reduce using rule 97 (lista_indices -> .) ]
  ! AND_LOGICO      [ reduce using rule 97 (lista_indices -> .) ]
  ! XOR_LOGICO      [ reduce using rule 97 (lista_indices -> .) ]
  ! GE              [ reduce using rule 97 (lista_indices -> .) ]
  ! LE              [ reduce using rule 97 (lista_indices -> .) ]
  ! LT              [ reduce using rule 97 (lista_indices -> .) ]
  ! GT              [ reduce using rule 97 (lista_indices -> .) ]
  ! EQ              [ reduce using rule 97 (lista_indices -> .) ]
  ! NE              [ reduce using rule 97 (lista_indices -> .) ]

    lista_indices                  shift and go to state 64

state 114

    (64) expresion -> SWITCH PARIZQ expresion . PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PARDER          shift and go to state 135
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 115

    (79) expresion -> VECTOR CORIZQ tipo . CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> VECTOR CORIZQ tipo . CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> VECTOR CORIZQ tipo . CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> VECTOR CORIZQ tipo . CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> VECTOR CORIZQ tipo . CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA

    CORDER          shift and go to state 136


state 116

    (98) expresion -> PROC ID PARIZQ . lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (99) lista_parametros_opt -> . lista_parametros
    (100) lista_parametros_opt -> .
    (101) lista_parametros -> . lista_parametros COMA tipo DOSPUNTOS ID
    (102) lista_parametros -> . tipo DOSPUNTOS ID
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    PARDER          reduce using rule 100 (lista_parametros_opt -> .)
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    lista_parametros_opt           shift and go to state 137
    lista_parametros               shift and go to state 138
    tipo                           shift and go to state 139

state 117

    (103) expresion -> EXEC ID PARIZQ . lista_argumentos_exec_opt PARDER PTCOMA
    (104) lista_argumentos_exec_opt -> . lista_argumentos_exec
    (105) lista_argumentos_exec_opt -> .
    (106) lista_argumentos_exec -> . lista_argumentos_exec COMA argumento_exec
    (107) lista_argumentos_exec -> . argumento_exec
    (108) argumento_exec -> . ID
    (109) argumento_exec -> . ENTERO
    (110) argumento_exec -> . DECIMAL
    (111) argumento_exec -> . CARACTER
    (112) argumento_exec -> . CADENA
    (113) argumento_exec -> . TRUE
    (114) argumento_exec -> . FALSE

    PARDER          reduce using rule 105 (lista_argumentos_exec_opt -> .)
    ID              shift and go to state 140
    ENTERO          shift and go to state 144
    DECIMAL         shift and go to state 145
    CARACTER        shift and go to state 146
    CADENA          shift and go to state 147
    TRUE            shift and go to state 148
    FALSE           shift and go to state 149

    lista_argumentos_exec_opt      shift and go to state 141
    lista_argumentos_exec          shift and go to state 142
    argumento_exec                 shift and go to state 143

state 118

    (9) expresion -> WHILE PARIZQ expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER
    (72) expresion -> WHILE PARIZQ expresion PARDER . LLAVE_IZQ LLAVE_DER

    LLAVE_IZQ       shift and go to state 150


state 119

    (10) expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER . WHILE PARIZQ expresion PARDER PTCOMA

    WHILE           shift and go to state 151


state 120

    (75) expresion -> DO LLAVE_IZQ LLAVE_DER WHILE . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 152


state 121

    (11) expresion -> IF PARIZQ expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> IF PARIZQ expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> IF PARIZQ expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (71) expresion -> IF PARIZQ expresion PARDER . LLAVE_IZQ LLAVE_DER
    (76) expresion -> IF PARIZQ expresion PARDER . LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> IF PARIZQ expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER

    LLAVE_IZQ       shift and go to state 153


state 122

    (16) expresion -> FOR PARIZQ tipo ID . ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (73) expresion -> FOR PARIZQ tipo ID . ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER

    ASIGNACION      shift and go to state 154


state 123

    (17) expresion -> FOR PARIZQ ID ASIGNACION . expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (74) expresion -> FOR PARIZQ ID ASIGNACION . expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 155
    tipo                           shift and go to state 13

state 124

    (46) expresion -> tipo ID ASIGNACION expresion . PTCOMA
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 156
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 125

    (34) expresion -> ID ASIGNACION expresion PTCOMA .

    PTCOMA          reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    MAS             reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    MENOS           reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    POR             reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    DIVIDIDO        reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    POTENCIA        reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    MODULO          reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    OR_LOGICO       reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    AND_LOGICO      reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    XOR_LOGICO      reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    GE              reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    LE              reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    LT              reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    GT              reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    EQ              reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    NE              reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    $end            reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    WHILE           reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    DO              reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    IF              reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    ENTERO          reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    DECIMAL         reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    FOR             reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    TRUE            reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    FALSE           reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    CARACTER        reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    CADENA          reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    ID              reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    SENO            reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    COSENO          reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    INV             reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    PRINTLN         reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    NOT_LOGICO      reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    BREAK           reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    CONTINUE        reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    PARIZQ          reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    SWITCH          reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    VECTOR          reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    PROC            reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    EXEC            reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    INT             reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    FLOAT           reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    CHAR            reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    STRING          reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    BOOL            reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    PARDER          reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    LLAVE_DER       reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    CORDER          reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    DOSPUNTOS       reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    DEFAULT         reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    CASE            reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)
    COMA            reduce using rule 34 (expresion -> ID ASIGNACION expresion PTCOMA .)


state 126

    (94) expresion -> ID lista_indices ASIGNACION expresion . PTCOMA
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 157
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 127

    (95) lista_indices -> lista_indices CORIZQ expresion . CORDER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    CORDER          shift and go to state 158
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 128

    (96) lista_indices -> CORIZQ expresion CORDER .

    ASIGNACION      reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    POR             reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    POTENCIA        reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    OR_LOGICO       reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    AND_LOGICO      reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    XOR_LOGICO      reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    GE              reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    LE              reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    LT              reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    GT              reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    EQ              reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    NE              reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    $end            reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    WHILE           reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    DO              reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    IF              reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    ENTERO          reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    DECIMAL         reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    FOR             reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    TRUE            reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    FALSE           reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    CARACTER        reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    CADENA          reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    ID              reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    SENO            reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    COSENO          reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    INV             reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    PRINTLN         reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    NOT_LOGICO      reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    BREAK           reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    CONTINUE        reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    PARIZQ          reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    SWITCH          reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    VECTOR          reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    PROC            reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    EXEC            reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    INT             reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    FLOAT           reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    CHAR            reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    STRING          reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    BOOL            reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    PARDER          reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    LLAVE_DER       reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    DOSPUNTOS       reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    DEFAULT         reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    CASE            reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 96 (lista_indices -> CORIZQ expresion CORDER .)


state 129

    (29) expresion -> SENO PARIZQ expresion PARDER .

    PTCOMA          reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    MAS             reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    MENOS           reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    POR             reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    MODULO          reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    OR_LOGICO       reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    AND_LOGICO      reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    XOR_LOGICO      reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    GE              reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    LE              reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    LT              reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    GT              reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    EQ              reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    NE              reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    $end            reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    WHILE           reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    DO              reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    IF              reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    FOR             reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    TRUE            reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    FALSE           reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    CADENA          reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    ID              reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    SENO            reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    COSENO          reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    INV             reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    NOT_LOGICO      reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    BREAK           reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    SWITCH          reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    VECTOR          reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    PROC            reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    EXEC            reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    INT             reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    CHAR            reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    STRING          reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    BOOL            reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    PARDER          reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    LLAVE_DER       reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    CORDER          reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    DEFAULT         reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    CASE            reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)
    COMA            reduce using rule 29 (expresion -> SENO PARIZQ expresion PARDER .)


state 130

    (30) expresion -> COSENO PARIZQ expresion PARDER .

    PTCOMA          reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    MAS             reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    MENOS           reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    POR             reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    MODULO          reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    OR_LOGICO       reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    AND_LOGICO      reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    XOR_LOGICO      reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    GE              reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    LE              reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    LT              reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    GT              reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    EQ              reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    NE              reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    $end            reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    WHILE           reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    DO              reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    IF              reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    FOR             reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    TRUE            reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    FALSE           reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    CADENA          reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    ID              reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    SENO            reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    COSENO          reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    INV             reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    NOT_LOGICO      reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    BREAK           reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    SWITCH          reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    VECTOR          reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    PROC            reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    EXEC            reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    INT             reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    CHAR            reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    STRING          reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    BOOL            reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    PARDER          reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    LLAVE_DER       reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    CORDER          reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    DEFAULT         reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    CASE            reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)
    COMA            reduce using rule 30 (expresion -> COSENO PARIZQ expresion PARDER .)


state 131

    (31) expresion -> INV PARIZQ expresion PARDER .

    PTCOMA          reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    MAS             reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    MENOS           reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    POR             reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    MODULO          reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    OR_LOGICO       reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    AND_LOGICO      reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    XOR_LOGICO      reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    GE              reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    LE              reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    LT              reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    GT              reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    EQ              reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    NE              reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    $end            reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    WHILE           reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    DO              reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    IF              reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    FOR             reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    TRUE            reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    FALSE           reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    CADENA          reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    ID              reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    SENO            reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    COSENO          reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    INV             reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    NOT_LOGICO      reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    BREAK           reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    SWITCH          reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    VECTOR          reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    PROC            reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    EXEC            reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    INT             reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    CHAR            reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    STRING          reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    BOOL            reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    PARDER          reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    LLAVE_DER       reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    CORDER          reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    DEFAULT         reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    CASE            reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)
    COMA            reduce using rule 31 (expresion -> INV PARIZQ expresion PARDER .)


state 132

    (40) expresion -> PRINTLN PARIZQ expresion PARDER . PTCOMA
    (41) expresion -> PRINTLN PARIZQ expresion PARDER .

  ! shift/reduce conflict for PTCOMA resolved as shift
    PTCOMA          shift and go to state 159
    MAS             reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    MENOS           reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    POR             reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    MODULO          reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    OR_LOGICO       reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    AND_LOGICO      reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    XOR_LOGICO      reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    GE              reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    LE              reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    LT              reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    GT              reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    EQ              reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    NE              reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    $end            reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    WHILE           reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    DO              reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    IF              reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    FOR             reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    TRUE            reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    FALSE           reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    CADENA          reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    ID              reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    SENO            reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    COSENO          reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    INV             reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    NOT_LOGICO      reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    BREAK           reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    SWITCH          reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    VECTOR          reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    PROC            reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    EXEC            reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    INT             reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    CHAR            reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    STRING          reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    BOOL            reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    PARDER          reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    LLAVE_DER       reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    CORDER          reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    DEFAULT         reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    CASE            reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    COMA            reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .)

  ! PTCOMA          [ reduce using rule 41 (expresion -> PRINTLN PARIZQ expresion PARDER .) ]


state 133

    (42) expresion -> PRINTLN PARIZQ oraciones PARDER . PTCOMA
    (43) expresion -> PRINTLN PARIZQ oraciones PARDER .

  ! shift/reduce conflict for PTCOMA resolved as shift
    PTCOMA          shift and go to state 160
    MAS             reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    MENOS           reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    POR             reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    DIVIDIDO        reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    POTENCIA        reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    MODULO          reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    OR_LOGICO       reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    AND_LOGICO      reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    XOR_LOGICO      reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    GE              reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    LE              reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    LT              reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    GT              reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    EQ              reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    NE              reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    $end            reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    WHILE           reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    DO              reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    IF              reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    ENTERO          reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    DECIMAL         reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    FOR             reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    TRUE            reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    FALSE           reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    CARACTER        reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    CADENA          reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    ID              reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    SENO            reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    COSENO          reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    INV             reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    PRINTLN         reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    NOT_LOGICO      reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    BREAK           reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    CONTINUE        reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    PARIZQ          reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    SWITCH          reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    VECTOR          reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    PROC            reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    EXEC            reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    INT             reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    FLOAT           reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    CHAR            reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    STRING          reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    BOOL            reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    PARDER          reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    LLAVE_DER       reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    CORDER          reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    DOSPUNTOS       reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    DEFAULT         reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    CASE            reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)
    COMA            reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .)

  ! PTCOMA          [ reduce using rule 43 (expresion -> PRINTLN PARIZQ oraciones PARDER .) ]


state 134

    (44) oraciones -> oraciones ID .

    PARDER          reduce using rule 44 (oraciones -> oraciones ID .)
    ID              reduce using rule 44 (oraciones -> oraciones ID .)


state 135

    (64) expresion -> SWITCH PARIZQ expresion PARDER . LLAVE_IZQ lista_cases_opt LLAVE_DER

    LLAVE_IZQ       shift and go to state 161


state 136

    (79) expresion -> VECTOR CORIZQ tipo CORDER . ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> VECTOR CORIZQ tipo CORDER . ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> VECTOR CORIZQ tipo CORDER . ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> VECTOR CORIZQ tipo CORDER . ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> VECTOR CORIZQ tipo CORDER . ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA

    ID              shift and go to state 162


state 137

    (98) expresion -> PROC ID PARIZQ lista_parametros_opt . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER

    PARDER          shift and go to state 163


state 138

    (99) lista_parametros_opt -> lista_parametros .
    (101) lista_parametros -> lista_parametros . COMA tipo DOSPUNTOS ID

    PARDER          reduce using rule 99 (lista_parametros_opt -> lista_parametros .)
    COMA            shift and go to state 164


state 139

    (102) lista_parametros -> tipo . DOSPUNTOS ID

    DOSPUNTOS       shift and go to state 165


state 140

    (108) argumento_exec -> ID .

    COMA            reduce using rule 108 (argumento_exec -> ID .)
    PARDER          reduce using rule 108 (argumento_exec -> ID .)


state 141

    (103) expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt . PARDER PTCOMA

    PARDER          shift and go to state 166


state 142

    (104) lista_argumentos_exec_opt -> lista_argumentos_exec .
    (106) lista_argumentos_exec -> lista_argumentos_exec . COMA argumento_exec

    PARDER          reduce using rule 104 (lista_argumentos_exec_opt -> lista_argumentos_exec .)
    COMA            shift and go to state 167


state 143

    (107) lista_argumentos_exec -> argumento_exec .

    COMA            reduce using rule 107 (lista_argumentos_exec -> argumento_exec .)
    PARDER          reduce using rule 107 (lista_argumentos_exec -> argumento_exec .)


state 144

    (109) argumento_exec -> ENTERO .

    COMA            reduce using rule 109 (argumento_exec -> ENTERO .)
    PARDER          reduce using rule 109 (argumento_exec -> ENTERO .)


state 145

    (110) argumento_exec -> DECIMAL .

    COMA            reduce using rule 110 (argumento_exec -> DECIMAL .)
    PARDER          reduce using rule 110 (argumento_exec -> DECIMAL .)


state 146

    (111) argumento_exec -> CARACTER .

    COMA            reduce using rule 111 (argumento_exec -> CARACTER .)
    PARDER          reduce using rule 111 (argumento_exec -> CARACTER .)


state 147

    (112) argumento_exec -> CADENA .

    COMA            reduce using rule 112 (argumento_exec -> CADENA .)
    PARDER          reduce using rule 112 (argumento_exec -> CADENA .)


state 148

    (113) argumento_exec -> TRUE .

    COMA            reduce using rule 113 (argumento_exec -> TRUE .)
    PARDER          reduce using rule 113 (argumento_exec -> TRUE .)


state 149

    (114) argumento_exec -> FALSE .

    COMA            reduce using rule 114 (argumento_exec -> FALSE .)
    PARDER          reduce using rule 114 (argumento_exec -> FALSE .)


state 150

    (9) expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER
    (72) expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ . LLAVE_DER
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (78) lista_expresiones -> .
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for SENO resolved as shift
  ! shift/reduce conflict for COSENO resolved as shift
  ! shift/reduce conflict for INV resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for NOT_LOGICO resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for VECTOR resolved as shift
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for EXEC resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_DER       shift and go to state 169
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

  ! LLAVE_DER       [ reduce using rule 78 (lista_expresiones -> .) ]
  ! WHILE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DO              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! IF              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ENTERO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DECIMAL         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FOR             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! TRUE            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FALSE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CARACTER        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CADENA          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ID              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! MENOS           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SENO            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! COSENO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INV             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! NOT_LOGICO      [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BREAK           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PARIZQ          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SWITCH          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! VECTOR          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PROC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! EXEC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INT             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FLOAT           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CHAR            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! STRING          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BOOL            [ reduce using rule 78 (lista_expresiones -> .) ]

    expresion                      shift and go to state 98
    lista_expresiones              shift and go to state 168
    tipo                           shift and go to state 13

state 151

    (10) expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 170


state 152

    (75) expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ . expresion PARDER PTCOMA
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 171
    tipo                           shift and go to state 13

state 153

    (11) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER
    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER ELSE expresion
    (71) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ . LLAVE_DER
    (76) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ . LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (78) lista_expresiones -> .
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for SENO resolved as shift
  ! shift/reduce conflict for COSENO resolved as shift
  ! shift/reduce conflict for INV resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for NOT_LOGICO resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for VECTOR resolved as shift
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for EXEC resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_DER       shift and go to state 173
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

  ! LLAVE_DER       [ reduce using rule 78 (lista_expresiones -> .) ]
  ! WHILE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DO              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! IF              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ENTERO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DECIMAL         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FOR             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! TRUE            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FALSE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CARACTER        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CADENA          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ID              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! MENOS           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SENO            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! COSENO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INV             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! NOT_LOGICO      [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BREAK           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PARIZQ          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SWITCH          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! VECTOR          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PROC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! EXEC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INT             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FLOAT           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CHAR            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! STRING          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BOOL            [ reduce using rule 78 (lista_expresiones -> .) ]

    expresion                      shift and go to state 98
    lista_expresiones              shift and go to state 172
    tipo                           shift and go to state 13

state 154

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION . expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (73) expresion -> FOR PARIZQ tipo ID ASIGNACION . expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    tipo                           shift and go to state 13
    expresion                      shift and go to state 174

state 155

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion . PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (74) expresion -> FOR PARIZQ ID ASIGNACION expresion . PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 175
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 156

    (46) expresion -> tipo ID ASIGNACION expresion PTCOMA .

    PTCOMA          reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    MAS             reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    MENOS           reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    POR             reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    DIVIDIDO        reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    POTENCIA        reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    MODULO          reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    OR_LOGICO       reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    AND_LOGICO      reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    XOR_LOGICO      reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    GE              reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    LE              reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    LT              reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    GT              reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    EQ              reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    NE              reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    $end            reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    WHILE           reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    DO              reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    IF              reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    ENTERO          reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    DECIMAL         reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    FOR             reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    TRUE            reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    FALSE           reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    CARACTER        reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    CADENA          reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    ID              reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    SENO            reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    COSENO          reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    INV             reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    PRINTLN         reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    NOT_LOGICO      reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    BREAK           reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    CONTINUE        reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    PARIZQ          reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    SWITCH          reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    VECTOR          reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    PROC            reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    EXEC            reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    INT             reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    FLOAT           reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    CHAR            reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    STRING          reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    BOOL            reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    PARDER          reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    LLAVE_DER       reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    CORDER          reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    DOSPUNTOS       reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    DEFAULT         reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    CASE            reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    COMA            reduce using rule 46 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)


state 157

    (94) expresion -> ID lista_indices ASIGNACION expresion PTCOMA .

    PTCOMA          reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    MAS             reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    MENOS           reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    POR             reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    DIVIDIDO        reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    POTENCIA        reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    MODULO          reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    OR_LOGICO       reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    AND_LOGICO      reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    XOR_LOGICO      reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    GE              reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    LE              reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    LT              reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    GT              reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    EQ              reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    NE              reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    $end            reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    WHILE           reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    DO              reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    IF              reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    ENTERO          reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    DECIMAL         reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    FOR             reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    TRUE            reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    FALSE           reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    CARACTER        reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    CADENA          reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    ID              reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    SENO            reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    COSENO          reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    INV             reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    PRINTLN         reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    NOT_LOGICO      reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    BREAK           reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    CONTINUE        reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    PARIZQ          reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    SWITCH          reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    VECTOR          reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    PROC            reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    EXEC            reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    INT             reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    FLOAT           reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    CHAR            reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    STRING          reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    BOOL            reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    PARDER          reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    LLAVE_DER       reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    CORDER          reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    DOSPUNTOS       reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    DEFAULT         reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    CASE            reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)
    COMA            reduce using rule 94 (expresion -> ID lista_indices ASIGNACION expresion PTCOMA .)


state 158

    (95) lista_indices -> lista_indices CORIZQ expresion CORDER .

    ASIGNACION      reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    MAS             reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    MENOS           reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    POR             reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    POTENCIA        reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    MODULO          reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    OR_LOGICO       reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    AND_LOGICO      reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    XOR_LOGICO      reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    GE              reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    LE              reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    LT              reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    GT              reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    EQ              reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    NE              reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    $end            reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    WHILE           reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    DO              reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    IF              reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    ENTERO          reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    DECIMAL         reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    FOR             reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    TRUE            reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    FALSE           reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    CARACTER        reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    CADENA          reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    ID              reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    SENO            reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    COSENO          reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    INV             reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    PRINTLN         reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    NOT_LOGICO      reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    BREAK           reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    CONTINUE        reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    PARIZQ          reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    SWITCH          reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    VECTOR          reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    PROC            reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    EXEC            reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    INT             reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    FLOAT           reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    CHAR            reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    STRING          reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    BOOL            reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    PARDER          reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    LLAVE_DER       reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    CORDER          reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    DOSPUNTOS       reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    DEFAULT         reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    CASE            reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)
    COMA            reduce using rule 95 (lista_indices -> lista_indices CORIZQ expresion CORDER .)


state 159

    (40) expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .

    PTCOMA          reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    MAS             reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    MENOS           reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    POR             reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    DIVIDIDO        reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    POTENCIA        reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    MODULO          reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    OR_LOGICO       reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    AND_LOGICO      reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    XOR_LOGICO      reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    GE              reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    LE              reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    LT              reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    GT              reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    EQ              reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    NE              reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    DO              reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    ENTERO          reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    DECIMAL         reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    TRUE            reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    FALSE           reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    CARACTER        reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    CADENA          reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    SENO            reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    COSENO          reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    INV             reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    NOT_LOGICO      reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    PARIZQ          reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    SWITCH          reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    VECTOR          reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    PROC            reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    EXEC            reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    INT             reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    FLOAT           reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    CHAR            reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    STRING          reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    BOOL            reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    PARDER          reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    LLAVE_DER       reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    CORDER          reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    DOSPUNTOS       reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    DEFAULT         reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    CASE            reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 40 (expresion -> PRINTLN PARIZQ expresion PARDER PTCOMA .)


state 160

    (42) expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .

    PTCOMA          reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    MAS             reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    MENOS           reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    POR             reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    DIVIDIDO        reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    POTENCIA        reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    MODULO          reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    OR_LOGICO       reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    AND_LOGICO      reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    XOR_LOGICO      reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    GE              reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    LE              reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    LT              reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    GT              reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    EQ              reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    NE              reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    $end            reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    WHILE           reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    DO              reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    IF              reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    ENTERO          reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    DECIMAL         reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    FOR             reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    TRUE            reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    FALSE           reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    CARACTER        reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    CADENA          reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    ID              reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    SENO            reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    COSENO          reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    INV             reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    PRINTLN         reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    NOT_LOGICO      reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    BREAK           reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    CONTINUE        reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    PARIZQ          reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    SWITCH          reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    VECTOR          reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    PROC            reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    EXEC            reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    INT             reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    FLOAT           reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    CHAR            reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    STRING          reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    BOOL            reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    PARDER          reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    LLAVE_DER       reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    CORDER          reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    DOSPUNTOS       reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    DEFAULT         reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    CASE            reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)
    COMA            reduce using rule 42 (expresion -> PRINTLN PARIZQ oraciones PARDER PTCOMA .)


state 161

    (64) expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ . lista_cases_opt LLAVE_DER
    (65) lista_cases_opt -> . lista_cases case_default
    (66) lista_cases_opt -> . lista_cases
    (67) lista_cases -> . lista_cases case
    (68) lista_cases -> . case
    (69) case -> . CASE expresion DOSPUNTOS lista_expresiones

    CASE            shift and go to state 179

    lista_cases_opt                shift and go to state 176
    lista_cases                    shift and go to state 177
    case                           shift and go to state 178

state 162

    (79) expresion -> VECTOR CORIZQ tipo CORDER ID . PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> VECTOR CORIZQ tipo CORDER ID . PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> VECTOR CORIZQ tipo CORDER ID . PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> VECTOR CORIZQ tipo CORDER ID . PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> VECTOR CORIZQ tipo CORDER ID . PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA

    PARIZQ          shift and go to state 180


state 163

    (98) expresion -> PROC ID PARIZQ lista_parametros_opt PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER

    LLAVE_IZQ       shift and go to state 181


state 164

    (101) lista_parametros -> lista_parametros COMA . tipo DOSPUNTOS ID
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    tipo                           shift and go to state 182

state 165

    (102) lista_parametros -> tipo DOSPUNTOS . ID

    ID              shift and go to state 183


state 166

    (103) expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER . PTCOMA

    PTCOMA          shift and go to state 184


state 167

    (106) lista_argumentos_exec -> lista_argumentos_exec COMA . argumento_exec
    (108) argumento_exec -> . ID
    (109) argumento_exec -> . ENTERO
    (110) argumento_exec -> . DECIMAL
    (111) argumento_exec -> . CARACTER
    (112) argumento_exec -> . CADENA
    (113) argumento_exec -> . TRUE
    (114) argumento_exec -> . FALSE

    ID              shift and go to state 140
    ENTERO          shift and go to state 144
    DECIMAL         shift and go to state 145
    CARACTER        shift and go to state 146
    CADENA          shift and go to state 147
    TRUE            shift and go to state 148
    FALSE           shift and go to state 149

    argumento_exec                 shift and go to state 185

state 168

    (9) expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    LLAVE_DER       shift and go to state 186
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 38
    tipo                           shift and go to state 13

state 169

    (72) expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .

    PTCOMA          reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    MAS             reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    MENOS           reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    POR             reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DIVIDIDO        reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    POTENCIA        reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    MODULO          reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    OR_LOGICO       reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    AND_LOGICO      reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    XOR_LOGICO      reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    GE              reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    LE              reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    LT              reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    GT              reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    EQ              reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    NE              reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    $end            reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    WHILE           reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DO              reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    IF              reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    ENTERO          reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DECIMAL         reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    FOR             reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    TRUE            reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    FALSE           reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CARACTER        reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CADENA          reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    ID              reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    SENO            reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    COSENO          reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    INV             reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    PRINTLN         reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    NOT_LOGICO      reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    BREAK           reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CONTINUE        reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    PARIZQ          reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    SWITCH          reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    VECTOR          reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    PROC            reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    EXEC            reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    INT             reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    FLOAT           reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CHAR            reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    STRING          reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    BOOL            reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    PARDER          reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    LLAVE_DER       reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CORDER          reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DOSPUNTOS       reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DEFAULT         reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CASE            reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    COMA            reduce using rule 72 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)


state 170

    (10) expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ . expresion PARDER PTCOMA
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 187
    tipo                           shift and go to state 13

state 171

    (75) expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion . PARDER PTCOMA
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PARDER          shift and go to state 188
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 172

    (11) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER
    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER ELSE expresion
    (77) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    LLAVE_DER       shift and go to state 189
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 38
    tipo                           shift and go to state 13

state 173

    (71) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .
    (76) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER . ELSE LLAVE_IZQ lista_expresiones LLAVE_DER

    PTCOMA          reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    MAS             reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    MENOS           reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    POR             reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DIVIDIDO        reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    POTENCIA        reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    MODULO          reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    OR_LOGICO       reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    AND_LOGICO      reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    XOR_LOGICO      reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    GE              reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    LE              reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    LT              reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    GT              reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    EQ              reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    NE              reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    $end            reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    WHILE           reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DO              reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    IF              reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    ENTERO          reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DECIMAL         reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    FOR             reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    TRUE            reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    FALSE           reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CARACTER        reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CADENA          reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    ID              reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    SENO            reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    COSENO          reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    INV             reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    PRINTLN         reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    NOT_LOGICO      reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    BREAK           reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CONTINUE        reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    PARIZQ          reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    SWITCH          reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    VECTOR          reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    PROC            reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    EXEC            reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    INT             reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    FLOAT           reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CHAR            reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    STRING          reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    BOOL            reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    PARDER          reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    LLAVE_DER       reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CORDER          reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DOSPUNTOS       reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DEFAULT         reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CASE            reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    COMA            reduce using rule 71 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER .)
    ELSE            shift and go to state 190


state 174

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion . PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (73) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion . PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 191
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 175

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA . expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (74) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA . expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 192
    tipo                           shift and go to state 13

state 176

    (64) expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt . LLAVE_DER

    LLAVE_DER       shift and go to state 193


state 177

    (65) lista_cases_opt -> lista_cases . case_default
    (66) lista_cases_opt -> lista_cases .
    (67) lista_cases -> lista_cases . case
    (70) case_default -> . DEFAULT DOSPUNTOS lista_expresiones
    (69) case -> . CASE expresion DOSPUNTOS lista_expresiones

    LLAVE_DER       reduce using rule 66 (lista_cases_opt -> lista_cases .)
    DEFAULT         shift and go to state 196
    CASE            shift and go to state 179

    case_default                   shift and go to state 194
    case                           shift and go to state 195

state 178

    (68) lista_cases -> case .

    DEFAULT         reduce using rule 68 (lista_cases -> case .)
    CASE            reduce using rule 68 (lista_cases -> case .)
    LLAVE_DER       reduce using rule 68 (lista_cases -> case .)


state 179

    (69) case -> CASE . expresion DOSPUNTOS lista_expresiones
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 197
    tipo                           shift and go to state 13

state 180

    (79) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ . lista_dimensiones PARDER PTCOMA
    (80) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ . lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ . ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ . ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ . lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (84) lista_dimensiones -> . lista_dimensiones COMA ENTERO
    (85) lista_dimensiones -> . ENTERO

    ENTERO          shift and go to state 199

    lista_dimensiones              shift and go to state 198

state 181

    (98) expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (78) lista_expresiones -> .
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for SENO resolved as shift
  ! shift/reduce conflict for COSENO resolved as shift
  ! shift/reduce conflict for INV resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for NOT_LOGICO resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for VECTOR resolved as shift
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for EXEC resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_DER       reduce using rule 78 (lista_expresiones -> .)
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

  ! WHILE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DO              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! IF              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ENTERO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DECIMAL         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FOR             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! TRUE            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FALSE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CARACTER        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CADENA          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ID              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! MENOS           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SENO            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! COSENO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INV             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! NOT_LOGICO      [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BREAK           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PARIZQ          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SWITCH          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! VECTOR          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PROC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! EXEC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INT             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FLOAT           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CHAR            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! STRING          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BOOL            [ reduce using rule 78 (lista_expresiones -> .) ]

    lista_expresiones              shift and go to state 200
    expresion                      shift and go to state 98
    tipo                           shift and go to state 13

state 182

    (101) lista_parametros -> lista_parametros COMA tipo . DOSPUNTOS ID

    DOSPUNTOS       shift and go to state 201


state 183

    (102) lista_parametros -> tipo DOSPUNTOS ID .

    COMA            reduce using rule 102 (lista_parametros -> tipo DOSPUNTOS ID .)
    PARDER          reduce using rule 102 (lista_parametros -> tipo DOSPUNTOS ID .)


state 184

    (103) expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .

    PTCOMA          reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    MAS             reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    MENOS           reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    POR             reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    DIVIDIDO        reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    POTENCIA        reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    MODULO          reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    OR_LOGICO       reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    AND_LOGICO      reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    XOR_LOGICO      reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    GE              reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    LE              reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    LT              reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    GT              reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    EQ              reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    NE              reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    $end            reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    WHILE           reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    DO              reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    IF              reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    ENTERO          reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    DECIMAL         reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    FOR             reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    TRUE            reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    FALSE           reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    CARACTER        reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    CADENA          reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    ID              reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    SENO            reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    COSENO          reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    INV             reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    PRINTLN         reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    NOT_LOGICO      reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    BREAK           reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    CONTINUE        reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    PARIZQ          reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    SWITCH          reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    VECTOR          reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    PROC            reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    EXEC            reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    INT             reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    FLOAT           reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    CHAR            reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    STRING          reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    BOOL            reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    PARDER          reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    LLAVE_DER       reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    CORDER          reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    DOSPUNTOS       reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    DEFAULT         reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    CASE            reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)
    COMA            reduce using rule 103 (expresion -> EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA .)


state 185

    (106) lista_argumentos_exec -> lista_argumentos_exec COMA argumento_exec .

    COMA            reduce using rule 106 (lista_argumentos_exec -> lista_argumentos_exec COMA argumento_exec .)
    PARDER          reduce using rule 106 (lista_argumentos_exec -> lista_argumentos_exec COMA argumento_exec .)


state 186

    (9) expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .

    PTCOMA          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MAS             reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MENOS           reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POR             reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DIVIDIDO        reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POTENCIA        reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MODULO          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    OR_LOGICO       reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    AND_LOGICO      reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    XOR_LOGICO      reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GE              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LE              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LT              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GT              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EQ              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NE              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    $end            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    WHILE           reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DO              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    IF              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ENTERO          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DECIMAL         reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FOR             reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    TRUE            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FALSE           reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CARACTER        reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CADENA          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ID              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SENO            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    COSENO          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INV             reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PRINTLN         reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NOT_LOGICO      reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BREAK           reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CONTINUE        reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARIZQ          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SWITCH          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    VECTOR          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PROC            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EXEC            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INT             reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FLOAT           reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CHAR            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    STRING          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BOOL            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARDER          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LLAVE_DER       reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CORDER          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DOSPUNTOS       reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DEFAULT         reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CASE            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    COMA            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)


state 187

    (10) expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion . PARDER PTCOMA
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PARDER          shift and go to state 202
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 188

    (75) expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 203


state 189

    (11) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .
    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER . ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER . ELSE expresion
    (77) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER . ELSE LLAVE_IZQ LLAVE_DER

    PTCOMA          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MAS             reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MENOS           reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POR             reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DIVIDIDO        reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POTENCIA        reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MODULO          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    OR_LOGICO       reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    AND_LOGICO      reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    XOR_LOGICO      reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GE              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LE              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LT              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GT              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EQ              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NE              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    $end            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    WHILE           reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DO              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    IF              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ENTERO          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DECIMAL         reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FOR             reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    TRUE            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FALSE           reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CARACTER        reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CADENA          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ID              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SENO            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    COSENO          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INV             reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PRINTLN         reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NOT_LOGICO      reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BREAK           reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CONTINUE        reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARIZQ          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SWITCH          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    VECTOR          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PROC            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EXEC            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INT             reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FLOAT           reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CHAR            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    STRING          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BOOL            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARDER          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LLAVE_DER       reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CORDER          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DOSPUNTOS       reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DEFAULT         reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CASE            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    COMA            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ELSE            shift and go to state 204


state 190

    (76) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE . LLAVE_IZQ lista_expresiones LLAVE_DER

    LLAVE_IZQ       shift and go to state 205


state 191

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA . expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (73) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA . expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    tipo                           shift and go to state 13
    expresion                      shift and go to state 206

state 192

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion . PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (74) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion . PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 207
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 193

    (64) expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .

    PTCOMA          reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    MAS             reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    MENOS           reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    POR             reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    DIVIDIDO        reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    POTENCIA        reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    MODULO          reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    OR_LOGICO       reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    AND_LOGICO      reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    XOR_LOGICO      reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    GE              reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    LE              reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    LT              reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    GT              reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    EQ              reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    NE              reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    $end            reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    WHILE           reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    DO              reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    IF              reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    ENTERO          reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    DECIMAL         reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    FOR             reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    TRUE            reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    FALSE           reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    CARACTER        reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    CADENA          reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    ID              reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    SENO            reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    COSENO          reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    INV             reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    PRINTLN         reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    NOT_LOGICO      reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    BREAK           reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    CONTINUE        reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    PARIZQ          reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    SWITCH          reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    VECTOR          reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    PROC            reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    EXEC            reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    INT             reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    FLOAT           reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    CHAR            reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    STRING          reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    BOOL            reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    PARDER          reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    LLAVE_DER       reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    CORDER          reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    DOSPUNTOS       reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    DEFAULT         reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    CASE            reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)
    COMA            reduce using rule 64 (expresion -> SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER .)


state 194

    (65) lista_cases_opt -> lista_cases case_default .

    LLAVE_DER       reduce using rule 65 (lista_cases_opt -> lista_cases case_default .)


state 195

    (67) lista_cases -> lista_cases case .

    DEFAULT         reduce using rule 67 (lista_cases -> lista_cases case .)
    CASE            reduce using rule 67 (lista_cases -> lista_cases case .)
    LLAVE_DER       reduce using rule 67 (lista_cases -> lista_cases case .)


state 196

    (70) case_default -> DEFAULT . DOSPUNTOS lista_expresiones

    DOSPUNTOS       shift and go to state 208


state 197

    (69) case -> CASE expresion . DOSPUNTOS lista_expresiones
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    DOSPUNTOS       shift and go to state 209
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 198

    (79) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones . PARDER PTCOMA
    (80) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones . PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (83) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones . PARDER ASIGNACION lista_valores PTCOMA
    (84) lista_dimensiones -> lista_dimensiones . COMA ENTERO

    PARDER          shift and go to state 210
    COMA            shift and go to state 211


state 199

    (81) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO . PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO . PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (85) lista_dimensiones -> ENTERO .

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 212
    COMA            reduce using rule 85 (lista_dimensiones -> ENTERO .)

  ! PARDER          [ reduce using rule 85 (lista_dimensiones -> ENTERO .) ]


state 200

    (98) expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    LLAVE_DER       shift and go to state 213
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 38
    tipo                           shift and go to state 13

state 201

    (101) lista_parametros -> lista_parametros COMA tipo DOSPUNTOS . ID

    ID              shift and go to state 214


state 202

    (10) expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 215


state 203

    (75) expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .

    PTCOMA          reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    MAS             reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    MENOS           reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    POR             reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    DIVIDIDO        reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    POTENCIA        reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    MODULO          reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    OR_LOGICO       reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    AND_LOGICO      reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    XOR_LOGICO      reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    GE              reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    LE              reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    LT              reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    GT              reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    EQ              reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    NE              reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    DO              reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    ENTERO          reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    DECIMAL         reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    TRUE            reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    FALSE           reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    CARACTER        reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    CADENA          reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    SENO            reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    COSENO          reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    INV             reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    NOT_LOGICO      reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    PARIZQ          reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    SWITCH          reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    VECTOR          reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    PROC            reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    EXEC            reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    INT             reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    FLOAT           reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    CHAR            reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    STRING          reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    BOOL            reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    PARDER          reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    LLAVE_DER       reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    CORDER          reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    DOSPUNTOS       reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    DEFAULT         reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    CASE            reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 75 (expresion -> DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)


state 204

    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE . LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE . expresion
    (77) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE . LLAVE_IZQ LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    LLAVE_IZQ       shift and go to state 217
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 216
    tipo                           shift and go to state 13

state 205

    (76) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ . lista_expresiones LLAVE_DER
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (78) lista_expresiones -> .
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for SENO resolved as shift
  ! shift/reduce conflict for COSENO resolved as shift
  ! shift/reduce conflict for INV resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for NOT_LOGICO resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for VECTOR resolved as shift
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for EXEC resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_DER       reduce using rule 78 (lista_expresiones -> .)
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

  ! WHILE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DO              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! IF              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ENTERO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DECIMAL         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FOR             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! TRUE            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FALSE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CARACTER        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CADENA          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ID              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! MENOS           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SENO            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! COSENO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INV             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! NOT_LOGICO      [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BREAK           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PARIZQ          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SWITCH          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! VECTOR          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PROC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! EXEC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INT             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FLOAT           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CHAR            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! STRING          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BOOL            [ reduce using rule 78 (lista_expresiones -> .) ]

    expresion                      shift and go to state 98
    lista_expresiones              shift and go to state 218
    tipo                           shift and go to state 13

state 206

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion . PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (73) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion . PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 219
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 207

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (74) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA . expresion PARDER LLAVE_IZQ LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 220
    tipo                           shift and go to state 13

state 208

    (70) case_default -> DEFAULT DOSPUNTOS . lista_expresiones
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (78) lista_expresiones -> .
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for SENO resolved as shift
  ! shift/reduce conflict for COSENO resolved as shift
  ! shift/reduce conflict for INV resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for NOT_LOGICO resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for VECTOR resolved as shift
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for EXEC resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_DER       reduce using rule 78 (lista_expresiones -> .)
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

  ! WHILE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DO              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! IF              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ENTERO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DECIMAL         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FOR             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! TRUE            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FALSE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CARACTER        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CADENA          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ID              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! MENOS           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SENO            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! COSENO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INV             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! NOT_LOGICO      [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BREAK           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PARIZQ          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SWITCH          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! VECTOR          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PROC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! EXEC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INT             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FLOAT           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CHAR            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! STRING          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BOOL            [ reduce using rule 78 (lista_expresiones -> .) ]

    lista_expresiones              shift and go to state 221
    expresion                      shift and go to state 98
    tipo                           shift and go to state 13

state 209

    (69) case -> CASE expresion DOSPUNTOS . lista_expresiones
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (78) lista_expresiones -> .
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for SENO resolved as shift
  ! shift/reduce conflict for COSENO resolved as shift
  ! shift/reduce conflict for INV resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for NOT_LOGICO resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for VECTOR resolved as shift
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for EXEC resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    DEFAULT         reduce using rule 78 (lista_expresiones -> .)
    CASE            reduce using rule 78 (lista_expresiones -> .)
    LLAVE_DER       reduce using rule 78 (lista_expresiones -> .)
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

  ! WHILE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DO              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! IF              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ENTERO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DECIMAL         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FOR             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! TRUE            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FALSE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CARACTER        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CADENA          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ID              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! MENOS           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SENO            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! COSENO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INV             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! NOT_LOGICO      [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BREAK           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PARIZQ          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SWITCH          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! VECTOR          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PROC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! EXEC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INT             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FLOAT           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CHAR            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! STRING          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BOOL            [ reduce using rule 78 (lista_expresiones -> .) ]

    expresion                      shift and go to state 98
    lista_expresiones              shift and go to state 222
    tipo                           shift and go to state 13

state 210

    (79) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER . PTCOMA
    (80) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER . ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (83) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER . ASIGNACION lista_valores PTCOMA

    PTCOMA          shift and go to state 223
    ASIGNACION      shift and go to state 224


state 211

    (84) lista_dimensiones -> lista_dimensiones COMA . ENTERO

    ENTERO          shift and go to state 225


state 212

    (81) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER . ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER . ASIGNACION SORT PARIZQ ID PARDER PTCOMA

    ASIGNACION      shift and go to state 226


state 213

    (98) expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .

    PTCOMA          reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MAS             reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MENOS           reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POR             reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DIVIDIDO        reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POTENCIA        reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MODULO          reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    OR_LOGICO       reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    AND_LOGICO      reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    XOR_LOGICO      reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GE              reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LE              reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LT              reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GT              reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EQ              reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NE              reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    $end            reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    WHILE           reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DO              reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    IF              reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ENTERO          reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DECIMAL         reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FOR             reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    TRUE            reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FALSE           reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CARACTER        reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CADENA          reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ID              reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SENO            reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    COSENO          reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INV             reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PRINTLN         reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NOT_LOGICO      reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BREAK           reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CONTINUE        reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARIZQ          reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SWITCH          reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    VECTOR          reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PROC            reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EXEC            reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INT             reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FLOAT           reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CHAR            reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    STRING          reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BOOL            reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARDER          reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LLAVE_DER       reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CORDER          reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DOSPUNTOS       reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DEFAULT         reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CASE            reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    COMA            reduce using rule 98 (expresion -> PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)


state 214

    (101) lista_parametros -> lista_parametros COMA tipo DOSPUNTOS ID .

    COMA            reduce using rule 101 (lista_parametros -> lista_parametros COMA tipo DOSPUNTOS ID .)
    PARDER          reduce using rule 101 (lista_parametros -> lista_parametros COMA tipo DOSPUNTOS ID .)


state 215

    (10) expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .

    PTCOMA          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    MAS             reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    MENOS           reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    POR             reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    DIVIDIDO        reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    POTENCIA        reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    MODULO          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    OR_LOGICO       reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    AND_LOGICO      reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    XOR_LOGICO      reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    GE              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    LE              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    LT              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    GT              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    EQ              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    NE              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    DO              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    ENTERO          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    DECIMAL         reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    TRUE            reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    FALSE           reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    CARACTER        reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    CADENA          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    SENO            reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    COSENO          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    INV             reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    NOT_LOGICO      reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    PARIZQ          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    SWITCH          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    VECTOR          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    PROC            reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    EXEC            reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    INT             reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    FLOAT           reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    CHAR            reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    STRING          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    BOOL            reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    PARDER          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    LLAVE_DER       reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    CORDER          reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    DOSPUNTOS       reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    DEFAULT         reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    CASE            reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 10 (expresion -> DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA .)


state 216

    (13) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for OR_LOGICO resolved as shift
  ! shift/reduce conflict for AND_LOGICO resolved as shift
  ! shift/reduce conflict for XOR_LOGICO resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    PTCOMA          reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    $end            reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    WHILE           reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    DO              reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    IF              reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    ENTERO          reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    DECIMAL         reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    FOR             reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    TRUE            reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    FALSE           reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    CARACTER        reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    CADENA          reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    ID              reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    SENO            reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    COSENO          reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    INV             reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    PRINTLN         reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    NOT_LOGICO      reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    BREAK           reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    CONTINUE        reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    PARIZQ          reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    SWITCH          reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    VECTOR          reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    PROC            reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    EXEC            reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    INT             reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    FLOAT           reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    CHAR            reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    STRING          reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    BOOL            reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    PARDER          reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    LLAVE_DER       reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    CORDER          reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    DOSPUNTOS       reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    DEFAULT         reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    CASE            reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    COMA            reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54

  ! MAS             [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! MENOS           [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! POR             [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! POTENCIA        [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! MODULO          [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! OR_LOGICO       [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! AND_LOGICO      [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! XOR_LOGICO      [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! GE              [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! LE              [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! LT              [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! GT              [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! EQ              [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! NE              [ reduce using rule 13 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]


state 217

    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ . lista_expresiones LLAVE_DER
    (77) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ . LLAVE_DER
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (78) lista_expresiones -> .
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for SENO resolved as shift
  ! shift/reduce conflict for COSENO resolved as shift
  ! shift/reduce conflict for INV resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for NOT_LOGICO resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for VECTOR resolved as shift
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for EXEC resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_DER       shift and go to state 228
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

  ! LLAVE_DER       [ reduce using rule 78 (lista_expresiones -> .) ]
  ! WHILE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DO              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! IF              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ENTERO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DECIMAL         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FOR             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! TRUE            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FALSE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CARACTER        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CADENA          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ID              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! MENOS           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SENO            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! COSENO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INV             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! NOT_LOGICO      [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BREAK           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PARIZQ          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SWITCH          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! VECTOR          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PROC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! EXEC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INT             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FLOAT           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CHAR            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! STRING          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BOOL            [ reduce using rule 78 (lista_expresiones -> .) ]

    expresion                      shift and go to state 98
    lista_expresiones              shift and go to state 227
    tipo                           shift and go to state 13

state 218

    (76) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones . LLAVE_DER
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    LLAVE_DER       shift and go to state 229
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 38
    tipo                           shift and go to state 13

state 219

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (73) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA . expresion PARDER LLAVE_IZQ LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    tipo                           shift and go to state 13
    expresion                      shift and go to state 230

state 220

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (74) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion . PARDER LLAVE_IZQ LLAVE_DER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PARDER          shift and go to state 231
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 221

    (70) case_default -> DEFAULT DOSPUNTOS lista_expresiones .
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    LLAVE_DER       reduce using rule 70 (case_default -> DEFAULT DOSPUNTOS lista_expresiones .)
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 38
    tipo                           shift and go to state 13

state 222

    (69) case -> CASE expresion DOSPUNTOS lista_expresiones .
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    DEFAULT         reduce using rule 69 (case -> CASE expresion DOSPUNTOS lista_expresiones .)
    CASE            reduce using rule 69 (case -> CASE expresion DOSPUNTOS lista_expresiones .)
    LLAVE_DER       reduce using rule 69 (case -> CASE expresion DOSPUNTOS lista_expresiones .)
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 38
    tipo                           shift and go to state 13

state 223

    (79) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .

    PTCOMA          reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    MAS             reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    MENOS           reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    POR             reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    DIVIDIDO        reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    POTENCIA        reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    MODULO          reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    OR_LOGICO       reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    AND_LOGICO      reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    XOR_LOGICO      reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    GE              reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    LE              reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    LT              reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    GT              reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    EQ              reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    NE              reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    $end            reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    WHILE           reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    DO              reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    IF              reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    ENTERO          reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    DECIMAL         reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    FOR             reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    TRUE            reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    FALSE           reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    CARACTER        reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    CADENA          reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    ID              reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    SENO            reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    COSENO          reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    INV             reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    NOT_LOGICO      reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    BREAK           reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    PARIZQ          reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    SWITCH          reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    VECTOR          reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    PROC            reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    EXEC            reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    INT             reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    FLOAT           reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    CHAR            reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    STRING          reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    BOOL            reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    PARDER          reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    LLAVE_DER       reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    CORDER          reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    DOSPUNTOS       reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    DEFAULT         reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    CASE            reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)
    COMA            reduce using rule 79 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA .)


state 224

    (80) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION . SHUFFLE PARIZQ ID PARDER PTCOMA
    (83) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION . lista_valores PTCOMA
    (86) lista_valores -> . lista_valores COMA fila_vector
    (87) lista_valores -> . lista_valores COMA CORIZQ lista_elementos CORDER
    (88) lista_valores -> . fila_vector
    (89) lista_valores -> . CORIZQ lista_elementos CORDER
    (90) fila_vector -> . CORIZQ lista_elementos CORDER

    SHUFFLE         shift and go to state 233
    CORIZQ          shift and go to state 232

    lista_valores                  shift and go to state 234
    fila_vector                    shift and go to state 235

state 225

    (84) lista_dimensiones -> lista_dimensiones COMA ENTERO .

    PARDER          reduce using rule 84 (lista_dimensiones -> lista_dimensiones COMA ENTERO .)
    COMA            reduce using rule 84 (lista_dimensiones -> lista_dimensiones COMA ENTERO .)


state 226

    (81) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION . CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION . SORT PARIZQ ID PARDER PTCOMA

    CORIZQ          shift and go to state 236
    SORT            shift and go to state 237


state 227

    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones . LLAVE_DER
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    LLAVE_DER       shift and go to state 238
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 38
    tipo                           shift and go to state 13

state 228

    (77) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .

    PTCOMA          reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    MAS             reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    MENOS           reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    POR             reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    DIVIDIDO        reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    POTENCIA        reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    MODULO          reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    OR_LOGICO       reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    AND_LOGICO      reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    XOR_LOGICO      reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    GE              reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    LE              reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    LT              reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    GT              reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    EQ              reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    NE              reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    $end            reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    WHILE           reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    DO              reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    IF              reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    ENTERO          reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    DECIMAL         reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    FOR             reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    TRUE            reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    FALSE           reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    CARACTER        reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    CADENA          reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    ID              reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    SENO            reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    COSENO          reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    INV             reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    PRINTLN         reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    NOT_LOGICO      reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    BREAK           reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    CONTINUE        reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    PARIZQ          reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    SWITCH          reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    VECTOR          reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    PROC            reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    EXEC            reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    INT             reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    FLOAT           reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    CHAR            reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    STRING          reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    BOOL            reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    PARDER          reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    LLAVE_DER       reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    CORDER          reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    DOSPUNTOS       reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    DEFAULT         reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    CASE            reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)
    COMA            reduce using rule 77 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER .)


state 229

    (76) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .

    PTCOMA          reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MAS             reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MENOS           reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POR             reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DIVIDIDO        reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POTENCIA        reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MODULO          reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    OR_LOGICO       reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    AND_LOGICO      reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    XOR_LOGICO      reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GE              reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LE              reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LT              reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GT              reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EQ              reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NE              reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    $end            reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    WHILE           reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DO              reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    IF              reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ENTERO          reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DECIMAL         reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FOR             reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    TRUE            reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FALSE           reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CARACTER        reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CADENA          reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ID              reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SENO            reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    COSENO          reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INV             reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PRINTLN         reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NOT_LOGICO      reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BREAK           reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CONTINUE        reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARIZQ          reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SWITCH          reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    VECTOR          reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PROC            reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EXEC            reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INT             reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FLOAT           reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CHAR            reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    STRING          reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BOOL            reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARDER          reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LLAVE_DER       reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CORDER          reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DOSPUNTOS       reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DEFAULT         reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CASE            reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    COMA            reduce using rule 76 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)


state 230

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (73) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion . PARDER LLAVE_IZQ LLAVE_DER
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    PARDER          shift and go to state 239
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 231

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER
    (74) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER . LLAVE_IZQ LLAVE_DER

    LLAVE_IZQ       shift and go to state 240


state 232

    (89) lista_valores -> CORIZQ . lista_elementos CORDER
    (90) fila_vector -> CORIZQ . lista_elementos CORDER
    (91) lista_elementos -> . lista_elementos COMA expresion
    (92) lista_elementos -> . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    lista_elementos                shift and go to state 241
    expresion                      shift and go to state 242
    tipo                           shift and go to state 13

state 233

    (80) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE . PARIZQ ID PARDER PTCOMA

    PARIZQ          shift and go to state 243


state 234

    (83) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores . PTCOMA
    (86) lista_valores -> lista_valores . COMA fila_vector
    (87) lista_valores -> lista_valores . COMA CORIZQ lista_elementos CORDER

    PTCOMA          shift and go to state 244
    COMA            shift and go to state 245


state 235

    (88) lista_valores -> fila_vector .

    PTCOMA          reduce using rule 88 (lista_valores -> fila_vector .)
    COMA            reduce using rule 88 (lista_valores -> fila_vector .)


state 236

    (81) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ . lista_elementos CORDER PTCOMA
    (91) lista_elementos -> . lista_elementos COMA expresion
    (92) lista_elementos -> . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    tipo                           shift and go to state 13
    lista_elementos                shift and go to state 246
    expresion                      shift and go to state 242

state 237

    (82) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT . PARIZQ ID PARDER PTCOMA

    PARIZQ          shift and go to state 247


state 238

    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .

    PTCOMA          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MAS             reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MENOS           reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POR             reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DIVIDIDO        reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POTENCIA        reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MODULO          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    OR_LOGICO       reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    AND_LOGICO      reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    XOR_LOGICO      reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GE              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LE              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LT              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GT              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EQ              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NE              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    $end            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    WHILE           reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DO              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    IF              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ENTERO          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DECIMAL         reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FOR             reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    TRUE            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FALSE           reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CARACTER        reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CADENA          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ID              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SENO            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    COSENO          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INV             reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PRINTLN         reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NOT_LOGICO      reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BREAK           reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CONTINUE        reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARIZQ          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SWITCH          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    VECTOR          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PROC            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EXEC            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INT             reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FLOAT           reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CHAR            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    STRING          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BOOL            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARDER          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LLAVE_DER       reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CORDER          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DOSPUNTOS       reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DEFAULT         reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CASE            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    COMA            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)


state 239

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER
    (73) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER . LLAVE_IZQ LLAVE_DER

    LLAVE_IZQ       shift and go to state 248


state 240

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER
    (74) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ . LLAVE_DER
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (78) lista_expresiones -> .
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for SENO resolved as shift
  ! shift/reduce conflict for COSENO resolved as shift
  ! shift/reduce conflict for INV resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for NOT_LOGICO resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for VECTOR resolved as shift
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for EXEC resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_DER       shift and go to state 250
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

  ! LLAVE_DER       [ reduce using rule 78 (lista_expresiones -> .) ]
  ! WHILE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DO              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! IF              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ENTERO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DECIMAL         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FOR             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! TRUE            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FALSE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CARACTER        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CADENA          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ID              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! MENOS           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SENO            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! COSENO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INV             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! NOT_LOGICO      [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BREAK           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PARIZQ          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SWITCH          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! VECTOR          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PROC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! EXEC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INT             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FLOAT           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CHAR            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! STRING          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BOOL            [ reduce using rule 78 (lista_expresiones -> .) ]

    expresion                      shift and go to state 98
    lista_expresiones              shift and go to state 249
    tipo                           shift and go to state 13

state 241

    (89) lista_valores -> CORIZQ lista_elementos . CORDER
    (90) fila_vector -> CORIZQ lista_elementos . CORDER
    (91) lista_elementos -> lista_elementos . COMA expresion

    CORDER          shift and go to state 251
    COMA            shift and go to state 252


state 242

    (92) lista_elementos -> expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    CORDER          reduce using rule 92 (lista_elementos -> expresion .)
    COMA            reduce using rule 92 (lista_elementos -> expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 243

    (80) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ . ID PARDER PTCOMA

    ID              shift and go to state 253


state 244

    (83) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .

    PTCOMA          reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    MAS             reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    MENOS           reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    POR             reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    DIVIDIDO        reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    POTENCIA        reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    MODULO          reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    OR_LOGICO       reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    AND_LOGICO      reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    XOR_LOGICO      reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    GE              reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    LE              reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    LT              reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    GT              reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    EQ              reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    NE              reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    $end            reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    WHILE           reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    DO              reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    IF              reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    ENTERO          reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    DECIMAL         reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    FOR             reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    TRUE            reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    FALSE           reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    CARACTER        reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    CADENA          reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    ID              reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    SENO            reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    COSENO          reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    INV             reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    PRINTLN         reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    NOT_LOGICO      reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    BREAK           reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    CONTINUE        reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    PARIZQ          reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    SWITCH          reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    VECTOR          reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    PROC            reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    EXEC            reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    INT             reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    FLOAT           reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    CHAR            reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    STRING          reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    BOOL            reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    PARDER          reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    LLAVE_DER       reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    CORDER          reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    DOSPUNTOS       reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    DEFAULT         reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    CASE            reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)
    COMA            reduce using rule 83 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA .)


state 245

    (86) lista_valores -> lista_valores COMA . fila_vector
    (87) lista_valores -> lista_valores COMA . CORIZQ lista_elementos CORDER
    (90) fila_vector -> . CORIZQ lista_elementos CORDER

    CORIZQ          shift and go to state 255

    fila_vector                    shift and go to state 254

state 246

    (81) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos . CORDER PTCOMA
    (91) lista_elementos -> lista_elementos . COMA expresion

    CORDER          shift and go to state 256
    COMA            shift and go to state 252


state 247

    (82) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ . ID PARDER PTCOMA

    ID              shift and go to state 257


state 248

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER
    (73) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ . LLAVE_DER
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (78) lista_expresiones -> .
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for SENO resolved as shift
  ! shift/reduce conflict for COSENO resolved as shift
  ! shift/reduce conflict for INV resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for NOT_LOGICO resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for VECTOR resolved as shift
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for EXEC resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_DER       shift and go to state 259
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

  ! LLAVE_DER       [ reduce using rule 78 (lista_expresiones -> .) ]
  ! WHILE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DO              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! IF              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ENTERO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! DECIMAL         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FOR             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! TRUE            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FALSE           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CARACTER        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CADENA          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! ID              [ reduce using rule 78 (lista_expresiones -> .) ]
  ! MENOS           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SENO            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! COSENO          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INV             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 78 (lista_expresiones -> .) ]
  ! NOT_LOGICO      [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BREAK           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PARIZQ          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! SWITCH          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! VECTOR          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! PROC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! EXEC            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! INT             [ reduce using rule 78 (lista_expresiones -> .) ]
  ! FLOAT           [ reduce using rule 78 (lista_expresiones -> .) ]
  ! CHAR            [ reduce using rule 78 (lista_expresiones -> .) ]
  ! STRING          [ reduce using rule 78 (lista_expresiones -> .) ]
  ! BOOL            [ reduce using rule 78 (lista_expresiones -> .) ]

    tipo                           shift and go to state 13
    expresion                      shift and go to state 98
    lista_expresiones              shift and go to state 258

state 249

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    LLAVE_DER       shift and go to state 260
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 38
    tipo                           shift and go to state 13

state 250

    (74) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .

    PTCOMA          reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    MAS             reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    MENOS           reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    POR             reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DIVIDIDO        reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    POTENCIA        reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    MODULO          reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    OR_LOGICO       reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    AND_LOGICO      reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    XOR_LOGICO      reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    GE              reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    LE              reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    LT              reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    GT              reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    EQ              reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    NE              reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    $end            reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    WHILE           reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DO              reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    IF              reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    ENTERO          reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DECIMAL         reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    FOR             reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    TRUE            reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    FALSE           reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CARACTER        reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CADENA          reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    ID              reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    SENO            reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    COSENO          reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    INV             reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    PRINTLN         reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    NOT_LOGICO      reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    BREAK           reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CONTINUE        reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    PARIZQ          reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    SWITCH          reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    VECTOR          reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    PROC            reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    EXEC            reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    INT             reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    FLOAT           reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CHAR            reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    STRING          reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    BOOL            reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    PARDER          reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    LLAVE_DER       reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CORDER          reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DOSPUNTOS       reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DEFAULT         reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CASE            reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    COMA            reduce using rule 74 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)


state 251

    (89) lista_valores -> CORIZQ lista_elementos CORDER .
    (90) fila_vector -> CORIZQ lista_elementos CORDER .

  ! reduce/reduce conflict for PTCOMA resolved using rule 89 (lista_valores -> CORIZQ lista_elementos CORDER .)
  ! reduce/reduce conflict for COMA resolved using rule 89 (lista_valores -> CORIZQ lista_elementos CORDER .)
    PTCOMA          reduce using rule 89 (lista_valores -> CORIZQ lista_elementos CORDER .)
    COMA            reduce using rule 89 (lista_valores -> CORIZQ lista_elementos CORDER .)

  ! PTCOMA          [ reduce using rule 90 (fila_vector -> CORIZQ lista_elementos CORDER .) ]
  ! COMA            [ reduce using rule 90 (fila_vector -> CORIZQ lista_elementos CORDER .) ]


state 252

    (91) lista_elementos -> lista_elementos COMA . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    expresion                      shift and go to state 261
    tipo                           shift and go to state 13

state 253

    (80) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID . PARDER PTCOMA

    PARDER          shift and go to state 262


state 254

    (86) lista_valores -> lista_valores COMA fila_vector .

    PTCOMA          reduce using rule 86 (lista_valores -> lista_valores COMA fila_vector .)
    COMA            reduce using rule 86 (lista_valores -> lista_valores COMA fila_vector .)


state 255

    (87) lista_valores -> lista_valores COMA CORIZQ . lista_elementos CORDER
    (90) fila_vector -> CORIZQ . lista_elementos CORDER
    (91) lista_elementos -> . lista_elementos COMA expresion
    (92) lista_elementos -> . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    lista_elementos                shift and go to state 263
    expresion                      shift and go to state 242
    tipo                           shift and go to state 13

state 256

    (81) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER . PTCOMA

    PTCOMA          shift and go to state 264


state 257

    (82) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID . PARDER PTCOMA

    PARDER          shift and go to state 265


state 258

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . DO LLAVE_IZQ lista_expresiones LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (13) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (14) expresion -> . ENTERO
    (15) expresion -> . DECIMAL
    (16) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (18) expresion -> . TRUE
    (19) expresion -> . FALSE
    (20) expresion -> . CARACTER
    (21) expresion -> . CADENA
    (22) expresion -> . ID
    (23) expresion -> . MENOS expresion
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion POTENCIA expresion
    (29) expresion -> . SENO PARIZQ expresion PARDER
    (30) expresion -> . COSENO PARIZQ expresion PARDER
    (31) expresion -> . INV PARIZQ expresion PARDER
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . tipo ID PTCOMA
    (34) expresion -> . ID ASIGNACION expresion PTCOMA
    (40) expresion -> . PRINTLN PARIZQ expresion PARDER PTCOMA
    (41) expresion -> . PRINTLN PARIZQ expresion PARDER
    (42) expresion -> . PRINTLN PARIZQ oraciones PARDER PTCOMA
    (43) expresion -> . PRINTLN PARIZQ oraciones PARDER
    (46) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (47) expresion -> . expresion OR_LOGICO expresion
    (48) expresion -> . expresion AND_LOGICO expresion
    (49) expresion -> . NOT_LOGICO expresion
    (50) expresion -> . expresion XOR_LOGICO expresion
    (51) expresion -> . BREAK PTCOMA
    (52) expresion -> . CONTINUE PTCOMA
    (53) expresion -> . expresion GE expresion
    (54) expresion -> . expresion LE expresion
    (55) expresion -> . expresion LT expresion
    (56) expresion -> . expresion GT expresion
    (57) expresion -> . expresion EQ expresion
    (58) expresion -> . expresion NE expresion
    (59) expresion -> . ID INCREMENTO
    (60) expresion -> . ID DECREMENTO
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . SWITCH PARIZQ expresion PARDER LLAVE_IZQ lista_cases_opt LLAVE_DER
    (71) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (72) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER
    (73) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (74) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER
    (75) expresion -> . DO LLAVE_IZQ LLAVE_DER WHILE PARIZQ expresion PARDER PTCOMA
    (76) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (77) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ LLAVE_DER
    (79) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER PTCOMA
    (80) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA
    (81) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA
    (82) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA
    (83) expresion -> . VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION lista_valores PTCOMA
    (93) expresion -> . ID lista_indices
    (94) expresion -> . ID lista_indices ASIGNACION expresion PTCOMA
    (98) expresion -> . PROC ID PARIZQ lista_parametros_opt PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (103) expresion -> . EXEC ID PARIZQ lista_argumentos_exec_opt PARDER PTCOMA
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . STRING
    (39) tipo -> . BOOL

    LLAVE_DER       shift and go to state 266
    WHILE           shift and go to state 6
    DO              shift and go to state 8
    IF              shift and go to state 9
    ENTERO          shift and go to state 10
    DECIMAL         shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CARACTER        shift and go to state 17
    CADENA          shift and go to state 18
    ID              shift and go to state 14
    MENOS           shift and go to state 19
    SENO            shift and go to state 20
    COSENO          shift and go to state 21
    INV             shift and go to state 22
    PRINTLN         shift and go to state 23
    NOT_LOGICO      shift and go to state 24
    BREAK           shift and go to state 25
    CONTINUE        shift and go to state 26
    PARIZQ          shift and go to state 7
    SWITCH          shift and go to state 27
    VECTOR          shift and go to state 28
    PROC            shift and go to state 29
    EXEC            shift and go to state 30
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    STRING          shift and go to state 36
    BOOL            shift and go to state 37

    tipo                           shift and go to state 13
    expresion                      shift and go to state 38

state 259

    (73) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .

    PTCOMA          reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    MAS             reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    MENOS           reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    POR             reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DIVIDIDO        reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    POTENCIA        reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    MODULO          reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    OR_LOGICO       reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    AND_LOGICO      reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    XOR_LOGICO      reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    GE              reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    LE              reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    LT              reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    GT              reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    EQ              reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    NE              reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    $end            reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    WHILE           reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DO              reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    IF              reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    ENTERO          reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DECIMAL         reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    FOR             reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    TRUE            reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    FALSE           reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CARACTER        reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CADENA          reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    ID              reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    SENO            reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    COSENO          reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    INV             reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    PRINTLN         reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    NOT_LOGICO      reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    BREAK           reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CONTINUE        reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    PARIZQ          reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    SWITCH          reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    VECTOR          reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    PROC            reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    EXEC            reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    INT             reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    FLOAT           reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CHAR            reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    STRING          reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    BOOL            reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    PARDER          reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    LLAVE_DER       reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CORDER          reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DOSPUNTOS       reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    DEFAULT         reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    CASE            reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)
    COMA            reduce using rule 73 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ LLAVE_DER .)


state 260

    (17) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .

    PTCOMA          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MAS             reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MENOS           reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POR             reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DIVIDIDO        reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POTENCIA        reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MODULO          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    OR_LOGICO       reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    AND_LOGICO      reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    XOR_LOGICO      reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GE              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LE              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LT              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GT              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EQ              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NE              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    $end            reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    WHILE           reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DO              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    IF              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ENTERO          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DECIMAL         reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FOR             reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    TRUE            reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FALSE           reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CARACTER        reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CADENA          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ID              reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SENO            reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    COSENO          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INV             reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PRINTLN         reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NOT_LOGICO      reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BREAK           reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CONTINUE        reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARIZQ          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SWITCH          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    VECTOR          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PROC            reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EXEC            reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INT             reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FLOAT           reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CHAR            reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    STRING          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BOOL            reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARDER          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LLAVE_DER       reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CORDER          reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DOSPUNTOS       reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DEFAULT         reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CASE            reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    COMA            reduce using rule 17 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)


state 261

    (91) lista_elementos -> lista_elementos COMA expresion .
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (47) expresion -> expresion . OR_LOGICO expresion
    (48) expresion -> expresion . AND_LOGICO expresion
    (50) expresion -> expresion . XOR_LOGICO expresion
    (53) expresion -> expresion . GE expresion
    (54) expresion -> expresion . LE expresion
    (55) expresion -> expresion . LT expresion
    (56) expresion -> expresion . GT expresion
    (57) expresion -> expresion . EQ expresion
    (58) expresion -> expresion . NE expresion

    CORDER          reduce using rule 91 (lista_elementos -> lista_elementos COMA expresion .)
    COMA            reduce using rule 91 (lista_elementos -> lista_elementos COMA expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    POTENCIA        shift and go to state 44
    MODULO          shift and go to state 45
    OR_LOGICO       shift and go to state 46
    AND_LOGICO      shift and go to state 47
    XOR_LOGICO      shift and go to state 48
    GE              shift and go to state 49
    LE              shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    EQ              shift and go to state 53
    NE              shift and go to state 54


state 262

    (80) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER . PTCOMA

    PTCOMA          shift and go to state 267


state 263

    (87) lista_valores -> lista_valores COMA CORIZQ lista_elementos . CORDER
    (90) fila_vector -> CORIZQ lista_elementos . CORDER
    (91) lista_elementos -> lista_elementos . COMA expresion

    CORDER          shift and go to state 268
    COMA            shift and go to state 252


state 264

    (81) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .

    PTCOMA          reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    MAS             reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    MENOS           reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    POR             reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    DIVIDIDO        reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    POTENCIA        reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    MODULO          reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    OR_LOGICO       reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    AND_LOGICO      reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    XOR_LOGICO      reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    GE              reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    LE              reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    LT              reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    GT              reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    EQ              reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    NE              reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    $end            reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    WHILE           reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    DO              reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    IF              reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    ENTERO          reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    DECIMAL         reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    FOR             reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    TRUE            reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    FALSE           reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    CARACTER        reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    CADENA          reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    ID              reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    SENO            reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    COSENO          reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    INV             reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    PRINTLN         reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    NOT_LOGICO      reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    BREAK           reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    CONTINUE        reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    PARIZQ          reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    SWITCH          reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    VECTOR          reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    PROC            reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    EXEC            reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    INT             reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    FLOAT           reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    CHAR            reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    STRING          reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    BOOL            reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    PARDER          reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    LLAVE_DER       reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    CORDER          reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    DOSPUNTOS       reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    DEFAULT         reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    CASE            reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)
    COMA            reduce using rule 81 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION CORIZQ lista_elementos CORDER PTCOMA .)


state 265

    (82) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER . PTCOMA

    PTCOMA          shift and go to state 269


state 266

    (16) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .

    PTCOMA          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MAS             reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MENOS           reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POR             reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DIVIDIDO        reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POTENCIA        reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MODULO          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    OR_LOGICO       reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    AND_LOGICO      reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    XOR_LOGICO      reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GE              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LE              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LT              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GT              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EQ              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NE              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    $end            reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    WHILE           reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DO              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    IF              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ENTERO          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DECIMAL         reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FOR             reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    TRUE            reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FALSE           reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CARACTER        reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CADENA          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ID              reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SENO            reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    COSENO          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INV             reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PRINTLN         reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NOT_LOGICO      reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BREAK           reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CONTINUE        reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARIZQ          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    SWITCH          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    VECTOR          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PROC            reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EXEC            reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INT             reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FLOAT           reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CHAR            reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    STRING          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BOOL            reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARDER          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LLAVE_DER       reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CORDER          reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DOSPUNTOS       reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DEFAULT         reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CASE            reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    COMA            reduce using rule 16 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)


state 267

    (80) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .

    PTCOMA          reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    MAS             reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    MENOS           reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    POR             reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    DIVIDIDO        reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    POTENCIA        reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    MODULO          reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    OR_LOGICO       reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    AND_LOGICO      reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    XOR_LOGICO      reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    GE              reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    LE              reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    LT              reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    GT              reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    EQ              reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    NE              reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    $end            reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    WHILE           reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    DO              reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    IF              reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    ENTERO          reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    DECIMAL         reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    FOR             reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    TRUE            reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    FALSE           reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    CARACTER        reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    CADENA          reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    ID              reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    SENO            reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    COSENO          reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    INV             reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    PRINTLN         reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    NOT_LOGICO      reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    BREAK           reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    CONTINUE        reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    PARIZQ          reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    SWITCH          reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    VECTOR          reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    PROC            reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    EXEC            reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    INT             reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    FLOAT           reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    CHAR            reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    STRING          reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    BOOL            reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    PARDER          reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    LLAVE_DER       reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    CORDER          reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    DOSPUNTOS       reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    DEFAULT         reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    CASE            reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)
    COMA            reduce using rule 80 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ lista_dimensiones PARDER ASIGNACION SHUFFLE PARIZQ ID PARDER PTCOMA .)


state 268

    (87) lista_valores -> lista_valores COMA CORIZQ lista_elementos CORDER .
    (90) fila_vector -> CORIZQ lista_elementos CORDER .

  ! reduce/reduce conflict for PTCOMA resolved using rule 87 (lista_valores -> lista_valores COMA CORIZQ lista_elementos CORDER .)
  ! reduce/reduce conflict for COMA resolved using rule 87 (lista_valores -> lista_valores COMA CORIZQ lista_elementos CORDER .)
    PTCOMA          reduce using rule 87 (lista_valores -> lista_valores COMA CORIZQ lista_elementos CORDER .)
    COMA            reduce using rule 87 (lista_valores -> lista_valores COMA CORIZQ lista_elementos CORDER .)

  ! PTCOMA          [ reduce using rule 90 (fila_vector -> CORIZQ lista_elementos CORDER .) ]
  ! COMA            [ reduce using rule 90 (fila_vector -> CORIZQ lista_elementos CORDER .) ]


state 269

    (82) expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .

    PTCOMA          reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    MAS             reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    MENOS           reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    POR             reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    DIVIDIDO        reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    POTENCIA        reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    MODULO          reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    OR_LOGICO       reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    AND_LOGICO      reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    XOR_LOGICO      reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    GE              reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    LE              reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    LT              reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    GT              reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    EQ              reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    NE              reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    $end            reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    WHILE           reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    DO              reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    IF              reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    ENTERO          reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    DECIMAL         reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    FOR             reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    TRUE            reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    FALSE           reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    CARACTER        reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    CADENA          reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    ID              reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    SENO            reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    COSENO          reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    INV             reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    PRINTLN         reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    NOT_LOGICO      reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    BREAK           reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    CONTINUE        reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    PARIZQ          reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    SWITCH          reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    VECTOR          reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    PROC            reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    EXEC            reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    INT             reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    FLOAT           reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    CHAR            reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    STRING          reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    BOOL            reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    PARDER          reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    LLAVE_DER       reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    CORDER          reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    DOSPUNTOS       reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    DEFAULT         reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    CASE            reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)
    COMA            reduce using rule 82 (expresion -> VECTOR CORIZQ tipo CORDER ID PARIZQ ENTERO PARDER ASIGNACION SORT PARIZQ ID PARDER PTCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for DO in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 0 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 0 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 0 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 0 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 0 resolved as shift
WARNING: shift/reduce conflict for SENO in state 0 resolved as shift
WARNING: shift/reduce conflict for COSENO in state 0 resolved as shift
WARNING: shift/reduce conflict for INV in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 0 resolved as shift
WARNING: shift/reduce conflict for NOT_LOGICO in state 0 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 0 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 0 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 0 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 0 resolved as shift
WARNING: shift/reduce conflict for VECTOR in state 0 resolved as shift
WARNING: shift/reduce conflict for PROC in state 0 resolved as shift
WARNING: shift/reduce conflict for EXEC in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 0 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 3 resolved as shift
WARNING: shift/reduce conflict for ASIGNACION in state 14 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 14 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 38 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 57 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 57 resolved as shift
WARNING: shift/reduce conflict for DO in state 57 resolved as shift
WARNING: shift/reduce conflict for IF in state 57 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 57 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 57 resolved as shift
WARNING: shift/reduce conflict for FOR in state 57 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 57 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 57 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 57 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 57 resolved as shift
WARNING: shift/reduce conflict for ID in state 57 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 57 resolved as shift
WARNING: shift/reduce conflict for SENO in state 57 resolved as shift
WARNING: shift/reduce conflict for COSENO in state 57 resolved as shift
WARNING: shift/reduce conflict for INV in state 57 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 57 resolved as shift
WARNING: shift/reduce conflict for NOT_LOGICO in state 57 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 57 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 57 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 57 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 57 resolved as shift
WARNING: shift/reduce conflict for VECTOR in state 57 resolved as shift
WARNING: shift/reduce conflict for PROC in state 57 resolved as shift
WARNING: shift/reduce conflict for EXEC in state 57 resolved as shift
WARNING: shift/reduce conflict for INT in state 57 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 57 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 57 resolved as shift
WARNING: shift/reduce conflict for STRING in state 57 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 57 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 98 resolved as shift
WARNING: shift/reduce conflict for ASIGNACION in state 113 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 113 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 132 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 133 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 150 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 150 resolved as shift
WARNING: shift/reduce conflict for DO in state 150 resolved as shift
WARNING: shift/reduce conflict for IF in state 150 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 150 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 150 resolved as shift
WARNING: shift/reduce conflict for FOR in state 150 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 150 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 150 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 150 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 150 resolved as shift
WARNING: shift/reduce conflict for ID in state 150 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 150 resolved as shift
WARNING: shift/reduce conflict for SENO in state 150 resolved as shift
WARNING: shift/reduce conflict for COSENO in state 150 resolved as shift
WARNING: shift/reduce conflict for INV in state 150 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 150 resolved as shift
WARNING: shift/reduce conflict for NOT_LOGICO in state 150 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 150 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 150 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 150 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 150 resolved as shift
WARNING: shift/reduce conflict for VECTOR in state 150 resolved as shift
WARNING: shift/reduce conflict for PROC in state 150 resolved as shift
WARNING: shift/reduce conflict for EXEC in state 150 resolved as shift
WARNING: shift/reduce conflict for INT in state 150 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 150 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 150 resolved as shift
WARNING: shift/reduce conflict for STRING in state 150 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 150 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 153 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 153 resolved as shift
WARNING: shift/reduce conflict for DO in state 153 resolved as shift
WARNING: shift/reduce conflict for IF in state 153 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 153 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 153 resolved as shift
WARNING: shift/reduce conflict for FOR in state 153 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 153 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 153 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 153 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 153 resolved as shift
WARNING: shift/reduce conflict for ID in state 153 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 153 resolved as shift
WARNING: shift/reduce conflict for SENO in state 153 resolved as shift
WARNING: shift/reduce conflict for COSENO in state 153 resolved as shift
WARNING: shift/reduce conflict for INV in state 153 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 153 resolved as shift
WARNING: shift/reduce conflict for NOT_LOGICO in state 153 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 153 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 153 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 153 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 153 resolved as shift
WARNING: shift/reduce conflict for VECTOR in state 153 resolved as shift
WARNING: shift/reduce conflict for PROC in state 153 resolved as shift
WARNING: shift/reduce conflict for EXEC in state 153 resolved as shift
WARNING: shift/reduce conflict for INT in state 153 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 153 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 153 resolved as shift
WARNING: shift/reduce conflict for STRING in state 153 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 153 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 181 resolved as shift
WARNING: shift/reduce conflict for DO in state 181 resolved as shift
WARNING: shift/reduce conflict for IF in state 181 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 181 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 181 resolved as shift
WARNING: shift/reduce conflict for FOR in state 181 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 181 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 181 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 181 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 181 resolved as shift
WARNING: shift/reduce conflict for ID in state 181 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 181 resolved as shift
WARNING: shift/reduce conflict for SENO in state 181 resolved as shift
WARNING: shift/reduce conflict for COSENO in state 181 resolved as shift
WARNING: shift/reduce conflict for INV in state 181 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 181 resolved as shift
WARNING: shift/reduce conflict for NOT_LOGICO in state 181 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 181 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 181 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 181 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 181 resolved as shift
WARNING: shift/reduce conflict for VECTOR in state 181 resolved as shift
WARNING: shift/reduce conflict for PROC in state 181 resolved as shift
WARNING: shift/reduce conflict for EXEC in state 181 resolved as shift
WARNING: shift/reduce conflict for INT in state 181 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 181 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 181 resolved as shift
WARNING: shift/reduce conflict for STRING in state 181 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 181 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 199 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 205 resolved as shift
WARNING: shift/reduce conflict for DO in state 205 resolved as shift
WARNING: shift/reduce conflict for IF in state 205 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 205 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 205 resolved as shift
WARNING: shift/reduce conflict for FOR in state 205 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 205 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 205 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 205 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 205 resolved as shift
WARNING: shift/reduce conflict for ID in state 205 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 205 resolved as shift
WARNING: shift/reduce conflict for SENO in state 205 resolved as shift
WARNING: shift/reduce conflict for COSENO in state 205 resolved as shift
WARNING: shift/reduce conflict for INV in state 205 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 205 resolved as shift
WARNING: shift/reduce conflict for NOT_LOGICO in state 205 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 205 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 205 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 205 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 205 resolved as shift
WARNING: shift/reduce conflict for VECTOR in state 205 resolved as shift
WARNING: shift/reduce conflict for PROC in state 205 resolved as shift
WARNING: shift/reduce conflict for EXEC in state 205 resolved as shift
WARNING: shift/reduce conflict for INT in state 205 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 205 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 205 resolved as shift
WARNING: shift/reduce conflict for STRING in state 205 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 205 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 208 resolved as shift
WARNING: shift/reduce conflict for DO in state 208 resolved as shift
WARNING: shift/reduce conflict for IF in state 208 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 208 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 208 resolved as shift
WARNING: shift/reduce conflict for FOR in state 208 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 208 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 208 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 208 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 208 resolved as shift
WARNING: shift/reduce conflict for ID in state 208 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 208 resolved as shift
WARNING: shift/reduce conflict for SENO in state 208 resolved as shift
WARNING: shift/reduce conflict for COSENO in state 208 resolved as shift
WARNING: shift/reduce conflict for INV in state 208 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 208 resolved as shift
WARNING: shift/reduce conflict for NOT_LOGICO in state 208 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 208 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 208 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 208 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 208 resolved as shift
WARNING: shift/reduce conflict for VECTOR in state 208 resolved as shift
WARNING: shift/reduce conflict for PROC in state 208 resolved as shift
WARNING: shift/reduce conflict for EXEC in state 208 resolved as shift
WARNING: shift/reduce conflict for INT in state 208 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 208 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 208 resolved as shift
WARNING: shift/reduce conflict for STRING in state 208 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 208 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 209 resolved as shift
WARNING: shift/reduce conflict for DO in state 209 resolved as shift
WARNING: shift/reduce conflict for IF in state 209 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 209 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 209 resolved as shift
WARNING: shift/reduce conflict for FOR in state 209 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 209 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 209 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 209 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 209 resolved as shift
WARNING: shift/reduce conflict for ID in state 209 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 209 resolved as shift
WARNING: shift/reduce conflict for SENO in state 209 resolved as shift
WARNING: shift/reduce conflict for COSENO in state 209 resolved as shift
WARNING: shift/reduce conflict for INV in state 209 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 209 resolved as shift
WARNING: shift/reduce conflict for NOT_LOGICO in state 209 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 209 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 209 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 209 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 209 resolved as shift
WARNING: shift/reduce conflict for VECTOR in state 209 resolved as shift
WARNING: shift/reduce conflict for PROC in state 209 resolved as shift
WARNING: shift/reduce conflict for EXEC in state 209 resolved as shift
WARNING: shift/reduce conflict for INT in state 209 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 209 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 209 resolved as shift
WARNING: shift/reduce conflict for STRING in state 209 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 209 resolved as shift
WARNING: shift/reduce conflict for MAS in state 216 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 216 resolved as shift
WARNING: shift/reduce conflict for POR in state 216 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 216 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 216 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 216 resolved as shift
WARNING: shift/reduce conflict for OR_LOGICO in state 216 resolved as shift
WARNING: shift/reduce conflict for AND_LOGICO in state 216 resolved as shift
WARNING: shift/reduce conflict for XOR_LOGICO in state 216 resolved as shift
WARNING: shift/reduce conflict for GE in state 216 resolved as shift
WARNING: shift/reduce conflict for LE in state 216 resolved as shift
WARNING: shift/reduce conflict for LT in state 216 resolved as shift
WARNING: shift/reduce conflict for GT in state 216 resolved as shift
WARNING: shift/reduce conflict for EQ in state 216 resolved as shift
WARNING: shift/reduce conflict for NE in state 216 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 217 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 217 resolved as shift
WARNING: shift/reduce conflict for DO in state 217 resolved as shift
WARNING: shift/reduce conflict for IF in state 217 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 217 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 217 resolved as shift
WARNING: shift/reduce conflict for FOR in state 217 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 217 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 217 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 217 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 217 resolved as shift
WARNING: shift/reduce conflict for ID in state 217 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 217 resolved as shift
WARNING: shift/reduce conflict for SENO in state 217 resolved as shift
WARNING: shift/reduce conflict for COSENO in state 217 resolved as shift
WARNING: shift/reduce conflict for INV in state 217 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 217 resolved as shift
WARNING: shift/reduce conflict for NOT_LOGICO in state 217 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 217 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 217 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 217 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 217 resolved as shift
WARNING: shift/reduce conflict for VECTOR in state 217 resolved as shift
WARNING: shift/reduce conflict for PROC in state 217 resolved as shift
WARNING: shift/reduce conflict for EXEC in state 217 resolved as shift
WARNING: shift/reduce conflict for INT in state 217 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 217 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 217 resolved as shift
WARNING: shift/reduce conflict for STRING in state 217 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 217 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 240 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 240 resolved as shift
WARNING: shift/reduce conflict for DO in state 240 resolved as shift
WARNING: shift/reduce conflict for IF in state 240 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 240 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 240 resolved as shift
WARNING: shift/reduce conflict for FOR in state 240 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 240 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 240 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 240 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 240 resolved as shift
WARNING: shift/reduce conflict for ID in state 240 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 240 resolved as shift
WARNING: shift/reduce conflict for SENO in state 240 resolved as shift
WARNING: shift/reduce conflict for COSENO in state 240 resolved as shift
WARNING: shift/reduce conflict for INV in state 240 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 240 resolved as shift
WARNING: shift/reduce conflict for NOT_LOGICO in state 240 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 240 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 240 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 240 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 240 resolved as shift
WARNING: shift/reduce conflict for VECTOR in state 240 resolved as shift
WARNING: shift/reduce conflict for PROC in state 240 resolved as shift
WARNING: shift/reduce conflict for EXEC in state 240 resolved as shift
WARNING: shift/reduce conflict for INT in state 240 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 240 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 240 resolved as shift
WARNING: shift/reduce conflict for STRING in state 240 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 240 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 248 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 248 resolved as shift
WARNING: shift/reduce conflict for DO in state 248 resolved as shift
WARNING: shift/reduce conflict for IF in state 248 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 248 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 248 resolved as shift
WARNING: shift/reduce conflict for FOR in state 248 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 248 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 248 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 248 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 248 resolved as shift
WARNING: shift/reduce conflict for ID in state 248 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 248 resolved as shift
WARNING: shift/reduce conflict for SENO in state 248 resolved as shift
WARNING: shift/reduce conflict for COSENO in state 248 resolved as shift
WARNING: shift/reduce conflict for INV in state 248 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 248 resolved as shift
WARNING: shift/reduce conflict for NOT_LOGICO in state 248 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 248 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 248 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 248 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 248 resolved as shift
WARNING: shift/reduce conflict for VECTOR in state 248 resolved as shift
WARNING: shift/reduce conflict for PROC in state 248 resolved as shift
WARNING: shift/reduce conflict for EXEC in state 248 resolved as shift
WARNING: shift/reduce conflict for INT in state 248 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 248 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 248 resolved as shift
WARNING: shift/reduce conflict for STRING in state 248 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 248 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (inicio -> expresion)
WARNING: rejected rule (lista_expresiones -> expresion) in state 3
WARNING: reduce/reduce conflict in state 14 resolved using rule (expresion -> ID)
WARNING: rejected rule (lista_indices -> <empty>) in state 14
WARNING: reduce/reduce conflict in state 113 resolved using rule (expresion -> ID)
WARNING: rejected rule (oraciones -> ID) in state 113
WARNING: reduce/reduce conflict in state 113 resolved using rule (expresion -> ID)
WARNING: rejected rule (lista_indices -> <empty>) in state 113
WARNING: reduce/reduce conflict in state 251 resolved using rule (lista_valores -> CORIZQ lista_elementos CORDER)
WARNING: rejected rule (fila_vector -> CORIZQ lista_elementos CORDER) in state 251
WARNING: reduce/reduce conflict in state 268 resolved using rule (lista_valores -> lista_valores COMA CORIZQ lista_elementos CORDER)
WARNING: rejected rule (fila_vector -> CORIZQ lista_elementos CORDER) in state 268
WARNING: Rule (lista_indices -> <empty>) is never reduced
WARNING: Rule (fila_vector -> CORIZQ lista_elementos CORDER) is never reduced
