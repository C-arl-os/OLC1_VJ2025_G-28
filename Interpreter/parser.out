Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CORDER
    CORIZQ
    IGUAL
    MAYORQ
    PTC
    REVAL

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> expresion
Rule 2     inicio -> lista_expresiones
Rule 3     inicio -> comentario_una_linea
Rule 4     inicio -> comentario_multi_linea
Rule 5     lista_expresiones -> expresion PTCOMA
Rule 6     lista_expresiones -> expresion
Rule 7     lista_expresiones -> lista_expresiones expresion PTCOMA
Rule 8     lista_expresiones -> lista_expresiones expresion
Rule 9     expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
Rule 10    expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
Rule 11    expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
Rule 12    expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
Rule 13    expresion -> ENTERO
Rule 14    expresion -> DECIMAL
Rule 15    expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
Rule 16    expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
Rule 17    expresion -> TRUE
Rule 18    expresion -> FALSE
Rule 19    expresion -> CARACTER
Rule 20    expresion -> CADENA
Rule 21    expresion -> ID
Rule 22    expresion -> MENOS expresion
Rule 23    expresion -> expresion MAS expresion
Rule 24    expresion -> expresion MENOS expresion
Rule 25    expresion -> expresion POR expresion
Rule 26    expresion -> expresion DIVIDIDO expresion
Rule 27    expresion -> expresion POTENCIA expresion
Rule 28    expresion -> expresion MODULO expresion
Rule 29    expresion -> ID ASIGNACION expresion PTCOMA
Rule 30    tipo -> INT
Rule 31    tipo -> FLOAT
Rule 32    tipo -> CHAR
Rule 33    tipo -> STRING
Rule 34    tipo -> BOOL
Rule 35    expresion -> PRINTLN PARIZQ expresion PARDER
Rule 36    expresion -> tipo ID ASIGNACION expresion PTCOMA
Rule 37    expresion -> expresion OR_LOGICO expresion
Rule 38    expresion -> expresion AND_LOGICO expresion
Rule 39    expresion -> NOT_LOGICO expresion
Rule 40    expresion -> expresion XOR_LOGICO expresion
Rule 41    expresion -> expresion GE expresion
Rule 42    expresion -> expresion LE expresion
Rule 43    expresion -> expresion LT expresion
Rule 44    expresion -> expresion GT expresion
Rule 45    expresion -> expresion EQ expresion
Rule 46    expresion -> expresion NE expresion
Rule 47    expresion -> ID INCREMENTO
Rule 48    expresion -> ID DECREMENTO
Rule 49    comentario_multi_linea -> COMENTARIO_MULTILINEA
Rule 50    comentario_una_linea -> COMENTARIO_UNA_LINEA
Rule 51    expresion -> PARIZQ expresion PARDER

Terminals, with rules where they appear

AND_LOGICO           : 38
ASIGNACION           : 15 16 29 36
BOOL                 : 34
CADENA               : 20
CARACTER             : 19
CHAR                 : 32
COMENTARIO_MULTILINEA : 49
COMENTARIO_UNA_LINEA : 50
CORDER               : 
CORIZQ               : 
DECIMAL              : 14
DECREMENTO           : 48
DIVIDIDO             : 26
ELSE                 : 11 12
ENTERO               : 13
EQ                   : 45
FALSE                : 18
FLOAT                : 31
FOR                  : 15 16
GE                   : 41
GT                   : 44
ID                   : 15 16 21 29 36 47 48
IF                   : 10 11 12
IGUAL                : 
INCREMENTO           : 47
INT                  : 30
LE                   : 42
LLAVE_DER            : 9 10 11 11 12 15 16
LLAVE_IZQ            : 9 10 11 11 12 15 16
LT                   : 43
MAS                  : 23
MAYORQ               : 
MENOS                : 22 24
MODULO               : 28
NE                   : 46
NOT_LOGICO           : 39
OR_LOGICO            : 37
PARDER               : 9 10 11 12 15 16 35 51
PARIZQ               : 9 10 11 12 15 16 35 51
POR                  : 25
POTENCIA             : 27
PRINTLN              : 35
PTC                  : 
PTCOMA               : 5 7 15 15 16 16 29 36
REVAL                : 
STRING               : 33
TRUE                 : 17
WHILE                : 9
XOR_LOGICO           : 40
error                : 

Nonterminals, with rules where they appear

comentario_multi_linea : 4
comentario_una_linea : 3
expresion            : 1 5 6 7 8 9 10 11 12 12 15 15 15 16 16 16 22 23 23 24 24 25 25 26 26 27 27 28 28 29 35 36 37 37 38 38 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 51
inicio               : 0
lista_expresiones    : 2 7 8 9 10 11 11 12 15 16
tipo                 : 15 36

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . expresion
    (2) inicio -> . lista_expresiones
    (3) inicio -> . comentario_una_linea
    (4) inicio -> . comentario_multi_linea
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (50) comentario_una_linea -> . COMENTARIO_UNA_LINEA
    (49) comentario_multi_linea -> . COMENTARIO_MULTILINEA
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    COMENTARIO_UNA_LINEA shift and go to state 21
    COMENTARIO_MULTILINEA shift and go to state 22
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    inicio                         shift and go to state 1
    expresion                      shift and go to state 2
    lista_expresiones              shift and go to state 3
    comentario_una_linea           shift and go to state 4
    comentario_multi_linea         shift and go to state 5
    tipo                           shift and go to state 12

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion
    (5) lista_expresiones -> expresion . PTCOMA
    (6) lista_expresiones -> expresion .

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 1 (inicio -> expresion .)
    $end            reduce using rule 1 (inicio -> expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41
    NE              shift and go to state 42
    PTCOMA          shift and go to state 43
    WHILE           reduce using rule 6 (lista_expresiones -> expresion .)
    IF              reduce using rule 6 (lista_expresiones -> expresion .)
    ENTERO          reduce using rule 6 (lista_expresiones -> expresion .)
    DECIMAL         reduce using rule 6 (lista_expresiones -> expresion .)
    FOR             reduce using rule 6 (lista_expresiones -> expresion .)
    TRUE            reduce using rule 6 (lista_expresiones -> expresion .)
    FALSE           reduce using rule 6 (lista_expresiones -> expresion .)
    CARACTER        reduce using rule 6 (lista_expresiones -> expresion .)
    CADENA          reduce using rule 6 (lista_expresiones -> expresion .)
    ID              reduce using rule 6 (lista_expresiones -> expresion .)
    PRINTLN         reduce using rule 6 (lista_expresiones -> expresion .)
    NOT_LOGICO      reduce using rule 6 (lista_expresiones -> expresion .)
    PARIZQ          reduce using rule 6 (lista_expresiones -> expresion .)
    INT             reduce using rule 6 (lista_expresiones -> expresion .)
    FLOAT           reduce using rule 6 (lista_expresiones -> expresion .)
    CHAR            reduce using rule 6 (lista_expresiones -> expresion .)
    STRING          reduce using rule 6 (lista_expresiones -> expresion .)
    BOOL            reduce using rule 6 (lista_expresiones -> expresion .)

  ! MENOS           [ reduce using rule 6 (lista_expresiones -> expresion .) ]
  ! $end            [ reduce using rule 6 (lista_expresiones -> expresion .) ]


state 3

    (2) inicio -> lista_expresiones .
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    $end            reduce using rule 2 (inicio -> lista_expresiones .)
    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 44
    tipo                           shift and go to state 12

state 4

    (3) inicio -> comentario_una_linea .

    $end            reduce using rule 3 (inicio -> comentario_una_linea .)


state 5

    (4) inicio -> comentario_multi_linea .

    $end            reduce using rule 4 (inicio -> comentario_multi_linea .)


state 6

    (9) expresion -> WHILE . PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER

    PARIZQ          shift and go to state 45


state 7

    (51) expresion -> PARIZQ . expresion PARDER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 46
    tipo                           shift and go to state 12

state 8

    (10) expresion -> IF . PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> IF . PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> IF . PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion

    PARIZQ          shift and go to state 47


state 9

    (13) expresion -> ENTERO .

    MAS             reduce using rule 13 (expresion -> ENTERO .)
    MENOS           reduce using rule 13 (expresion -> ENTERO .)
    POR             reduce using rule 13 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 13 (expresion -> ENTERO .)
    POTENCIA        reduce using rule 13 (expresion -> ENTERO .)
    MODULO          reduce using rule 13 (expresion -> ENTERO .)
    OR_LOGICO       reduce using rule 13 (expresion -> ENTERO .)
    AND_LOGICO      reduce using rule 13 (expresion -> ENTERO .)
    XOR_LOGICO      reduce using rule 13 (expresion -> ENTERO .)
    GE              reduce using rule 13 (expresion -> ENTERO .)
    LE              reduce using rule 13 (expresion -> ENTERO .)
    LT              reduce using rule 13 (expresion -> ENTERO .)
    GT              reduce using rule 13 (expresion -> ENTERO .)
    EQ              reduce using rule 13 (expresion -> ENTERO .)
    NE              reduce using rule 13 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 13 (expresion -> ENTERO .)
    $end            reduce using rule 13 (expresion -> ENTERO .)
    WHILE           reduce using rule 13 (expresion -> ENTERO .)
    IF              reduce using rule 13 (expresion -> ENTERO .)
    ENTERO          reduce using rule 13 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 13 (expresion -> ENTERO .)
    FOR             reduce using rule 13 (expresion -> ENTERO .)
    TRUE            reduce using rule 13 (expresion -> ENTERO .)
    FALSE           reduce using rule 13 (expresion -> ENTERO .)
    CARACTER        reduce using rule 13 (expresion -> ENTERO .)
    CADENA          reduce using rule 13 (expresion -> ENTERO .)
    ID              reduce using rule 13 (expresion -> ENTERO .)
    PRINTLN         reduce using rule 13 (expresion -> ENTERO .)
    NOT_LOGICO      reduce using rule 13 (expresion -> ENTERO .)
    PARIZQ          reduce using rule 13 (expresion -> ENTERO .)
    INT             reduce using rule 13 (expresion -> ENTERO .)
    FLOAT           reduce using rule 13 (expresion -> ENTERO .)
    CHAR            reduce using rule 13 (expresion -> ENTERO .)
    STRING          reduce using rule 13 (expresion -> ENTERO .)
    BOOL            reduce using rule 13 (expresion -> ENTERO .)
    PARDER          reduce using rule 13 (expresion -> ENTERO .)
    LLAVE_DER       reduce using rule 13 (expresion -> ENTERO .)


state 10

    (14) expresion -> DECIMAL .

    MAS             reduce using rule 14 (expresion -> DECIMAL .)
    MENOS           reduce using rule 14 (expresion -> DECIMAL .)
    POR             reduce using rule 14 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 14 (expresion -> DECIMAL .)
    POTENCIA        reduce using rule 14 (expresion -> DECIMAL .)
    MODULO          reduce using rule 14 (expresion -> DECIMAL .)
    OR_LOGICO       reduce using rule 14 (expresion -> DECIMAL .)
    AND_LOGICO      reduce using rule 14 (expresion -> DECIMAL .)
    XOR_LOGICO      reduce using rule 14 (expresion -> DECIMAL .)
    GE              reduce using rule 14 (expresion -> DECIMAL .)
    LE              reduce using rule 14 (expresion -> DECIMAL .)
    LT              reduce using rule 14 (expresion -> DECIMAL .)
    GT              reduce using rule 14 (expresion -> DECIMAL .)
    EQ              reduce using rule 14 (expresion -> DECIMAL .)
    NE              reduce using rule 14 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 14 (expresion -> DECIMAL .)
    $end            reduce using rule 14 (expresion -> DECIMAL .)
    WHILE           reduce using rule 14 (expresion -> DECIMAL .)
    IF              reduce using rule 14 (expresion -> DECIMAL .)
    ENTERO          reduce using rule 14 (expresion -> DECIMAL .)
    DECIMAL         reduce using rule 14 (expresion -> DECIMAL .)
    FOR             reduce using rule 14 (expresion -> DECIMAL .)
    TRUE            reduce using rule 14 (expresion -> DECIMAL .)
    FALSE           reduce using rule 14 (expresion -> DECIMAL .)
    CARACTER        reduce using rule 14 (expresion -> DECIMAL .)
    CADENA          reduce using rule 14 (expresion -> DECIMAL .)
    ID              reduce using rule 14 (expresion -> DECIMAL .)
    PRINTLN         reduce using rule 14 (expresion -> DECIMAL .)
    NOT_LOGICO      reduce using rule 14 (expresion -> DECIMAL .)
    PARIZQ          reduce using rule 14 (expresion -> DECIMAL .)
    INT             reduce using rule 14 (expresion -> DECIMAL .)
    FLOAT           reduce using rule 14 (expresion -> DECIMAL .)
    CHAR            reduce using rule 14 (expresion -> DECIMAL .)
    STRING          reduce using rule 14 (expresion -> DECIMAL .)
    BOOL            reduce using rule 14 (expresion -> DECIMAL .)
    PARDER          reduce using rule 14 (expresion -> DECIMAL .)
    LLAVE_DER       reduce using rule 14 (expresion -> DECIMAL .)


state 11

    (15) expresion -> FOR . PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> FOR . PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER

    PARIZQ          shift and go to state 48


state 12

    (36) expresion -> tipo . ID ASIGNACION expresion PTCOMA

    ID              shift and go to state 49


state 13

    (21) expresion -> ID .
    (29) expresion -> ID . ASIGNACION expresion PTCOMA
    (47) expresion -> ID . INCREMENTO
    (48) expresion -> ID . DECREMENTO

    MAS             reduce using rule 21 (expresion -> ID .)
    MENOS           reduce using rule 21 (expresion -> ID .)
    POR             reduce using rule 21 (expresion -> ID .)
    DIVIDIDO        reduce using rule 21 (expresion -> ID .)
    POTENCIA        reduce using rule 21 (expresion -> ID .)
    MODULO          reduce using rule 21 (expresion -> ID .)
    OR_LOGICO       reduce using rule 21 (expresion -> ID .)
    AND_LOGICO      reduce using rule 21 (expresion -> ID .)
    XOR_LOGICO      reduce using rule 21 (expresion -> ID .)
    GE              reduce using rule 21 (expresion -> ID .)
    LE              reduce using rule 21 (expresion -> ID .)
    LT              reduce using rule 21 (expresion -> ID .)
    GT              reduce using rule 21 (expresion -> ID .)
    EQ              reduce using rule 21 (expresion -> ID .)
    NE              reduce using rule 21 (expresion -> ID .)
    PTCOMA          reduce using rule 21 (expresion -> ID .)
    $end            reduce using rule 21 (expresion -> ID .)
    WHILE           reduce using rule 21 (expresion -> ID .)
    IF              reduce using rule 21 (expresion -> ID .)
    ENTERO          reduce using rule 21 (expresion -> ID .)
    DECIMAL         reduce using rule 21 (expresion -> ID .)
    FOR             reduce using rule 21 (expresion -> ID .)
    TRUE            reduce using rule 21 (expresion -> ID .)
    FALSE           reduce using rule 21 (expresion -> ID .)
    CARACTER        reduce using rule 21 (expresion -> ID .)
    CADENA          reduce using rule 21 (expresion -> ID .)
    ID              reduce using rule 21 (expresion -> ID .)
    PRINTLN         reduce using rule 21 (expresion -> ID .)
    NOT_LOGICO      reduce using rule 21 (expresion -> ID .)
    PARIZQ          reduce using rule 21 (expresion -> ID .)
    INT             reduce using rule 21 (expresion -> ID .)
    FLOAT           reduce using rule 21 (expresion -> ID .)
    CHAR            reduce using rule 21 (expresion -> ID .)
    STRING          reduce using rule 21 (expresion -> ID .)
    BOOL            reduce using rule 21 (expresion -> ID .)
    PARDER          reduce using rule 21 (expresion -> ID .)
    LLAVE_DER       reduce using rule 21 (expresion -> ID .)
    ASIGNACION      shift and go to state 50
    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52


state 14

    (17) expresion -> TRUE .

    MAS             reduce using rule 17 (expresion -> TRUE .)
    MENOS           reduce using rule 17 (expresion -> TRUE .)
    POR             reduce using rule 17 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 17 (expresion -> TRUE .)
    POTENCIA        reduce using rule 17 (expresion -> TRUE .)
    MODULO          reduce using rule 17 (expresion -> TRUE .)
    OR_LOGICO       reduce using rule 17 (expresion -> TRUE .)
    AND_LOGICO      reduce using rule 17 (expresion -> TRUE .)
    XOR_LOGICO      reduce using rule 17 (expresion -> TRUE .)
    GE              reduce using rule 17 (expresion -> TRUE .)
    LE              reduce using rule 17 (expresion -> TRUE .)
    LT              reduce using rule 17 (expresion -> TRUE .)
    GT              reduce using rule 17 (expresion -> TRUE .)
    EQ              reduce using rule 17 (expresion -> TRUE .)
    NE              reduce using rule 17 (expresion -> TRUE .)
    PTCOMA          reduce using rule 17 (expresion -> TRUE .)
    $end            reduce using rule 17 (expresion -> TRUE .)
    WHILE           reduce using rule 17 (expresion -> TRUE .)
    IF              reduce using rule 17 (expresion -> TRUE .)
    ENTERO          reduce using rule 17 (expresion -> TRUE .)
    DECIMAL         reduce using rule 17 (expresion -> TRUE .)
    FOR             reduce using rule 17 (expresion -> TRUE .)
    TRUE            reduce using rule 17 (expresion -> TRUE .)
    FALSE           reduce using rule 17 (expresion -> TRUE .)
    CARACTER        reduce using rule 17 (expresion -> TRUE .)
    CADENA          reduce using rule 17 (expresion -> TRUE .)
    ID              reduce using rule 17 (expresion -> TRUE .)
    PRINTLN         reduce using rule 17 (expresion -> TRUE .)
    NOT_LOGICO      reduce using rule 17 (expresion -> TRUE .)
    PARIZQ          reduce using rule 17 (expresion -> TRUE .)
    INT             reduce using rule 17 (expresion -> TRUE .)
    FLOAT           reduce using rule 17 (expresion -> TRUE .)
    CHAR            reduce using rule 17 (expresion -> TRUE .)
    STRING          reduce using rule 17 (expresion -> TRUE .)
    BOOL            reduce using rule 17 (expresion -> TRUE .)
    PARDER          reduce using rule 17 (expresion -> TRUE .)
    LLAVE_DER       reduce using rule 17 (expresion -> TRUE .)


state 15

    (18) expresion -> FALSE .

    MAS             reduce using rule 18 (expresion -> FALSE .)
    MENOS           reduce using rule 18 (expresion -> FALSE .)
    POR             reduce using rule 18 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 18 (expresion -> FALSE .)
    POTENCIA        reduce using rule 18 (expresion -> FALSE .)
    MODULO          reduce using rule 18 (expresion -> FALSE .)
    OR_LOGICO       reduce using rule 18 (expresion -> FALSE .)
    AND_LOGICO      reduce using rule 18 (expresion -> FALSE .)
    XOR_LOGICO      reduce using rule 18 (expresion -> FALSE .)
    GE              reduce using rule 18 (expresion -> FALSE .)
    LE              reduce using rule 18 (expresion -> FALSE .)
    LT              reduce using rule 18 (expresion -> FALSE .)
    GT              reduce using rule 18 (expresion -> FALSE .)
    EQ              reduce using rule 18 (expresion -> FALSE .)
    NE              reduce using rule 18 (expresion -> FALSE .)
    PTCOMA          reduce using rule 18 (expresion -> FALSE .)
    $end            reduce using rule 18 (expresion -> FALSE .)
    WHILE           reduce using rule 18 (expresion -> FALSE .)
    IF              reduce using rule 18 (expresion -> FALSE .)
    ENTERO          reduce using rule 18 (expresion -> FALSE .)
    DECIMAL         reduce using rule 18 (expresion -> FALSE .)
    FOR             reduce using rule 18 (expresion -> FALSE .)
    TRUE            reduce using rule 18 (expresion -> FALSE .)
    FALSE           reduce using rule 18 (expresion -> FALSE .)
    CARACTER        reduce using rule 18 (expresion -> FALSE .)
    CADENA          reduce using rule 18 (expresion -> FALSE .)
    ID              reduce using rule 18 (expresion -> FALSE .)
    PRINTLN         reduce using rule 18 (expresion -> FALSE .)
    NOT_LOGICO      reduce using rule 18 (expresion -> FALSE .)
    PARIZQ          reduce using rule 18 (expresion -> FALSE .)
    INT             reduce using rule 18 (expresion -> FALSE .)
    FLOAT           reduce using rule 18 (expresion -> FALSE .)
    CHAR            reduce using rule 18 (expresion -> FALSE .)
    STRING          reduce using rule 18 (expresion -> FALSE .)
    BOOL            reduce using rule 18 (expresion -> FALSE .)
    PARDER          reduce using rule 18 (expresion -> FALSE .)
    LLAVE_DER       reduce using rule 18 (expresion -> FALSE .)


state 16

    (19) expresion -> CARACTER .

    MAS             reduce using rule 19 (expresion -> CARACTER .)
    MENOS           reduce using rule 19 (expresion -> CARACTER .)
    POR             reduce using rule 19 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 19 (expresion -> CARACTER .)
    POTENCIA        reduce using rule 19 (expresion -> CARACTER .)
    MODULO          reduce using rule 19 (expresion -> CARACTER .)
    OR_LOGICO       reduce using rule 19 (expresion -> CARACTER .)
    AND_LOGICO      reduce using rule 19 (expresion -> CARACTER .)
    XOR_LOGICO      reduce using rule 19 (expresion -> CARACTER .)
    GE              reduce using rule 19 (expresion -> CARACTER .)
    LE              reduce using rule 19 (expresion -> CARACTER .)
    LT              reduce using rule 19 (expresion -> CARACTER .)
    GT              reduce using rule 19 (expresion -> CARACTER .)
    EQ              reduce using rule 19 (expresion -> CARACTER .)
    NE              reduce using rule 19 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 19 (expresion -> CARACTER .)
    $end            reduce using rule 19 (expresion -> CARACTER .)
    WHILE           reduce using rule 19 (expresion -> CARACTER .)
    IF              reduce using rule 19 (expresion -> CARACTER .)
    ENTERO          reduce using rule 19 (expresion -> CARACTER .)
    DECIMAL         reduce using rule 19 (expresion -> CARACTER .)
    FOR             reduce using rule 19 (expresion -> CARACTER .)
    TRUE            reduce using rule 19 (expresion -> CARACTER .)
    FALSE           reduce using rule 19 (expresion -> CARACTER .)
    CARACTER        reduce using rule 19 (expresion -> CARACTER .)
    CADENA          reduce using rule 19 (expresion -> CARACTER .)
    ID              reduce using rule 19 (expresion -> CARACTER .)
    PRINTLN         reduce using rule 19 (expresion -> CARACTER .)
    NOT_LOGICO      reduce using rule 19 (expresion -> CARACTER .)
    PARIZQ          reduce using rule 19 (expresion -> CARACTER .)
    INT             reduce using rule 19 (expresion -> CARACTER .)
    FLOAT           reduce using rule 19 (expresion -> CARACTER .)
    CHAR            reduce using rule 19 (expresion -> CARACTER .)
    STRING          reduce using rule 19 (expresion -> CARACTER .)
    BOOL            reduce using rule 19 (expresion -> CARACTER .)
    PARDER          reduce using rule 19 (expresion -> CARACTER .)
    LLAVE_DER       reduce using rule 19 (expresion -> CARACTER .)


state 17

    (20) expresion -> CADENA .

    MAS             reduce using rule 20 (expresion -> CADENA .)
    MENOS           reduce using rule 20 (expresion -> CADENA .)
    POR             reduce using rule 20 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 20 (expresion -> CADENA .)
    POTENCIA        reduce using rule 20 (expresion -> CADENA .)
    MODULO          reduce using rule 20 (expresion -> CADENA .)
    OR_LOGICO       reduce using rule 20 (expresion -> CADENA .)
    AND_LOGICO      reduce using rule 20 (expresion -> CADENA .)
    XOR_LOGICO      reduce using rule 20 (expresion -> CADENA .)
    GE              reduce using rule 20 (expresion -> CADENA .)
    LE              reduce using rule 20 (expresion -> CADENA .)
    LT              reduce using rule 20 (expresion -> CADENA .)
    GT              reduce using rule 20 (expresion -> CADENA .)
    EQ              reduce using rule 20 (expresion -> CADENA .)
    NE              reduce using rule 20 (expresion -> CADENA .)
    PTCOMA          reduce using rule 20 (expresion -> CADENA .)
    $end            reduce using rule 20 (expresion -> CADENA .)
    WHILE           reduce using rule 20 (expresion -> CADENA .)
    IF              reduce using rule 20 (expresion -> CADENA .)
    ENTERO          reduce using rule 20 (expresion -> CADENA .)
    DECIMAL         reduce using rule 20 (expresion -> CADENA .)
    FOR             reduce using rule 20 (expresion -> CADENA .)
    TRUE            reduce using rule 20 (expresion -> CADENA .)
    FALSE           reduce using rule 20 (expresion -> CADENA .)
    CARACTER        reduce using rule 20 (expresion -> CADENA .)
    CADENA          reduce using rule 20 (expresion -> CADENA .)
    ID              reduce using rule 20 (expresion -> CADENA .)
    PRINTLN         reduce using rule 20 (expresion -> CADENA .)
    NOT_LOGICO      reduce using rule 20 (expresion -> CADENA .)
    PARIZQ          reduce using rule 20 (expresion -> CADENA .)
    INT             reduce using rule 20 (expresion -> CADENA .)
    FLOAT           reduce using rule 20 (expresion -> CADENA .)
    CHAR            reduce using rule 20 (expresion -> CADENA .)
    STRING          reduce using rule 20 (expresion -> CADENA .)
    BOOL            reduce using rule 20 (expresion -> CADENA .)
    PARDER          reduce using rule 20 (expresion -> CADENA .)
    LLAVE_DER       reduce using rule 20 (expresion -> CADENA .)


state 18

    (22) expresion -> MENOS . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 53
    tipo                           shift and go to state 12

state 19

    (35) expresion -> PRINTLN . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 54


state 20

    (39) expresion -> NOT_LOGICO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 55
    tipo                           shift and go to state 12

state 21

    (50) comentario_una_linea -> COMENTARIO_UNA_LINEA .

    $end            reduce using rule 50 (comentario_una_linea -> COMENTARIO_UNA_LINEA .)


state 22

    (49) comentario_multi_linea -> COMENTARIO_MULTILINEA .

    $end            reduce using rule 49 (comentario_multi_linea -> COMENTARIO_MULTILINEA .)


state 23

    (30) tipo -> INT .

    ID              reduce using rule 30 (tipo -> INT .)


state 24

    (31) tipo -> FLOAT .

    ID              reduce using rule 31 (tipo -> FLOAT .)


state 25

    (32) tipo -> CHAR .

    ID              reduce using rule 32 (tipo -> CHAR .)


state 26

    (33) tipo -> STRING .

    ID              reduce using rule 33 (tipo -> STRING .)


state 27

    (34) tipo -> BOOL .

    ID              reduce using rule 34 (tipo -> BOOL .)


state 28

    (23) expresion -> expresion MAS . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 56
    tipo                           shift and go to state 12

state 29

    (24) expresion -> expresion MENOS . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 57
    tipo                           shift and go to state 12

state 30

    (25) expresion -> expresion POR . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 58
    tipo                           shift and go to state 12

state 31

    (26) expresion -> expresion DIVIDIDO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 59
    tipo                           shift and go to state 12

state 32

    (27) expresion -> expresion POTENCIA . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 60
    tipo                           shift and go to state 12

state 33

    (28) expresion -> expresion MODULO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 61
    tipo                           shift and go to state 12

state 34

    (37) expresion -> expresion OR_LOGICO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 62
    tipo                           shift and go to state 12

state 35

    (38) expresion -> expresion AND_LOGICO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 63
    tipo                           shift and go to state 12

state 36

    (40) expresion -> expresion XOR_LOGICO . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 64
    tipo                           shift and go to state 12

state 37

    (41) expresion -> expresion GE . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 65
    tipo                           shift and go to state 12

state 38

    (42) expresion -> expresion LE . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 66
    tipo                           shift and go to state 12

state 39

    (43) expresion -> expresion LT . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 67
    tipo                           shift and go to state 12

state 40

    (44) expresion -> expresion GT . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 68
    tipo                           shift and go to state 12

state 41

    (45) expresion -> expresion EQ . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 69
    tipo                           shift and go to state 12

state 42

    (46) expresion -> expresion NE . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 70
    tipo                           shift and go to state 12

state 43

    (5) lista_expresiones -> expresion PTCOMA .

    WHILE           reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    IF              reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    ENTERO          reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    DECIMAL         reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    FOR             reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    TRUE            reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    FALSE           reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    CARACTER        reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    CADENA          reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    ID              reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    MENOS           reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    PRINTLN         reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    NOT_LOGICO      reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    PARIZQ          reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    INT             reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    FLOAT           reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    CHAR            reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    STRING          reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    BOOL            reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    $end            reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)
    LLAVE_DER       reduce using rule 5 (lista_expresiones -> expresion PTCOMA .)


state 44

    (7) lista_expresiones -> lista_expresiones expresion . PTCOMA
    (8) lista_expresiones -> lista_expresiones expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

  ! shift/reduce conflict for MENOS resolved as shift
    PTCOMA          shift and go to state 71
    WHILE           reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    IF              reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    ENTERO          reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    DECIMAL         reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    FOR             reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    TRUE            reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    FALSE           reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    CARACTER        reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    CADENA          reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    ID              reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    PRINTLN         reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    NOT_LOGICO      reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    PARIZQ          reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    INT             reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    FLOAT           reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    CHAR            reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    STRING          reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    BOOL            reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    $end            reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    LLAVE_DER       reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41
    NE              shift and go to state 42

  ! MENOS           [ reduce using rule 8 (lista_expresiones -> lista_expresiones expresion .) ]


state 45

    (9) expresion -> WHILE PARIZQ . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 72
    tipo                           shift and go to state 12

state 46

    (51) expresion -> PARIZQ expresion . PARDER
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    PARDER          shift and go to state 73
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41
    NE              shift and go to state 42


state 47

    (10) expresion -> IF PARIZQ . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> IF PARIZQ . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> IF PARIZQ . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 74
    tipo                           shift and go to state 12

state 48

    (15) expresion -> FOR PARIZQ . tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> FOR PARIZQ . ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    ID              shift and go to state 76
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    tipo                           shift and go to state 75

state 49

    (36) expresion -> tipo ID . ASIGNACION expresion PTCOMA

    ASIGNACION      shift and go to state 77


state 50

    (29) expresion -> ID ASIGNACION . expresion PTCOMA
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 78
    tipo                           shift and go to state 12

state 51

    (47) expresion -> ID INCREMENTO .

    MAS             reduce using rule 47 (expresion -> ID INCREMENTO .)
    MENOS           reduce using rule 47 (expresion -> ID INCREMENTO .)
    POR             reduce using rule 47 (expresion -> ID INCREMENTO .)
    DIVIDIDO        reduce using rule 47 (expresion -> ID INCREMENTO .)
    POTENCIA        reduce using rule 47 (expresion -> ID INCREMENTO .)
    MODULO          reduce using rule 47 (expresion -> ID INCREMENTO .)
    OR_LOGICO       reduce using rule 47 (expresion -> ID INCREMENTO .)
    AND_LOGICO      reduce using rule 47 (expresion -> ID INCREMENTO .)
    XOR_LOGICO      reduce using rule 47 (expresion -> ID INCREMENTO .)
    GE              reduce using rule 47 (expresion -> ID INCREMENTO .)
    LE              reduce using rule 47 (expresion -> ID INCREMENTO .)
    LT              reduce using rule 47 (expresion -> ID INCREMENTO .)
    GT              reduce using rule 47 (expresion -> ID INCREMENTO .)
    EQ              reduce using rule 47 (expresion -> ID INCREMENTO .)
    NE              reduce using rule 47 (expresion -> ID INCREMENTO .)
    PTCOMA          reduce using rule 47 (expresion -> ID INCREMENTO .)
    $end            reduce using rule 47 (expresion -> ID INCREMENTO .)
    WHILE           reduce using rule 47 (expresion -> ID INCREMENTO .)
    IF              reduce using rule 47 (expresion -> ID INCREMENTO .)
    ENTERO          reduce using rule 47 (expresion -> ID INCREMENTO .)
    DECIMAL         reduce using rule 47 (expresion -> ID INCREMENTO .)
    FOR             reduce using rule 47 (expresion -> ID INCREMENTO .)
    TRUE            reduce using rule 47 (expresion -> ID INCREMENTO .)
    FALSE           reduce using rule 47 (expresion -> ID INCREMENTO .)
    CARACTER        reduce using rule 47 (expresion -> ID INCREMENTO .)
    CADENA          reduce using rule 47 (expresion -> ID INCREMENTO .)
    ID              reduce using rule 47 (expresion -> ID INCREMENTO .)
    PRINTLN         reduce using rule 47 (expresion -> ID INCREMENTO .)
    NOT_LOGICO      reduce using rule 47 (expresion -> ID INCREMENTO .)
    PARIZQ          reduce using rule 47 (expresion -> ID INCREMENTO .)
    INT             reduce using rule 47 (expresion -> ID INCREMENTO .)
    FLOAT           reduce using rule 47 (expresion -> ID INCREMENTO .)
    CHAR            reduce using rule 47 (expresion -> ID INCREMENTO .)
    STRING          reduce using rule 47 (expresion -> ID INCREMENTO .)
    BOOL            reduce using rule 47 (expresion -> ID INCREMENTO .)
    PARDER          reduce using rule 47 (expresion -> ID INCREMENTO .)
    LLAVE_DER       reduce using rule 47 (expresion -> ID INCREMENTO .)


state 52

    (48) expresion -> ID DECREMENTO .

    MAS             reduce using rule 48 (expresion -> ID DECREMENTO .)
    MENOS           reduce using rule 48 (expresion -> ID DECREMENTO .)
    POR             reduce using rule 48 (expresion -> ID DECREMENTO .)
    DIVIDIDO        reduce using rule 48 (expresion -> ID DECREMENTO .)
    POTENCIA        reduce using rule 48 (expresion -> ID DECREMENTO .)
    MODULO          reduce using rule 48 (expresion -> ID DECREMENTO .)
    OR_LOGICO       reduce using rule 48 (expresion -> ID DECREMENTO .)
    AND_LOGICO      reduce using rule 48 (expresion -> ID DECREMENTO .)
    XOR_LOGICO      reduce using rule 48 (expresion -> ID DECREMENTO .)
    GE              reduce using rule 48 (expresion -> ID DECREMENTO .)
    LE              reduce using rule 48 (expresion -> ID DECREMENTO .)
    LT              reduce using rule 48 (expresion -> ID DECREMENTO .)
    GT              reduce using rule 48 (expresion -> ID DECREMENTO .)
    EQ              reduce using rule 48 (expresion -> ID DECREMENTO .)
    NE              reduce using rule 48 (expresion -> ID DECREMENTO .)
    PTCOMA          reduce using rule 48 (expresion -> ID DECREMENTO .)
    $end            reduce using rule 48 (expresion -> ID DECREMENTO .)
    WHILE           reduce using rule 48 (expresion -> ID DECREMENTO .)
    IF              reduce using rule 48 (expresion -> ID DECREMENTO .)
    ENTERO          reduce using rule 48 (expresion -> ID DECREMENTO .)
    DECIMAL         reduce using rule 48 (expresion -> ID DECREMENTO .)
    FOR             reduce using rule 48 (expresion -> ID DECREMENTO .)
    TRUE            reduce using rule 48 (expresion -> ID DECREMENTO .)
    FALSE           reduce using rule 48 (expresion -> ID DECREMENTO .)
    CARACTER        reduce using rule 48 (expresion -> ID DECREMENTO .)
    CADENA          reduce using rule 48 (expresion -> ID DECREMENTO .)
    ID              reduce using rule 48 (expresion -> ID DECREMENTO .)
    PRINTLN         reduce using rule 48 (expresion -> ID DECREMENTO .)
    NOT_LOGICO      reduce using rule 48 (expresion -> ID DECREMENTO .)
    PARIZQ          reduce using rule 48 (expresion -> ID DECREMENTO .)
    INT             reduce using rule 48 (expresion -> ID DECREMENTO .)
    FLOAT           reduce using rule 48 (expresion -> ID DECREMENTO .)
    CHAR            reduce using rule 48 (expresion -> ID DECREMENTO .)
    STRING          reduce using rule 48 (expresion -> ID DECREMENTO .)
    BOOL            reduce using rule 48 (expresion -> ID DECREMENTO .)
    PARDER          reduce using rule 48 (expresion -> ID DECREMENTO .)
    LLAVE_DER       reduce using rule 48 (expresion -> ID DECREMENTO .)


state 53

    (22) expresion -> MENOS expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    MAS             reduce using rule 22 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 22 (expresion -> MENOS expresion .)
    POR             reduce using rule 22 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 22 (expresion -> MENOS expresion .)
    POTENCIA        reduce using rule 22 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 22 (expresion -> MENOS expresion .)
    OR_LOGICO       reduce using rule 22 (expresion -> MENOS expresion .)
    AND_LOGICO      reduce using rule 22 (expresion -> MENOS expresion .)
    XOR_LOGICO      reduce using rule 22 (expresion -> MENOS expresion .)
    GE              reduce using rule 22 (expresion -> MENOS expresion .)
    LE              reduce using rule 22 (expresion -> MENOS expresion .)
    LT              reduce using rule 22 (expresion -> MENOS expresion .)
    GT              reduce using rule 22 (expresion -> MENOS expresion .)
    EQ              reduce using rule 22 (expresion -> MENOS expresion .)
    NE              reduce using rule 22 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 22 (expresion -> MENOS expresion .)
    $end            reduce using rule 22 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 22 (expresion -> MENOS expresion .)
    IF              reduce using rule 22 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 22 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 22 (expresion -> MENOS expresion .)
    FOR             reduce using rule 22 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 22 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 22 (expresion -> MENOS expresion .)
    CARACTER        reduce using rule 22 (expresion -> MENOS expresion .)
    CADENA          reduce using rule 22 (expresion -> MENOS expresion .)
    ID              reduce using rule 22 (expresion -> MENOS expresion .)
    PRINTLN         reduce using rule 22 (expresion -> MENOS expresion .)
    NOT_LOGICO      reduce using rule 22 (expresion -> MENOS expresion .)
    PARIZQ          reduce using rule 22 (expresion -> MENOS expresion .)
    INT             reduce using rule 22 (expresion -> MENOS expresion .)
    FLOAT           reduce using rule 22 (expresion -> MENOS expresion .)
    CHAR            reduce using rule 22 (expresion -> MENOS expresion .)
    STRING          reduce using rule 22 (expresion -> MENOS expresion .)
    BOOL            reduce using rule 22 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 22 (expresion -> MENOS expresion .)
    LLAVE_DER       reduce using rule 22 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 28 ]
  ! MENOS           [ shift and go to state 29 ]
  ! POR             [ shift and go to state 30 ]
  ! DIVIDIDO        [ shift and go to state 31 ]
  ! POTENCIA        [ shift and go to state 32 ]
  ! MODULO          [ shift and go to state 33 ]
  ! OR_LOGICO       [ shift and go to state 34 ]
  ! AND_LOGICO      [ shift and go to state 35 ]
  ! XOR_LOGICO      [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LE              [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NE              [ shift and go to state 42 ]


state 54

    (35) expresion -> PRINTLN PARIZQ . expresion PARDER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 79
    tipo                           shift and go to state 12

state 55

    (39) expresion -> NOT_LOGICO expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    NE              reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    PTCOMA          reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    $end            reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    WHILE           reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    IF              reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    ENTERO          reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    DECIMAL         reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    FOR             reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    TRUE            reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    FALSE           reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    CARACTER        reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    CADENA          reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    ID              reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    PRINTLN         reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    NOT_LOGICO      reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    PARIZQ          reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    INT             reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    FLOAT           reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    CHAR            reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    STRING          reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    BOOL            reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    PARDER          reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    LLAVE_DER       reduce using rule 39 (expresion -> NOT_LOGICO expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41

  ! MAS             [ reduce using rule 39 (expresion -> NOT_LOGICO expresion .) ]
  ! MENOS           [ reduce using rule 39 (expresion -> NOT_LOGICO expresion .) ]
  ! POR             [ reduce using rule 39 (expresion -> NOT_LOGICO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 39 (expresion -> NOT_LOGICO expresion .) ]
  ! POTENCIA        [ reduce using rule 39 (expresion -> NOT_LOGICO expresion .) ]
  ! MODULO          [ reduce using rule 39 (expresion -> NOT_LOGICO expresion .) ]
  ! OR_LOGICO       [ reduce using rule 39 (expresion -> NOT_LOGICO expresion .) ]
  ! AND_LOGICO      [ reduce using rule 39 (expresion -> NOT_LOGICO expresion .) ]
  ! XOR_LOGICO      [ reduce using rule 39 (expresion -> NOT_LOGICO expresion .) ]
  ! GE              [ reduce using rule 39 (expresion -> NOT_LOGICO expresion .) ]
  ! LE              [ reduce using rule 39 (expresion -> NOT_LOGICO expresion .) ]
  ! LT              [ reduce using rule 39 (expresion -> NOT_LOGICO expresion .) ]
  ! GT              [ reduce using rule 39 (expresion -> NOT_LOGICO expresion .) ]
  ! EQ              [ reduce using rule 39 (expresion -> NOT_LOGICO expresion .) ]
  ! NE              [ shift and go to state 42 ]


state 56

    (23) expresion -> expresion MAS expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    MAS             reduce using rule 23 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 23 (expresion -> expresion MAS expresion .)
    OR_LOGICO       reduce using rule 23 (expresion -> expresion MAS expresion .)
    AND_LOGICO      reduce using rule 23 (expresion -> expresion MAS expresion .)
    XOR_LOGICO      reduce using rule 23 (expresion -> expresion MAS expresion .)
    GE              reduce using rule 23 (expresion -> expresion MAS expresion .)
    LE              reduce using rule 23 (expresion -> expresion MAS expresion .)
    LT              reduce using rule 23 (expresion -> expresion MAS expresion .)
    GT              reduce using rule 23 (expresion -> expresion MAS expresion .)
    EQ              reduce using rule 23 (expresion -> expresion MAS expresion .)
    NE              reduce using rule 23 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 23 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 23 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 23 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 23 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 23 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 23 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 23 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 23 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 23 (expresion -> expresion MAS expresion .)
    CARACTER        reduce using rule 23 (expresion -> expresion MAS expresion .)
    CADENA          reduce using rule 23 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 23 (expresion -> expresion MAS expresion .)
    PRINTLN         reduce using rule 23 (expresion -> expresion MAS expresion .)
    NOT_LOGICO      reduce using rule 23 (expresion -> expresion MAS expresion .)
    PARIZQ          reduce using rule 23 (expresion -> expresion MAS expresion .)
    INT             reduce using rule 23 (expresion -> expresion MAS expresion .)
    FLOAT           reduce using rule 23 (expresion -> expresion MAS expresion .)
    CHAR            reduce using rule 23 (expresion -> expresion MAS expresion .)
    STRING          reduce using rule 23 (expresion -> expresion MAS expresion .)
    BOOL            reduce using rule 23 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 23 (expresion -> expresion MAS expresion .)
    LLAVE_DER       reduce using rule 23 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33

  ! POR             [ reduce using rule 23 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 23 (expresion -> expresion MAS expresion .) ]
  ! POTENCIA        [ reduce using rule 23 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 23 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 28 ]
  ! MENOS           [ shift and go to state 29 ]
  ! OR_LOGICO       [ shift and go to state 34 ]
  ! AND_LOGICO      [ shift and go to state 35 ]
  ! XOR_LOGICO      [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LE              [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NE              [ shift and go to state 42 ]


state 57

    (24) expresion -> expresion MENOS expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    MAS             reduce using rule 24 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 24 (expresion -> expresion MENOS expresion .)
    OR_LOGICO       reduce using rule 24 (expresion -> expresion MENOS expresion .)
    AND_LOGICO      reduce using rule 24 (expresion -> expresion MENOS expresion .)
    XOR_LOGICO      reduce using rule 24 (expresion -> expresion MENOS expresion .)
    GE              reduce using rule 24 (expresion -> expresion MENOS expresion .)
    LE              reduce using rule 24 (expresion -> expresion MENOS expresion .)
    LT              reduce using rule 24 (expresion -> expresion MENOS expresion .)
    GT              reduce using rule 24 (expresion -> expresion MENOS expresion .)
    EQ              reduce using rule 24 (expresion -> expresion MENOS expresion .)
    NE              reduce using rule 24 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 24 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 24 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 24 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 24 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 24 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 24 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 24 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 24 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 24 (expresion -> expresion MENOS expresion .)
    CARACTER        reduce using rule 24 (expresion -> expresion MENOS expresion .)
    CADENA          reduce using rule 24 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 24 (expresion -> expresion MENOS expresion .)
    PRINTLN         reduce using rule 24 (expresion -> expresion MENOS expresion .)
    NOT_LOGICO      reduce using rule 24 (expresion -> expresion MENOS expresion .)
    PARIZQ          reduce using rule 24 (expresion -> expresion MENOS expresion .)
    INT             reduce using rule 24 (expresion -> expresion MENOS expresion .)
    FLOAT           reduce using rule 24 (expresion -> expresion MENOS expresion .)
    CHAR            reduce using rule 24 (expresion -> expresion MENOS expresion .)
    STRING          reduce using rule 24 (expresion -> expresion MENOS expresion .)
    BOOL            reduce using rule 24 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 24 (expresion -> expresion MENOS expresion .)
    LLAVE_DER       reduce using rule 24 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33

  ! POR             [ reduce using rule 24 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 24 (expresion -> expresion MENOS expresion .) ]
  ! POTENCIA        [ reduce using rule 24 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 24 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 28 ]
  ! MENOS           [ shift and go to state 29 ]
  ! OR_LOGICO       [ shift and go to state 34 ]
  ! AND_LOGICO      [ shift and go to state 35 ]
  ! XOR_LOGICO      [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LE              [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NE              [ shift and go to state 42 ]


state 58

    (25) expresion -> expresion POR expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    MAS             reduce using rule 25 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 25 (expresion -> expresion POR expresion .)
    POR             reduce using rule 25 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 25 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 25 (expresion -> expresion POR expresion .)
    OR_LOGICO       reduce using rule 25 (expresion -> expresion POR expresion .)
    AND_LOGICO      reduce using rule 25 (expresion -> expresion POR expresion .)
    XOR_LOGICO      reduce using rule 25 (expresion -> expresion POR expresion .)
    GE              reduce using rule 25 (expresion -> expresion POR expresion .)
    LE              reduce using rule 25 (expresion -> expresion POR expresion .)
    LT              reduce using rule 25 (expresion -> expresion POR expresion .)
    GT              reduce using rule 25 (expresion -> expresion POR expresion .)
    EQ              reduce using rule 25 (expresion -> expresion POR expresion .)
    NE              reduce using rule 25 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 25 (expresion -> expresion POR expresion .)
    $end            reduce using rule 25 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 25 (expresion -> expresion POR expresion .)
    IF              reduce using rule 25 (expresion -> expresion POR expresion .)
    ENTERO          reduce using rule 25 (expresion -> expresion POR expresion .)
    DECIMAL         reduce using rule 25 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 25 (expresion -> expresion POR expresion .)
    TRUE            reduce using rule 25 (expresion -> expresion POR expresion .)
    FALSE           reduce using rule 25 (expresion -> expresion POR expresion .)
    CARACTER        reduce using rule 25 (expresion -> expresion POR expresion .)
    CADENA          reduce using rule 25 (expresion -> expresion POR expresion .)
    ID              reduce using rule 25 (expresion -> expresion POR expresion .)
    PRINTLN         reduce using rule 25 (expresion -> expresion POR expresion .)
    NOT_LOGICO      reduce using rule 25 (expresion -> expresion POR expresion .)
    PARIZQ          reduce using rule 25 (expresion -> expresion POR expresion .)
    INT             reduce using rule 25 (expresion -> expresion POR expresion .)
    FLOAT           reduce using rule 25 (expresion -> expresion POR expresion .)
    CHAR            reduce using rule 25 (expresion -> expresion POR expresion .)
    STRING          reduce using rule 25 (expresion -> expresion POR expresion .)
    BOOL            reduce using rule 25 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 25 (expresion -> expresion POR expresion .)
    LLAVE_DER       reduce using rule 25 (expresion -> expresion POR expresion .)
    POTENCIA        shift and go to state 32

  ! POTENCIA        [ reduce using rule 25 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 28 ]
  ! MENOS           [ shift and go to state 29 ]
  ! POR             [ shift and go to state 30 ]
  ! DIVIDIDO        [ shift and go to state 31 ]
  ! MODULO          [ shift and go to state 33 ]
  ! OR_LOGICO       [ shift and go to state 34 ]
  ! AND_LOGICO      [ shift and go to state 35 ]
  ! XOR_LOGICO      [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LE              [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NE              [ shift and go to state 42 ]


state 59

    (26) expresion -> expresion DIVIDIDO expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    MAS             reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    OR_LOGICO       reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    AND_LOGICO      reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    XOR_LOGICO      reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    GE              reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    LE              reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    LT              reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    GT              reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    EQ              reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    NE              reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    $end            reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    WHILE           reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    IF              reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    ENTERO          reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    DECIMAL         reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    FOR             reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    TRUE            reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    FALSE           reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    CARACTER        reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    CADENA          reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    ID              reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    PRINTLN         reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    NOT_LOGICO      reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    PARIZQ          reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    INT             reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    FLOAT           reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    CHAR            reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    STRING          reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    BOOL            reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    LLAVE_DER       reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .)
    POTENCIA        shift and go to state 32

  ! POTENCIA        [ reduce using rule 26 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAS             [ shift and go to state 28 ]
  ! MENOS           [ shift and go to state 29 ]
  ! POR             [ shift and go to state 30 ]
  ! DIVIDIDO        [ shift and go to state 31 ]
  ! MODULO          [ shift and go to state 33 ]
  ! OR_LOGICO       [ shift and go to state 34 ]
  ! AND_LOGICO      [ shift and go to state 35 ]
  ! XOR_LOGICO      [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LE              [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NE              [ shift and go to state 42 ]


state 60

    (27) expresion -> expresion POTENCIA expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    MAS             reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    MENOS           reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    POR             reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    DIVIDIDO        reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    MODULO          reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    OR_LOGICO       reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    AND_LOGICO      reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    XOR_LOGICO      reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    GE              reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    LE              reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    LT              reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    GT              reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    EQ              reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    NE              reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    PTCOMA          reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    $end            reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    WHILE           reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    IF              reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    ENTERO          reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    DECIMAL         reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    FOR             reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    TRUE            reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    FALSE           reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    CARACTER        reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    CADENA          reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    ID              reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    PRINTLN         reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    NOT_LOGICO      reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    PARIZQ          reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    INT             reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    FLOAT           reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    CHAR            reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    STRING          reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    BOOL            reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    PARDER          reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    LLAVE_DER       reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    POTENCIA        shift and go to state 32

  ! POTENCIA        [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! MAS             [ shift and go to state 28 ]
  ! MENOS           [ shift and go to state 29 ]
  ! POR             [ shift and go to state 30 ]
  ! DIVIDIDO        [ shift and go to state 31 ]
  ! MODULO          [ shift and go to state 33 ]
  ! OR_LOGICO       [ shift and go to state 34 ]
  ! AND_LOGICO      [ shift and go to state 35 ]
  ! XOR_LOGICO      [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LE              [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NE              [ shift and go to state 42 ]


state 61

    (28) expresion -> expresion MODULO expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    MAS             reduce using rule 28 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 28 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 28 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 28 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 28 (expresion -> expresion MODULO expresion .)
    OR_LOGICO       reduce using rule 28 (expresion -> expresion MODULO expresion .)
    AND_LOGICO      reduce using rule 28 (expresion -> expresion MODULO expresion .)
    XOR_LOGICO      reduce using rule 28 (expresion -> expresion MODULO expresion .)
    GE              reduce using rule 28 (expresion -> expresion MODULO expresion .)
    LE              reduce using rule 28 (expresion -> expresion MODULO expresion .)
    LT              reduce using rule 28 (expresion -> expresion MODULO expresion .)
    GT              reduce using rule 28 (expresion -> expresion MODULO expresion .)
    EQ              reduce using rule 28 (expresion -> expresion MODULO expresion .)
    NE              reduce using rule 28 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 28 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 28 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 28 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 28 (expresion -> expresion MODULO expresion .)
    ENTERO          reduce using rule 28 (expresion -> expresion MODULO expresion .)
    DECIMAL         reduce using rule 28 (expresion -> expresion MODULO expresion .)
    FOR             reduce using rule 28 (expresion -> expresion MODULO expresion .)
    TRUE            reduce using rule 28 (expresion -> expresion MODULO expresion .)
    FALSE           reduce using rule 28 (expresion -> expresion MODULO expresion .)
    CARACTER        reduce using rule 28 (expresion -> expresion MODULO expresion .)
    CADENA          reduce using rule 28 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 28 (expresion -> expresion MODULO expresion .)
    PRINTLN         reduce using rule 28 (expresion -> expresion MODULO expresion .)
    NOT_LOGICO      reduce using rule 28 (expresion -> expresion MODULO expresion .)
    PARIZQ          reduce using rule 28 (expresion -> expresion MODULO expresion .)
    INT             reduce using rule 28 (expresion -> expresion MODULO expresion .)
    FLOAT           reduce using rule 28 (expresion -> expresion MODULO expresion .)
    CHAR            reduce using rule 28 (expresion -> expresion MODULO expresion .)
    STRING          reduce using rule 28 (expresion -> expresion MODULO expresion .)
    BOOL            reduce using rule 28 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 28 (expresion -> expresion MODULO expresion .)
    LLAVE_DER       reduce using rule 28 (expresion -> expresion MODULO expresion .)
    POTENCIA        shift and go to state 32

  ! POTENCIA        [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 28 ]
  ! MENOS           [ shift and go to state 29 ]
  ! POR             [ shift and go to state 30 ]
  ! DIVIDIDO        [ shift and go to state 31 ]
  ! MODULO          [ shift and go to state 33 ]
  ! OR_LOGICO       [ shift and go to state 34 ]
  ! AND_LOGICO      [ shift and go to state 35 ]
  ! XOR_LOGICO      [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LE              [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NE              [ shift and go to state 42 ]


state 62

    (37) expresion -> expresion OR_LOGICO expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    OR_LOGICO       reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    NE              reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    PTCOMA          reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    $end            reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    WHILE           reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    IF              reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    ENTERO          reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    DECIMAL         reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    FOR             reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    TRUE            reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    FALSE           reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    CARACTER        reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    CADENA          reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    ID              reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    PRINTLN         reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    NOT_LOGICO      reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    PARIZQ          reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    INT             reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    FLOAT           reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    CHAR            reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    STRING          reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    BOOL            reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    PARDER          reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    LLAVE_DER       reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41

  ! MAS             [ reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .) ]
  ! MENOS           [ reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .) ]
  ! POR             [ reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .) ]
  ! POTENCIA        [ reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .) ]
  ! MODULO          [ reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .) ]
  ! AND_LOGICO      [ reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .) ]
  ! XOR_LOGICO      [ reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .) ]
  ! GE              [ reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .) ]
  ! LE              [ reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .) ]
  ! LT              [ reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .) ]
  ! GT              [ reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .) ]
  ! EQ              [ reduce using rule 37 (expresion -> expresion OR_LOGICO expresion .) ]
  ! OR_LOGICO       [ shift and go to state 34 ]
  ! NE              [ shift and go to state 42 ]


state 63

    (38) expresion -> expresion AND_LOGICO expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    OR_LOGICO       reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    AND_LOGICO      reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    NE              reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    PTCOMA          reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    $end            reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    WHILE           reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    IF              reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    ENTERO          reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    DECIMAL         reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    FOR             reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    TRUE            reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    FALSE           reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    CARACTER        reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    CADENA          reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    ID              reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    PRINTLN         reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    NOT_LOGICO      reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    PARIZQ          reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    INT             reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    FLOAT           reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    CHAR            reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    STRING          reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    BOOL            reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    PARDER          reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    LLAVE_DER       reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41

  ! MAS             [ reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .) ]
  ! MENOS           [ reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .) ]
  ! POR             [ reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .) ]
  ! POTENCIA        [ reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .) ]
  ! MODULO          [ reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .) ]
  ! XOR_LOGICO      [ reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .) ]
  ! GE              [ reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .) ]
  ! LE              [ reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .) ]
  ! LT              [ reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .) ]
  ! GT              [ reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .) ]
  ! EQ              [ reduce using rule 38 (expresion -> expresion AND_LOGICO expresion .) ]
  ! OR_LOGICO       [ shift and go to state 34 ]
  ! AND_LOGICO      [ shift and go to state 35 ]
  ! NE              [ shift and go to state 42 ]


state 64

    (40) expresion -> expresion XOR_LOGICO expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    OR_LOGICO       reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    AND_LOGICO      reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    XOR_LOGICO      reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    NE              reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    PTCOMA          reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    $end            reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    WHILE           reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    IF              reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    ENTERO          reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    DECIMAL         reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    FOR             reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    TRUE            reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    FALSE           reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    CARACTER        reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    CADENA          reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    ID              reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    PRINTLN         reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    NOT_LOGICO      reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    PARIZQ          reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    INT             reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    FLOAT           reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    CHAR            reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    STRING          reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    BOOL            reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    PARDER          reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    LLAVE_DER       reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41

  ! MAS             [ reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! MENOS           [ reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! POR             [ reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! POTENCIA        [ reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! MODULO          [ reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! GE              [ reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! LE              [ reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! LT              [ reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! GT              [ reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! EQ              [ reduce using rule 40 (expresion -> expresion XOR_LOGICO expresion .) ]
  ! OR_LOGICO       [ shift and go to state 34 ]
  ! AND_LOGICO      [ shift and go to state 35 ]
  ! XOR_LOGICO      [ shift and go to state 36 ]
  ! NE              [ shift and go to state 42 ]


state 65

    (41) expresion -> expresion GE expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    OR_LOGICO       reduce using rule 41 (expresion -> expresion GE expresion .)
    AND_LOGICO      reduce using rule 41 (expresion -> expresion GE expresion .)
    XOR_LOGICO      reduce using rule 41 (expresion -> expresion GE expresion .)
    GE              reduce using rule 41 (expresion -> expresion GE expresion .)
    LE              reduce using rule 41 (expresion -> expresion GE expresion .)
    LT              reduce using rule 41 (expresion -> expresion GE expresion .)
    GT              reduce using rule 41 (expresion -> expresion GE expresion .)
    EQ              reduce using rule 41 (expresion -> expresion GE expresion .)
    NE              reduce using rule 41 (expresion -> expresion GE expresion .)
    PTCOMA          reduce using rule 41 (expresion -> expresion GE expresion .)
    $end            reduce using rule 41 (expresion -> expresion GE expresion .)
    WHILE           reduce using rule 41 (expresion -> expresion GE expresion .)
    IF              reduce using rule 41 (expresion -> expresion GE expresion .)
    ENTERO          reduce using rule 41 (expresion -> expresion GE expresion .)
    DECIMAL         reduce using rule 41 (expresion -> expresion GE expresion .)
    FOR             reduce using rule 41 (expresion -> expresion GE expresion .)
    TRUE            reduce using rule 41 (expresion -> expresion GE expresion .)
    FALSE           reduce using rule 41 (expresion -> expresion GE expresion .)
    CARACTER        reduce using rule 41 (expresion -> expresion GE expresion .)
    CADENA          reduce using rule 41 (expresion -> expresion GE expresion .)
    ID              reduce using rule 41 (expresion -> expresion GE expresion .)
    PRINTLN         reduce using rule 41 (expresion -> expresion GE expresion .)
    NOT_LOGICO      reduce using rule 41 (expresion -> expresion GE expresion .)
    PARIZQ          reduce using rule 41 (expresion -> expresion GE expresion .)
    INT             reduce using rule 41 (expresion -> expresion GE expresion .)
    FLOAT           reduce using rule 41 (expresion -> expresion GE expresion .)
    CHAR            reduce using rule 41 (expresion -> expresion GE expresion .)
    STRING          reduce using rule 41 (expresion -> expresion GE expresion .)
    BOOL            reduce using rule 41 (expresion -> expresion GE expresion .)
    PARDER          reduce using rule 41 (expresion -> expresion GE expresion .)
    LLAVE_DER       reduce using rule 41 (expresion -> expresion GE expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33

  ! MAS             [ reduce using rule 41 (expresion -> expresion GE expresion .) ]
  ! MENOS           [ reduce using rule 41 (expresion -> expresion GE expresion .) ]
  ! POR             [ reduce using rule 41 (expresion -> expresion GE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 41 (expresion -> expresion GE expresion .) ]
  ! POTENCIA        [ reduce using rule 41 (expresion -> expresion GE expresion .) ]
  ! MODULO          [ reduce using rule 41 (expresion -> expresion GE expresion .) ]
  ! OR_LOGICO       [ shift and go to state 34 ]
  ! AND_LOGICO      [ shift and go to state 35 ]
  ! XOR_LOGICO      [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LE              [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NE              [ shift and go to state 42 ]


state 66

    (42) expresion -> expresion LE expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    OR_LOGICO       reduce using rule 42 (expresion -> expresion LE expresion .)
    AND_LOGICO      reduce using rule 42 (expresion -> expresion LE expresion .)
    XOR_LOGICO      reduce using rule 42 (expresion -> expresion LE expresion .)
    GE              reduce using rule 42 (expresion -> expresion LE expresion .)
    LE              reduce using rule 42 (expresion -> expresion LE expresion .)
    LT              reduce using rule 42 (expresion -> expresion LE expresion .)
    GT              reduce using rule 42 (expresion -> expresion LE expresion .)
    EQ              reduce using rule 42 (expresion -> expresion LE expresion .)
    NE              reduce using rule 42 (expresion -> expresion LE expresion .)
    PTCOMA          reduce using rule 42 (expresion -> expresion LE expresion .)
    $end            reduce using rule 42 (expresion -> expresion LE expresion .)
    WHILE           reduce using rule 42 (expresion -> expresion LE expresion .)
    IF              reduce using rule 42 (expresion -> expresion LE expresion .)
    ENTERO          reduce using rule 42 (expresion -> expresion LE expresion .)
    DECIMAL         reduce using rule 42 (expresion -> expresion LE expresion .)
    FOR             reduce using rule 42 (expresion -> expresion LE expresion .)
    TRUE            reduce using rule 42 (expresion -> expresion LE expresion .)
    FALSE           reduce using rule 42 (expresion -> expresion LE expresion .)
    CARACTER        reduce using rule 42 (expresion -> expresion LE expresion .)
    CADENA          reduce using rule 42 (expresion -> expresion LE expresion .)
    ID              reduce using rule 42 (expresion -> expresion LE expresion .)
    PRINTLN         reduce using rule 42 (expresion -> expresion LE expresion .)
    NOT_LOGICO      reduce using rule 42 (expresion -> expresion LE expresion .)
    PARIZQ          reduce using rule 42 (expresion -> expresion LE expresion .)
    INT             reduce using rule 42 (expresion -> expresion LE expresion .)
    FLOAT           reduce using rule 42 (expresion -> expresion LE expresion .)
    CHAR            reduce using rule 42 (expresion -> expresion LE expresion .)
    STRING          reduce using rule 42 (expresion -> expresion LE expresion .)
    BOOL            reduce using rule 42 (expresion -> expresion LE expresion .)
    PARDER          reduce using rule 42 (expresion -> expresion LE expresion .)
    LLAVE_DER       reduce using rule 42 (expresion -> expresion LE expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33

  ! MAS             [ reduce using rule 42 (expresion -> expresion LE expresion .) ]
  ! MENOS           [ reduce using rule 42 (expresion -> expresion LE expresion .) ]
  ! POR             [ reduce using rule 42 (expresion -> expresion LE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 42 (expresion -> expresion LE expresion .) ]
  ! POTENCIA        [ reduce using rule 42 (expresion -> expresion LE expresion .) ]
  ! MODULO          [ reduce using rule 42 (expresion -> expresion LE expresion .) ]
  ! OR_LOGICO       [ shift and go to state 34 ]
  ! AND_LOGICO      [ shift and go to state 35 ]
  ! XOR_LOGICO      [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LE              [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NE              [ shift and go to state 42 ]


state 67

    (43) expresion -> expresion LT expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    OR_LOGICO       reduce using rule 43 (expresion -> expresion LT expresion .)
    AND_LOGICO      reduce using rule 43 (expresion -> expresion LT expresion .)
    XOR_LOGICO      reduce using rule 43 (expresion -> expresion LT expresion .)
    GE              reduce using rule 43 (expresion -> expresion LT expresion .)
    LE              reduce using rule 43 (expresion -> expresion LT expresion .)
    LT              reduce using rule 43 (expresion -> expresion LT expresion .)
    GT              reduce using rule 43 (expresion -> expresion LT expresion .)
    EQ              reduce using rule 43 (expresion -> expresion LT expresion .)
    NE              reduce using rule 43 (expresion -> expresion LT expresion .)
    PTCOMA          reduce using rule 43 (expresion -> expresion LT expresion .)
    $end            reduce using rule 43 (expresion -> expresion LT expresion .)
    WHILE           reduce using rule 43 (expresion -> expresion LT expresion .)
    IF              reduce using rule 43 (expresion -> expresion LT expresion .)
    ENTERO          reduce using rule 43 (expresion -> expresion LT expresion .)
    DECIMAL         reduce using rule 43 (expresion -> expresion LT expresion .)
    FOR             reduce using rule 43 (expresion -> expresion LT expresion .)
    TRUE            reduce using rule 43 (expresion -> expresion LT expresion .)
    FALSE           reduce using rule 43 (expresion -> expresion LT expresion .)
    CARACTER        reduce using rule 43 (expresion -> expresion LT expresion .)
    CADENA          reduce using rule 43 (expresion -> expresion LT expresion .)
    ID              reduce using rule 43 (expresion -> expresion LT expresion .)
    PRINTLN         reduce using rule 43 (expresion -> expresion LT expresion .)
    NOT_LOGICO      reduce using rule 43 (expresion -> expresion LT expresion .)
    PARIZQ          reduce using rule 43 (expresion -> expresion LT expresion .)
    INT             reduce using rule 43 (expresion -> expresion LT expresion .)
    FLOAT           reduce using rule 43 (expresion -> expresion LT expresion .)
    CHAR            reduce using rule 43 (expresion -> expresion LT expresion .)
    STRING          reduce using rule 43 (expresion -> expresion LT expresion .)
    BOOL            reduce using rule 43 (expresion -> expresion LT expresion .)
    PARDER          reduce using rule 43 (expresion -> expresion LT expresion .)
    LLAVE_DER       reduce using rule 43 (expresion -> expresion LT expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33

  ! MAS             [ reduce using rule 43 (expresion -> expresion LT expresion .) ]
  ! MENOS           [ reduce using rule 43 (expresion -> expresion LT expresion .) ]
  ! POR             [ reduce using rule 43 (expresion -> expresion LT expresion .) ]
  ! DIVIDIDO        [ reduce using rule 43 (expresion -> expresion LT expresion .) ]
  ! POTENCIA        [ reduce using rule 43 (expresion -> expresion LT expresion .) ]
  ! MODULO          [ reduce using rule 43 (expresion -> expresion LT expresion .) ]
  ! OR_LOGICO       [ shift and go to state 34 ]
  ! AND_LOGICO      [ shift and go to state 35 ]
  ! XOR_LOGICO      [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LE              [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NE              [ shift and go to state 42 ]


state 68

    (44) expresion -> expresion GT expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    OR_LOGICO       reduce using rule 44 (expresion -> expresion GT expresion .)
    AND_LOGICO      reduce using rule 44 (expresion -> expresion GT expresion .)
    XOR_LOGICO      reduce using rule 44 (expresion -> expresion GT expresion .)
    GE              reduce using rule 44 (expresion -> expresion GT expresion .)
    LE              reduce using rule 44 (expresion -> expresion GT expresion .)
    LT              reduce using rule 44 (expresion -> expresion GT expresion .)
    GT              reduce using rule 44 (expresion -> expresion GT expresion .)
    EQ              reduce using rule 44 (expresion -> expresion GT expresion .)
    NE              reduce using rule 44 (expresion -> expresion GT expresion .)
    PTCOMA          reduce using rule 44 (expresion -> expresion GT expresion .)
    $end            reduce using rule 44 (expresion -> expresion GT expresion .)
    WHILE           reduce using rule 44 (expresion -> expresion GT expresion .)
    IF              reduce using rule 44 (expresion -> expresion GT expresion .)
    ENTERO          reduce using rule 44 (expresion -> expresion GT expresion .)
    DECIMAL         reduce using rule 44 (expresion -> expresion GT expresion .)
    FOR             reduce using rule 44 (expresion -> expresion GT expresion .)
    TRUE            reduce using rule 44 (expresion -> expresion GT expresion .)
    FALSE           reduce using rule 44 (expresion -> expresion GT expresion .)
    CARACTER        reduce using rule 44 (expresion -> expresion GT expresion .)
    CADENA          reduce using rule 44 (expresion -> expresion GT expresion .)
    ID              reduce using rule 44 (expresion -> expresion GT expresion .)
    PRINTLN         reduce using rule 44 (expresion -> expresion GT expresion .)
    NOT_LOGICO      reduce using rule 44 (expresion -> expresion GT expresion .)
    PARIZQ          reduce using rule 44 (expresion -> expresion GT expresion .)
    INT             reduce using rule 44 (expresion -> expresion GT expresion .)
    FLOAT           reduce using rule 44 (expresion -> expresion GT expresion .)
    CHAR            reduce using rule 44 (expresion -> expresion GT expresion .)
    STRING          reduce using rule 44 (expresion -> expresion GT expresion .)
    BOOL            reduce using rule 44 (expresion -> expresion GT expresion .)
    PARDER          reduce using rule 44 (expresion -> expresion GT expresion .)
    LLAVE_DER       reduce using rule 44 (expresion -> expresion GT expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33

  ! MAS             [ reduce using rule 44 (expresion -> expresion GT expresion .) ]
  ! MENOS           [ reduce using rule 44 (expresion -> expresion GT expresion .) ]
  ! POR             [ reduce using rule 44 (expresion -> expresion GT expresion .) ]
  ! DIVIDIDO        [ reduce using rule 44 (expresion -> expresion GT expresion .) ]
  ! POTENCIA        [ reduce using rule 44 (expresion -> expresion GT expresion .) ]
  ! MODULO          [ reduce using rule 44 (expresion -> expresion GT expresion .) ]
  ! OR_LOGICO       [ shift and go to state 34 ]
  ! AND_LOGICO      [ shift and go to state 35 ]
  ! XOR_LOGICO      [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LE              [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NE              [ shift and go to state 42 ]


state 69

    (45) expresion -> expresion EQ expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    OR_LOGICO       reduce using rule 45 (expresion -> expresion EQ expresion .)
    AND_LOGICO      reduce using rule 45 (expresion -> expresion EQ expresion .)
    XOR_LOGICO      reduce using rule 45 (expresion -> expresion EQ expresion .)
    GE              reduce using rule 45 (expresion -> expresion EQ expresion .)
    LE              reduce using rule 45 (expresion -> expresion EQ expresion .)
    LT              reduce using rule 45 (expresion -> expresion EQ expresion .)
    GT              reduce using rule 45 (expresion -> expresion EQ expresion .)
    EQ              reduce using rule 45 (expresion -> expresion EQ expresion .)
    NE              reduce using rule 45 (expresion -> expresion EQ expresion .)
    PTCOMA          reduce using rule 45 (expresion -> expresion EQ expresion .)
    $end            reduce using rule 45 (expresion -> expresion EQ expresion .)
    WHILE           reduce using rule 45 (expresion -> expresion EQ expresion .)
    IF              reduce using rule 45 (expresion -> expresion EQ expresion .)
    ENTERO          reduce using rule 45 (expresion -> expresion EQ expresion .)
    DECIMAL         reduce using rule 45 (expresion -> expresion EQ expresion .)
    FOR             reduce using rule 45 (expresion -> expresion EQ expresion .)
    TRUE            reduce using rule 45 (expresion -> expresion EQ expresion .)
    FALSE           reduce using rule 45 (expresion -> expresion EQ expresion .)
    CARACTER        reduce using rule 45 (expresion -> expresion EQ expresion .)
    CADENA          reduce using rule 45 (expresion -> expresion EQ expresion .)
    ID              reduce using rule 45 (expresion -> expresion EQ expresion .)
    PRINTLN         reduce using rule 45 (expresion -> expresion EQ expresion .)
    NOT_LOGICO      reduce using rule 45 (expresion -> expresion EQ expresion .)
    PARIZQ          reduce using rule 45 (expresion -> expresion EQ expresion .)
    INT             reduce using rule 45 (expresion -> expresion EQ expresion .)
    FLOAT           reduce using rule 45 (expresion -> expresion EQ expresion .)
    CHAR            reduce using rule 45 (expresion -> expresion EQ expresion .)
    STRING          reduce using rule 45 (expresion -> expresion EQ expresion .)
    BOOL            reduce using rule 45 (expresion -> expresion EQ expresion .)
    PARDER          reduce using rule 45 (expresion -> expresion EQ expresion .)
    LLAVE_DER       reduce using rule 45 (expresion -> expresion EQ expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33

  ! MAS             [ reduce using rule 45 (expresion -> expresion EQ expresion .) ]
  ! MENOS           [ reduce using rule 45 (expresion -> expresion EQ expresion .) ]
  ! POR             [ reduce using rule 45 (expresion -> expresion EQ expresion .) ]
  ! DIVIDIDO        [ reduce using rule 45 (expresion -> expresion EQ expresion .) ]
  ! POTENCIA        [ reduce using rule 45 (expresion -> expresion EQ expresion .) ]
  ! MODULO          [ reduce using rule 45 (expresion -> expresion EQ expresion .) ]
  ! OR_LOGICO       [ shift and go to state 34 ]
  ! AND_LOGICO      [ shift and go to state 35 ]
  ! XOR_LOGICO      [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LE              [ shift and go to state 38 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NE              [ shift and go to state 42 ]


state 70

    (46) expresion -> expresion NE expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for OR_LOGICO resolved as shift
  ! shift/reduce conflict for AND_LOGICO resolved as shift
  ! shift/reduce conflict for XOR_LOGICO resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    PTCOMA          reduce using rule 46 (expresion -> expresion NE expresion .)
    $end            reduce using rule 46 (expresion -> expresion NE expresion .)
    WHILE           reduce using rule 46 (expresion -> expresion NE expresion .)
    IF              reduce using rule 46 (expresion -> expresion NE expresion .)
    ENTERO          reduce using rule 46 (expresion -> expresion NE expresion .)
    DECIMAL         reduce using rule 46 (expresion -> expresion NE expresion .)
    FOR             reduce using rule 46 (expresion -> expresion NE expresion .)
    TRUE            reduce using rule 46 (expresion -> expresion NE expresion .)
    FALSE           reduce using rule 46 (expresion -> expresion NE expresion .)
    CARACTER        reduce using rule 46 (expresion -> expresion NE expresion .)
    CADENA          reduce using rule 46 (expresion -> expresion NE expresion .)
    ID              reduce using rule 46 (expresion -> expresion NE expresion .)
    PRINTLN         reduce using rule 46 (expresion -> expresion NE expresion .)
    NOT_LOGICO      reduce using rule 46 (expresion -> expresion NE expresion .)
    PARIZQ          reduce using rule 46 (expresion -> expresion NE expresion .)
    INT             reduce using rule 46 (expresion -> expresion NE expresion .)
    FLOAT           reduce using rule 46 (expresion -> expresion NE expresion .)
    CHAR            reduce using rule 46 (expresion -> expresion NE expresion .)
    STRING          reduce using rule 46 (expresion -> expresion NE expresion .)
    BOOL            reduce using rule 46 (expresion -> expresion NE expresion .)
    PARDER          reduce using rule 46 (expresion -> expresion NE expresion .)
    LLAVE_DER       reduce using rule 46 (expresion -> expresion NE expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41
    NE              shift and go to state 42

  ! MAS             [ reduce using rule 46 (expresion -> expresion NE expresion .) ]
  ! MENOS           [ reduce using rule 46 (expresion -> expresion NE expresion .) ]
  ! POR             [ reduce using rule 46 (expresion -> expresion NE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 46 (expresion -> expresion NE expresion .) ]
  ! POTENCIA        [ reduce using rule 46 (expresion -> expresion NE expresion .) ]
  ! MODULO          [ reduce using rule 46 (expresion -> expresion NE expresion .) ]
  ! OR_LOGICO       [ reduce using rule 46 (expresion -> expresion NE expresion .) ]
  ! AND_LOGICO      [ reduce using rule 46 (expresion -> expresion NE expresion .) ]
  ! XOR_LOGICO      [ reduce using rule 46 (expresion -> expresion NE expresion .) ]
  ! GE              [ reduce using rule 46 (expresion -> expresion NE expresion .) ]
  ! LE              [ reduce using rule 46 (expresion -> expresion NE expresion .) ]
  ! LT              [ reduce using rule 46 (expresion -> expresion NE expresion .) ]
  ! GT              [ reduce using rule 46 (expresion -> expresion NE expresion .) ]
  ! EQ              [ reduce using rule 46 (expresion -> expresion NE expresion .) ]
  ! NE              [ reduce using rule 46 (expresion -> expresion NE expresion .) ]


state 71

    (7) lista_expresiones -> lista_expresiones expresion PTCOMA .

    WHILE           reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    IF              reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    ENTERO          reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    DECIMAL         reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    FOR             reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    TRUE            reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    FALSE           reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    CARACTER        reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    CADENA          reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    ID              reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    MENOS           reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    PRINTLN         reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    NOT_LOGICO      reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    PARIZQ          reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    INT             reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    FLOAT           reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    CHAR            reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    STRING          reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    BOOL            reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    $end            reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)
    LLAVE_DER       reduce using rule 7 (lista_expresiones -> lista_expresiones expresion PTCOMA .)


state 72

    (9) expresion -> WHILE PARIZQ expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    PARDER          shift and go to state 80
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41
    NE              shift and go to state 42


state 73

    (51) expresion -> PARIZQ expresion PARDER .

    MAS             reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    OR_LOGICO       reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    AND_LOGICO      reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    XOR_LOGICO      reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    GE              reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    LE              reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    LT              reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    GT              reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    EQ              reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    NE              reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    $end            reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    WHILE           reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    IF              reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    FOR             reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    TRUE            reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    FALSE           reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    CADENA          reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    ID              reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    NOT_LOGICO      reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    INT             reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    CHAR            reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    STRING          reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    BOOL            reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)
    LLAVE_DER       reduce using rule 51 (expresion -> PARIZQ expresion PARDER .)


state 74

    (10) expresion -> IF PARIZQ expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> IF PARIZQ expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> IF PARIZQ expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    PARDER          shift and go to state 81
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41
    NE              shift and go to state 42


state 75

    (15) expresion -> FOR PARIZQ tipo . ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER

    ID              shift and go to state 82


state 76

    (16) expresion -> FOR PARIZQ ID . ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER

    ASIGNACION      shift and go to state 83


state 77

    (36) expresion -> tipo ID ASIGNACION . expresion PTCOMA
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    tipo                           shift and go to state 12
    expresion                      shift and go to state 84

state 78

    (29) expresion -> ID ASIGNACION expresion . PTCOMA
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 85
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41
    NE              shift and go to state 42


state 79

    (35) expresion -> PRINTLN PARIZQ expresion . PARDER
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    PARDER          shift and go to state 86
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41
    NE              shift and go to state 42


state 80

    (9) expresion -> WHILE PARIZQ expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER

    LLAVE_IZQ       shift and go to state 87


state 81

    (10) expresion -> IF PARIZQ expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> IF PARIZQ expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> IF PARIZQ expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion

    LLAVE_IZQ       shift and go to state 88


state 82

    (15) expresion -> FOR PARIZQ tipo ID . ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER

    ASIGNACION      shift and go to state 89


state 83

    (16) expresion -> FOR PARIZQ ID ASIGNACION . expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 90
    tipo                           shift and go to state 12

state 84

    (36) expresion -> tipo ID ASIGNACION expresion . PTCOMA
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 91
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41
    NE              shift and go to state 42


state 85

    (29) expresion -> ID ASIGNACION expresion PTCOMA .

    MAS             reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    MENOS           reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    POR             reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    DIVIDIDO        reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    POTENCIA        reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    MODULO          reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    OR_LOGICO       reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    AND_LOGICO      reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    XOR_LOGICO      reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    GE              reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    LE              reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    LT              reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    GT              reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    EQ              reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    NE              reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    PTCOMA          reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    $end            reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    WHILE           reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    IF              reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    ENTERO          reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    DECIMAL         reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    FOR             reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    TRUE            reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    FALSE           reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    CARACTER        reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    CADENA          reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    ID              reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    PRINTLN         reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    NOT_LOGICO      reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    PARIZQ          reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    INT             reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    FLOAT           reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    CHAR            reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    STRING          reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    BOOL            reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    PARDER          reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)
    LLAVE_DER       reduce using rule 29 (expresion -> ID ASIGNACION expresion PTCOMA .)


state 86

    (35) expresion -> PRINTLN PARIZQ expresion PARDER .

    MAS             reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    MENOS           reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    POR             reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    MODULO          reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    OR_LOGICO       reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    AND_LOGICO      reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    XOR_LOGICO      reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    GE              reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    LE              reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    LT              reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    GT              reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    EQ              reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    NE              reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    $end            reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    WHILE           reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    IF              reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    FOR             reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    TRUE            reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    FALSE           reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    CADENA          reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    ID              reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    NOT_LOGICO      reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    INT             reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    CHAR            reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    STRING          reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    BOOL            reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    PARDER          reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)
    LLAVE_DER       reduce using rule 35 (expresion -> PRINTLN PARIZQ expresion PARDER .)


state 87

    (9) expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 92
    lista_expresiones              shift and go to state 93
    tipo                           shift and go to state 12

state 88

    (10) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER
    (11) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER ELSE expresion
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 92
    lista_expresiones              shift and go to state 94
    tipo                           shift and go to state 12

state 89

    (15) expresion -> FOR PARIZQ tipo ID ASIGNACION . expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    tipo                           shift and go to state 12
    expresion                      shift and go to state 95

state 90

    (16) expresion -> FOR PARIZQ ID ASIGNACION expresion . PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 96
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41
    NE              shift and go to state 42


state 91

    (36) expresion -> tipo ID ASIGNACION expresion PTCOMA .

    MAS             reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    MENOS           reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    POR             reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    DIVIDIDO        reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    POTENCIA        reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    MODULO          reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    OR_LOGICO       reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    AND_LOGICO      reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    XOR_LOGICO      reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    GE              reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    LE              reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    LT              reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    GT              reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    EQ              reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    NE              reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    PTCOMA          reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    $end            reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    WHILE           reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    IF              reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    ENTERO          reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    DECIMAL         reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    FOR             reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    TRUE            reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    FALSE           reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    CARACTER        reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    CADENA          reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    ID              reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    PRINTLN         reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    NOT_LOGICO      reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    PARIZQ          reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    INT             reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    FLOAT           reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    CHAR            reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    STRING          reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    BOOL            reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    PARDER          reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)
    LLAVE_DER       reduce using rule 36 (expresion -> tipo ID ASIGNACION expresion PTCOMA .)


state 92

    (5) lista_expresiones -> expresion . PTCOMA
    (6) lista_expresiones -> expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

  ! shift/reduce conflict for MENOS resolved as shift
    PTCOMA          shift and go to state 43
    LLAVE_DER       reduce using rule 6 (lista_expresiones -> expresion .)
    WHILE           reduce using rule 6 (lista_expresiones -> expresion .)
    IF              reduce using rule 6 (lista_expresiones -> expresion .)
    ENTERO          reduce using rule 6 (lista_expresiones -> expresion .)
    DECIMAL         reduce using rule 6 (lista_expresiones -> expresion .)
    FOR             reduce using rule 6 (lista_expresiones -> expresion .)
    TRUE            reduce using rule 6 (lista_expresiones -> expresion .)
    FALSE           reduce using rule 6 (lista_expresiones -> expresion .)
    CARACTER        reduce using rule 6 (lista_expresiones -> expresion .)
    CADENA          reduce using rule 6 (lista_expresiones -> expresion .)
    ID              reduce using rule 6 (lista_expresiones -> expresion .)
    PRINTLN         reduce using rule 6 (lista_expresiones -> expresion .)
    NOT_LOGICO      reduce using rule 6 (lista_expresiones -> expresion .)
    PARIZQ          reduce using rule 6 (lista_expresiones -> expresion .)
    INT             reduce using rule 6 (lista_expresiones -> expresion .)
    FLOAT           reduce using rule 6 (lista_expresiones -> expresion .)
    CHAR            reduce using rule 6 (lista_expresiones -> expresion .)
    STRING          reduce using rule 6 (lista_expresiones -> expresion .)
    BOOL            reduce using rule 6 (lista_expresiones -> expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41
    NE              shift and go to state 42

  ! MENOS           [ reduce using rule 6 (lista_expresiones -> expresion .) ]


state 93

    (9) expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    LLAVE_DER       shift and go to state 97
    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 44
    tipo                           shift and go to state 12

state 94

    (10) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER
    (11) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER ELSE expresion
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    LLAVE_DER       shift and go to state 98
    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 44
    tipo                           shift and go to state 12

state 95

    (15) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion . PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 99
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41
    NE              shift and go to state 42


state 96

    (16) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA . expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 100
    tipo                           shift and go to state 12

state 97

    (9) expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .

    MAS             reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MENOS           reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POR             reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DIVIDIDO        reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POTENCIA        reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MODULO          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    OR_LOGICO       reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    AND_LOGICO      reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    XOR_LOGICO      reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GE              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LE              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LT              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GT              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EQ              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NE              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PTCOMA          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    $end            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    WHILE           reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    IF              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ENTERO          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DECIMAL         reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FOR             reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    TRUE            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FALSE           reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CARACTER        reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CADENA          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ID              reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PRINTLN         reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NOT_LOGICO      reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARIZQ          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INT             reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FLOAT           reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CHAR            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    STRING          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BOOL            reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARDER          reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LLAVE_DER       reduce using rule 9 (expresion -> WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)


state 98

    (10) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .
    (11) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER . ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER . ELSE expresion

    MAS             reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MENOS           reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POR             reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DIVIDIDO        reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POTENCIA        reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MODULO          reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    OR_LOGICO       reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    AND_LOGICO      reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    XOR_LOGICO      reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GE              reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LE              reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LT              reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GT              reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EQ              reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NE              reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PTCOMA          reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    $end            reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    WHILE           reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    IF              reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ENTERO          reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DECIMAL         reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FOR             reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    TRUE            reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FALSE           reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CARACTER        reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CADENA          reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ID              reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PRINTLN         reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NOT_LOGICO      reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARIZQ          reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INT             reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FLOAT           reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CHAR            reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    STRING          reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BOOL            reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARDER          reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LLAVE_DER       reduce using rule 10 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ELSE            shift and go to state 101


state 99

    (15) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA . expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    tipo                           shift and go to state 12
    expresion                      shift and go to state 102

state 100

    (16) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion . PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 103
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41
    NE              shift and go to state 42


state 101

    (11) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE . LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    LLAVE_IZQ       shift and go to state 105
    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 104
    tipo                           shift and go to state 12

state 102

    (15) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion . PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    PTCOMA          shift and go to state 106
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41
    NE              shift and go to state 42


state 103

    (16) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 107
    tipo                           shift and go to state 12

state 104

    (12) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for OR_LOGICO resolved as shift
  ! shift/reduce conflict for AND_LOGICO resolved as shift
  ! shift/reduce conflict for XOR_LOGICO resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    PTCOMA          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    $end            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    WHILE           reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    IF              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    ENTERO          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    DECIMAL         reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    FOR             reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    TRUE            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    FALSE           reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    CARACTER        reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    CADENA          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    ID              reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    PRINTLN         reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    NOT_LOGICO      reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    PARIZQ          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    INT             reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    FLOAT           reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    CHAR            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    STRING          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    BOOL            reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    PARDER          reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    LLAVE_DER       reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41
    NE              shift and go to state 42

  ! MAS             [ reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! MENOS           [ reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! POR             [ reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! POTENCIA        [ reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! MODULO          [ reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! OR_LOGICO       [ reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! AND_LOGICO      [ reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! XOR_LOGICO      [ reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! GE              [ reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! LE              [ reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! LT              [ reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! GT              [ reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! EQ              [ reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]
  ! NE              [ reduce using rule 12 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion .) ]


state 105

    (11) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ . lista_expresiones LLAVE_DER
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 92
    lista_expresiones              shift and go to state 108
    tipo                           shift and go to state 12

state 106

    (15) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA . expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    tipo                           shift and go to state 12
    expresion                      shift and go to state 109

state 107

    (16) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    PARDER          shift and go to state 110
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41
    NE              shift and go to state 42


state 108

    (11) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones . LLAVE_DER
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    LLAVE_DER       shift and go to state 111
    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 44
    tipo                           shift and go to state 12

state 109

    (15) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion . PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIDO expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (37) expresion -> expresion . OR_LOGICO expresion
    (38) expresion -> expresion . AND_LOGICO expresion
    (40) expresion -> expresion . XOR_LOGICO expresion
    (41) expresion -> expresion . GE expresion
    (42) expresion -> expresion . LE expresion
    (43) expresion -> expresion . LT expresion
    (44) expresion -> expresion . GT expresion
    (45) expresion -> expresion . EQ expresion
    (46) expresion -> expresion . NE expresion

    PARDER          shift and go to state 112
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    POR             shift and go to state 30
    DIVIDIDO        shift and go to state 31
    POTENCIA        shift and go to state 32
    MODULO          shift and go to state 33
    OR_LOGICO       shift and go to state 34
    AND_LOGICO      shift and go to state 35
    XOR_LOGICO      shift and go to state 36
    GE              shift and go to state 37
    LE              shift and go to state 38
    LT              shift and go to state 39
    GT              shift and go to state 40
    EQ              shift and go to state 41
    NE              shift and go to state 42


state 110

    (16) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER

    LLAVE_IZQ       shift and go to state 113


state 111

    (11) expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .

    MAS             reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MENOS           reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POR             reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DIVIDIDO        reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POTENCIA        reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MODULO          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    OR_LOGICO       reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    AND_LOGICO      reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    XOR_LOGICO      reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GE              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LE              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LT              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GT              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EQ              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NE              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PTCOMA          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    $end            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    WHILE           reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    IF              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ENTERO          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DECIMAL         reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FOR             reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    TRUE            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FALSE           reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CARACTER        reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CADENA          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ID              reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PRINTLN         reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NOT_LOGICO      reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARIZQ          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INT             reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FLOAT           reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CHAR            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    STRING          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BOOL            reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARDER          reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LLAVE_DER       reduce using rule 11 (expresion -> IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER .)


state 112

    (15) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER . LLAVE_IZQ lista_expresiones LLAVE_DER

    LLAVE_IZQ       shift and go to state 114


state 113

    (16) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 92
    lista_expresiones              shift and go to state 115
    tipo                           shift and go to state 12

state 114

    (15) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ . lista_expresiones LLAVE_DER
    (5) lista_expresiones -> . expresion PTCOMA
    (6) lista_expresiones -> . expresion
    (7) lista_expresiones -> . lista_expresiones expresion PTCOMA
    (8) lista_expresiones -> . lista_expresiones expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    tipo                           shift and go to state 12
    expresion                      shift and go to state 92
    lista_expresiones              shift and go to state 116

state 115

    (16) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    LLAVE_DER       shift and go to state 117
    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    expresion                      shift and go to state 44
    tipo                           shift and go to state 12

state 116

    (15) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones . LLAVE_DER
    (7) lista_expresiones -> lista_expresiones . expresion PTCOMA
    (8) lista_expresiones -> lista_expresiones . expresion
    (9) expresion -> . WHILE PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (10) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (11) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE LLAVE_IZQ lista_expresiones LLAVE_DER
    (12) expresion -> . IF PARIZQ expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER ELSE expresion
    (13) expresion -> . ENTERO
    (14) expresion -> . DECIMAL
    (15) expresion -> . FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (16) expresion -> . FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER
    (17) expresion -> . TRUE
    (18) expresion -> . FALSE
    (19) expresion -> . CARACTER
    (20) expresion -> . CADENA
    (21) expresion -> . ID
    (22) expresion -> . MENOS expresion
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIDO expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . ID ASIGNACION expresion PTCOMA
    (35) expresion -> . PRINTLN PARIZQ expresion PARDER
    (36) expresion -> . tipo ID ASIGNACION expresion PTCOMA
    (37) expresion -> . expresion OR_LOGICO expresion
    (38) expresion -> . expresion AND_LOGICO expresion
    (39) expresion -> . NOT_LOGICO expresion
    (40) expresion -> . expresion XOR_LOGICO expresion
    (41) expresion -> . expresion GE expresion
    (42) expresion -> . expresion LE expresion
    (43) expresion -> . expresion LT expresion
    (44) expresion -> . expresion GT expresion
    (45) expresion -> . expresion EQ expresion
    (46) expresion -> . expresion NE expresion
    (47) expresion -> . ID INCREMENTO
    (48) expresion -> . ID DECREMENTO
    (51) expresion -> . PARIZQ expresion PARDER
    (30) tipo -> . INT
    (31) tipo -> . FLOAT
    (32) tipo -> . CHAR
    (33) tipo -> . STRING
    (34) tipo -> . BOOL

    LLAVE_DER       shift and go to state 118
    WHILE           shift and go to state 6
    IF              shift and go to state 8
    ENTERO          shift and go to state 9
    DECIMAL         shift and go to state 10
    FOR             shift and go to state 11
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    CARACTER        shift and go to state 16
    CADENA          shift and go to state 17
    ID              shift and go to state 13
    MENOS           shift and go to state 18
    PRINTLN         shift and go to state 19
    NOT_LOGICO      shift and go to state 20
    PARIZQ          shift and go to state 7
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    STRING          shift and go to state 26
    BOOL            shift and go to state 27

    tipo                           shift and go to state 12
    expresion                      shift and go to state 44

state 117

    (16) expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .

    MAS             reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MENOS           reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POR             reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DIVIDIDO        reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POTENCIA        reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MODULO          reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    OR_LOGICO       reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    AND_LOGICO      reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    XOR_LOGICO      reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GE              reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LE              reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LT              reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GT              reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EQ              reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NE              reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PTCOMA          reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    $end            reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    WHILE           reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    IF              reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ENTERO          reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DECIMAL         reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FOR             reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    TRUE            reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FALSE           reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CARACTER        reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CADENA          reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ID              reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PRINTLN         reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NOT_LOGICO      reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARIZQ          reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INT             reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FLOAT           reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CHAR            reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    STRING          reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BOOL            reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARDER          reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LLAVE_DER       reduce using rule 16 (expresion -> FOR PARIZQ ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)


state 118

    (15) expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .

    MAS             reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MENOS           reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POR             reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DIVIDIDO        reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    POTENCIA        reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    MODULO          reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    OR_LOGICO       reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    AND_LOGICO      reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    XOR_LOGICO      reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GE              reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LE              reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LT              reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    GT              reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    EQ              reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NE              reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PTCOMA          reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    $end            reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    WHILE           reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    IF              reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ENTERO          reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    DECIMAL         reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FOR             reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    TRUE            reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FALSE           reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CARACTER        reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CADENA          reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    ID              reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PRINTLN         reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    NOT_LOGICO      reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARIZQ          reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    INT             reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    FLOAT           reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    CHAR            reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    STRING          reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    BOOL            reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    PARDER          reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)
    LLAVE_DER       reduce using rule 15 (expresion -> FOR PARIZQ tipo ID ASIGNACION expresion PTCOMA expresion PTCOMA expresion PARDER LLAVE_IZQ lista_expresiones LLAVE_DER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MENOS in state 2 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 44 resolved as shift
WARNING: shift/reduce conflict for MAS in state 70 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 70 resolved as shift
WARNING: shift/reduce conflict for POR in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 70 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 70 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 70 resolved as shift
WARNING: shift/reduce conflict for OR_LOGICO in state 70 resolved as shift
WARNING: shift/reduce conflict for AND_LOGICO in state 70 resolved as shift
WARNING: shift/reduce conflict for XOR_LOGICO in state 70 resolved as shift
WARNING: shift/reduce conflict for GE in state 70 resolved as shift
WARNING: shift/reduce conflict for LE in state 70 resolved as shift
WARNING: shift/reduce conflict for LT in state 70 resolved as shift
WARNING: shift/reduce conflict for GT in state 70 resolved as shift
WARNING: shift/reduce conflict for EQ in state 70 resolved as shift
WARNING: shift/reduce conflict for NE in state 70 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 92 resolved as shift
WARNING: shift/reduce conflict for MAS in state 104 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 104 resolved as shift
WARNING: shift/reduce conflict for POR in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 104 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 104 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 104 resolved as shift
WARNING: shift/reduce conflict for OR_LOGICO in state 104 resolved as shift
WARNING: shift/reduce conflict for AND_LOGICO in state 104 resolved as shift
WARNING: shift/reduce conflict for XOR_LOGICO in state 104 resolved as shift
WARNING: shift/reduce conflict for GE in state 104 resolved as shift
WARNING: shift/reduce conflict for LE in state 104 resolved as shift
WARNING: shift/reduce conflict for LT in state 104 resolved as shift
WARNING: shift/reduce conflict for GT in state 104 resolved as shift
WARNING: shift/reduce conflict for EQ in state 104 resolved as shift
WARNING: shift/reduce conflict for NE in state 104 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (inicio -> expresion)
WARNING: rejected rule (lista_expresiones -> expresion) in state 2
